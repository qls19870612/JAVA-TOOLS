// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server/log.proto

package app.protobuf.server;

public final class LogContent {
  private LogContent() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface LogEnumOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.LogEnum)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code proto.LogEnum}
   */
  public static final class LogEnum extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.LogEnum)
      LogEnumOrBuilder {
    // Use LogEnum.newBuilder() to construct.
    private LogEnum(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LogEnum(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LogEnum defaultInstance;
    public static LogEnum getDefaultInstance() {
      return defaultInstance;
    }

    public LogEnum getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LogEnum(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return app.protobuf.server.LogContent.internal_static_proto_LogEnum_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return app.protobuf.server.LogContent.internal_static_proto_LogEnum_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              app.protobuf.server.LogContent.LogEnum.class, app.protobuf.server.LogContent.LogEnum.Builder.class);
    }

    public static com.google.protobuf.Parser<LogEnum> PARSER =
        new com.google.protobuf.AbstractParser<LogEnum>() {
      public LogEnum parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogEnum(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LogEnum> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code proto.LogEnum.OperateType}
     */
    public enum OperateType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SYSTEM = 1;</code>
       *
       * <pre>
       * 系统
       * </pre>
       */
      SYSTEM(0, 1),
      /**
       * <code>GM = 2;</code>
       *
       * <pre>
       * GM操作
       * </pre>
       */
      GM(1, 2),
      /**
       * <code>PLAYER = 3;</code>
       *
       * <pre>
       *玩家操作
       * </pre>
       */
      PLAYER(2, 3),
      /**
       * <code>SEND_MAIL = 4;</code>
       *
       * <pre>
       * 邮件
       * </pre>
       */
      SEND_MAIL(3, 4),
      /**
       * <code>COLLECT_MAIL = 5;</code>
       *
       * <pre>
       * 领取邮件
       * </pre>
       */
      COLLECT_MAIL(4, 5),
      /**
       * <code>GOODS_USE = 6;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      GOODS_USE(5, 6),
      /**
       * <code>SCENE_GOODS_PICK_UP = 7;</code>
       *
       * <pre>
       * 拾取
       * </pre>
       */
      SCENE_GOODS_PICK_UP(6, 7),
      /**
       * <code>USE_PACKAGE = 8;</code>
       *
       * <pre>
       * 打开礼包
       * </pre>
       */
      USE_PACKAGE(7, 8),
      /**
       * <code>KILL_MONSTER = 10;</code>
       *
       * <pre>
       * 击杀怪物
       * </pre>
       */
      KILL_MONSTER(8, 10),
      /**
       * <code>EXP_BUFF = 11;</code>
       *
       * <pre>
       * 经验buff
       * </pre>
       */
      EXP_BUFF(9, 11),
      /**
       * <code>UNLOCK_GOODS_CONTAINER = 12;</code>
       *
       * <pre>
       * 解锁包裹格子
       * </pre>
       */
      UNLOCK_GOODS_CONTAINER(10, 12),
      /**
       * <code>SCENE_GOODS_DROP = 13;</code>
       *
       * <pre>
       * 丢弃
       * </pre>
       */
      SCENE_GOODS_DROP(11, 13),
      /**
       * <code>SHOP_SELL = 14;</code>
       *
       * <pre>
       * 物品出售
       * </pre>
       */
      SHOP_SELL(12, 14),
      /**
       * <code>FLY_GOODS = 15;</code>
       *
       * <pre>
       * 小飞鞋传送
       * </pre>
       */
      FLY_GOODS(13, 15),
      /**
       * <code>PET_BLESS_GOODS_CONSUME = 30;</code>
       *
       * <pre>
       * 宠物
       * </pre>
       */
      PET_BLESS_GOODS_CONSUME(14, 30),
      /**
       * <code>PET_STAT_GOODS_CONSUME = 31;</code>
       *
       * <pre>
       * 宠物使用属性丹
       * </pre>
       */
      PET_STAT_GOODS_CONSUME(15, 31),
      /**
       * <code>PET_EXP_GOODS_CONSUME = 32;</code>
       *
       * <pre>
       * 宠物吞噬
       * </pre>
       */
      PET_EXP_GOODS_CONSUME(16, 32),
      /**
       * <code>MOUNT_BLESS_GOODS_CONSUME = 33;</code>
       *
       * <pre>
       * 宠物
       * </pre>
       */
      MOUNT_BLESS_GOODS_CONSUME(17, 33),
      /**
       * <code>MOUNT_STAT_GOODS_CONSUME = 34;</code>
       *
       * <pre>
       * 坐骑使用属性丹
       * </pre>
       */
      MOUNT_STAT_GOODS_CONSUME(18, 34),
      /**
       * <code>OFFLINE_HANG = 40;</code>
       *
       * <pre>
       * 离线挂机
       * </pre>
       */
      OFFLINE_HANG(19, 40),
      /**
       * <code>OFFLINE_HANG_KILLED = 41;</code>
       *
       * <pre>
       * 离线挂机被杀
       * </pre>
       */
      OFFLINE_HANG_KILLED(20, 41),
      /**
       * <code>EXTERNAL_UPGRADE = 50;</code>
       *
       * <pre>
       *外显升级
       * </pre>
       */
      EXTERNAL_UPGRADE(21, 50),
      /**
       * <code>DEMON_BOSS_ENTER = 60;</code>
       *
       * <pre>
       * BOSS
       * </pre>
       */
      DEMON_BOSS_ENTER(22, 60),
      /**
       * <code>PERSONAL_BOSS_ENTER = 61;</code>
       *
       * <pre>
       * 进入个人boss副本
       * </pre>
       */
      PERSONAL_BOSS_ENTER(23, 61),
      /**
       * <code>GUARD_ELF_SWEEP = 62;</code>
       *
       * <pre>
       * 守护精灵副本扫荡
       * </pre>
       */
      GUARD_ELF_SWEEP(24, 62),
      /**
       * <code>GUARD_ELF_BUY_COUNT = 63;</code>
       *
       * <pre>
       * 守护精灵副本购买进入次数
       * </pre>
       */
      GUARD_ELF_BUY_COUNT(25, 63),
      /**
       * <code>HOME_BOSS_ENTER = 64;</code>
       *
       * <pre>
       * boss之家进入
       * </pre>
       */
      HOME_BOSS_ENTER(26, 64),
      /**
       * <code>BOSS_REWARD = 65;</code>
       *
       * <pre>
       * boss悬赏
       * </pre>
       */
      BOSS_REWARD(27, 65),
      /**
       * <code>RUNE_RESOLVE = 70;</code>
       *
       * <pre>
       *符文
       * </pre>
       */
      RUNE_RESOLVE(28, 70),
      /**
       * <code>RUNE_EXCHANGE = 71;</code>
       *
       * <pre>
       *符文兑换
       * </pre>
       */
      RUNE_EXCHANGE(29, 71),
      /**
       * <code>RUNE_UPGRADE = 72;</code>
       *
       * <pre>
       *符文升级
       * </pre>
       */
      RUNE_UPGRADE(30, 72),
      /**
       * <code>TOWER_DAILY_PRIZE = 80;</code>
       *
       * <pre>
       *天罚圣殿 (爬塔副本)
       * </pre>
       */
      TOWER_DAILY_PRIZE(31, 80),
      /**
       * <code>TOWER_PAST_LAYER_PRIZE = 81;</code>
       *
       * <pre>
       *爬塔通关一层奖励
       * </pre>
       */
      TOWER_PAST_LAYER_PRIZE(32, 81),
      /**
       * <code>MOKU_MERGER_COST_DIAMOND = 100;</code>
       *
       * <pre>
       *魔窟副本
       * </pre>
       */
      MOKU_MERGER_COST_DIAMOND(33, 100),
      /**
       * <code>MOKU_ENTER_COST_GOODS = 101;</code>
       *
       * <pre>
       *魔窟进入消耗物品
       * </pre>
       */
      MOKU_ENTER_COST_GOODS(34, 101),
      /**
       * <code>MOKU_INSPIRE_COST_DIAMOND = 102;</code>
       *
       * <pre>
       *魔窟鼓舞消耗钻石
       * </pre>
       */
      MOKU_INSPIRE_COST_DIAMOND(35, 102),
      /**
       * <code>MOKU_INSPIRE_COST_MONEY = 103;</code>
       *
       * <pre>
       *魔窟鼓舞消耗金币
       * </pre>
       */
      MOKU_INSPIRE_COST_MONEY(36, 103),
      /**
       * <code>MOKU_BUY_TIMES_COST_DIAMOND = 104;</code>
       *
       * <pre>
       *魔窟购买次数消耗钻石
       * </pre>
       */
      MOKU_BUY_TIMES_COST_DIAMOND(37, 104),
      /**
       * <code>CLEAR_MO_KU_CD_COST_DIAMOND = 105;</code>
       *
       * <pre>
       *清除魔窟CD消耗钻石
       * </pre>
       */
      CLEAR_MO_KU_CD_COST_DIAMOND(38, 105),
      /**
       * <code>MOKU_MERGER_GET_EXP = 106;</code>
       *
       * <pre>
       *魔窟合并获得经验
       * </pre>
       */
      MOKU_MERGER_GET_EXP(39, 106),
      /**
       * <code>SPRITE_EXPIRED = 110;</code>
       *
       * <pre>
       *小鬼怪
       * </pre>
       */
      SPRITE_EXPIRED(40, 110),
      /**
       * <code>SPRITE_UNLOAD = 111;</code>
       *
       * <pre>
       *小鬼怪卸载
       * </pre>
       */
      SPRITE_UNLOAD(41, 111),
      /**
       * <code>SPRITE_RENEW = 112;</code>
       *
       * <pre>
       *小鬼怪续费
       * </pre>
       */
      SPRITE_RENEW(42, 112),
      /**
       * <code>EQUIP_ENHANCE = 120;</code>
       *
       * <pre>
       * 装备
       * </pre>
       */
      EQUIP_ENHANCE(43, 120),
      /**
       * <code>REPLACE_GEM = 121;</code>
       *
       * <pre>
       * 替换宝石
       * </pre>
       */
      REPLACE_GEM(44, 121),
      /**
       * <code>FORGE_SUIT = 122;</code>
       *
       * <pre>
       * 打造套装
       * </pre>
       */
      FORGE_SUIT(45, 122),
      /**
       * <code>SUIT_RETURN = 123;</code>
       *
       * <pre>
       * 套装替换返还
       * </pre>
       */
      SUIT_RETURN(46, 123),
      /**
       * <code>WASH_SLOT_OPEN = 124;</code>
       *
       * <pre>
       * 洗练槽开启
       * </pre>
       */
      WASH_SLOT_OPEN(47, 124),
      /**
       * <code>WASH_EUQIP = 125;</code>
       *
       * <pre>
       * 装备洗练
       * </pre>
       */
      WASH_EUQIP(48, 125),
      /**
       * <code>EQUIP_REWARD = 126;</code>
       *
       * <pre>
       * 装备悬赏
       * </pre>
       */
      EQUIP_REWARD(49, 126),
      /**
       * <code>ASCEND_PRODUCT = 127;</code>
       *
       * <pre>
       *装备升品
       * </pre>
       */
      ASCEND_PRODUCT(50, 127),
      /**
       * <code>ASCEND_RETURN = 128;</code>
       *
       * <pre>
       * 升品返还
       * </pre>
       */
      ASCEND_RETURN(51, 128),
      /**
       * <code>EQUIP_ADVANCE = 129;</code>
       *
       * <pre>
       * 装备进阶
       * </pre>
       */
      EQUIP_ADVANCE(52, 129),
      /**
       * <code>REINI_ONE_KEY = 130;</code>
       *
       * <pre>
       *转职一键完成
       * </pre>
       */
      REINI_ONE_KEY(53, 130),
      /**
       * <code>REIN_DUNGEON_DONE = 131;</code>
       *
       * <pre>
       * 转职副本完成
       * </pre>
       */
      REIN_DUNGEON_DONE(54, 131),
      /**
       * <code>REIN_SUCCESS = 132;</code>
       *
       * <pre>
       * 转职成功
       * </pre>
       */
      REIN_SUCCESS(55, 132),
      /**
       * <code>XUE_ZHEN_DUNGEON_DONE = 140;</code>
       *
       * <pre>
       * 魔灵血阵副本完成
       * </pre>
       */
      XUE_ZHEN_DUNGEON_DONE(56, 140),
      /**
       * <code>XUE_ZHEN_DUNGEON_HELP = 141;</code>
       *
       * <pre>
       * 魔灵血阵助战成功
       * </pre>
       */
      XUE_ZHEN_DUNGEON_HELP(57, 141),
      /**
       * <code>CREATE_GUILD = 150;</code>
       *
       * <pre>
       * 仙盟
       * </pre>
       */
      CREATE_GUILD(58, 150),
      /**
       * <code>NOTICE_GUILD_ANNOUNCEMENT = 151;</code>
       *
       * <pre>
       * 仙盟公告通知
       * </pre>
       */
      NOTICE_GUILD_ANNOUNCEMENT(59, 151),
      /**
       * <code>GUILD_TRANS_PRESIDENT = 152;</code>
       *
       * <pre>
       * 仙盟盟主自动转让
       * </pre>
       */
      GUILD_TRANS_PRESIDENT(60, 152),
      /**
       * <code>GUILD_DAILY_PRIZE = 153;</code>
       *
       * <pre>
       * 仙盟每日奖励
       * </pre>
       */
      GUILD_DAILY_PRIZE(61, 153),
      /**
       * <code>GUILD_VIP_RED_PACKET = 154;</code>
       *
       * <pre>
       * vip红包发放
       * </pre>
       */
      GUILD_VIP_RED_PACKET(62, 154),
      /**
       * <code>GUILD_RED_PACKET = 155;</code>
       *
       * <pre>
       * 红包领取
       * </pre>
       */
      GUILD_RED_PACKET(63, 155),
      /**
       * <code>GUILD_DONATE_FAIL = 156;</code>
       *
       * <pre>
       * 捐献道具失败
       * </pre>
       */
      GUILD_DONATE_FAIL(64, 156),
      /**
       * <code>GUILD_DONATE = 157;</code>
       *
       * <pre>
       * 捐献道具失败
       * </pre>
       */
      GUILD_DONATE(65, 157),
      /**
       * <code>GUILD_EXCHANGE_GOODS = 158;</code>
       *
       * <pre>
       * 兑换仓库道具
       * </pre>
       */
      GUILD_EXCHANGE_GOODS(66, 158),
      /**
       * <code>GUILD_UPGRADE_SKILL = 159;</code>
       *
       * <pre>
       * 仙盟学习心法
       * </pre>
       */
      GUILD_UPGRADE_SKILL(67, 159),
      /**
       * <code>GUILD_LEAVE = 160;</code>
       *
       * <pre>
       * 离开仙盟
       * </pre>
       */
      GUILD_LEAVE(68, 160),
      /**
       * <code>GUILD_KILL_BEAST = 161;</code>
       *
       * <pre>
       * 击杀兽神
       * </pre>
       */
      GUILD_KILL_BEAST(69, 161),
      /**
       * <code>GUILD_OPEN_BEAST = 162;</code>
       *
       * <pre>
       * 开启兽神
       * </pre>
       */
      GUILD_OPEN_BEAST(70, 162),
      /**
       * <code>SHOU_LIANG_DONATE = 163;</code>
       *
       * <pre>
       * 捐献兽粮
       * </pre>
       */
      SHOU_LIANG_DONATE(71, 163),
      /**
       * <code>GUILD_TASK_COMPLETE = 164;</code>
       *
       * <pre>
       *公会周任务完成
       * </pre>
       */
      GUILD_TASK_COMPLETE(72, 164),
      /**
       * <code>GUILD_TASK_ONE_KEY_COMPLETE = 165;</code>
       *
       * <pre>
       *公会周任务一键完成
       * </pre>
       */
      GUILD_TASK_ONE_KEY_COMPLETE(73, 165),
      /**
       * <code>GUILD_WAR_BATTLE_ATTEND_PRIZE = 166;</code>
       *
       * <pre>
       * 跨服公会战单场参与奖励
       * </pre>
       */
      GUILD_WAR_BATTLE_ATTEND_PRIZE(74, 166),
      /**
       * <code>GUILD_WAR_BATTLE_RESULT_PRIZE = 167;</code>
       *
       * <pre>
       * 跨服公会战单场胜负奖励
       * </pre>
       */
      GUILD_WAR_BATTLE_RESULT_PRIZE(75, 167),
      /**
       * <code>GUILD_WAR_BATTLE_RANK_PRIZE = 168;</code>
       *
       * <pre>
       * 跨服公会战单场排名奖励
       * </pre>
       */
      GUILD_WAR_BATTLE_RANK_PRIZE(76, 168),
      /**
       * <code>GUILD_WAR_BATTLE_GUILD_PRIZE = 169;</code>
       *
       * <pre>
       * 跨服公会战单场战斗奖励(发给会长)
       * </pre>
       */
      GUILD_WAR_BATTLE_GUILD_PRIZE(77, 169),
      /**
       * <code>GUILD_WAR_WEEKLY_PRIZE = 170;</code>
       *
       * <pre>
       * 跨服公会战周奖励
       * </pre>
       */
      GUILD_WAR_WEEKLY_PRIZE(78, 170),
      /**
       * <code>GUILD_WAR_SEASON_PRIZE = 171;</code>
       *
       * <pre>
       * 跨服公会战月奖励
       * </pre>
       */
      GUILD_WAR_SEASON_PRIZE(79, 171),
      /**
       * <code>GUILD_WAR_BATTLE_NOTICE = 172;</code>
       *
       * <pre>
       * 跨服公会战战斗通知
       * </pre>
       */
      GUILD_WAR_BATTLE_NOTICE(80, 172),
      /**
       * <code>GUILD_WAR_ORDER_NOTICE = 173;</code>
       *
       * <pre>
       * 跨服公会战预约通知
       * </pre>
       */
      GUILD_WAR_ORDER_NOTICE(81, 173),
      /**
       * <code>AUCITON_ON_SELL = 180;</code>
       *
       * <pre>
       * 市场
       * </pre>
       */
      AUCITON_ON_SELL(82, 180),
      /**
       * <code>AUCTION_BUY_SELL = 181;</code>
       *
       * <pre>
       * 市场购买出售物品
       * </pre>
       */
      AUCTION_BUY_SELL(83, 181),
      /**
       * <code>AUCTION_SELL_EXPIRED = 182;</code>
       *
       * <pre>
       * 市场出售物品过期
       * </pre>
       */
      AUCTION_SELL_EXPIRED(84, 182),
      /**
       * <code>AUCTION_ON_BUY = 183;</code>
       *
       * <pre>
       * 市场求购物品
       * </pre>
       */
      AUCTION_ON_BUY(85, 183),
      /**
       * <code>AUCTION_SELL_BUY = 184;</code>
       *
       * <pre>
       * 市场出售求购物品
       * </pre>
       */
      AUCTION_SELL_BUY(86, 184),
      /**
       * <code>AUCTION_BUY_EXPIRED = 185;</code>
       *
       * <pre>
       * 市场求购物品过期
       * </pre>
       */
      AUCTION_BUY_EXPIRED(87, 185),
      /**
       * <code>AUCTION_CANCEL_SELL = 186;</code>
       *
       * <pre>
       * 市场取消上架
       * </pre>
       */
      AUCTION_CANCEL_SELL(88, 186),
      /**
       * <code>AUCTION_CANCEL_BUY = 187;</code>
       *
       * <pre>
       * 市场取消求购
       * </pre>
       */
      AUCTION_CANCEL_BUY(89, 187),
      /**
       * <code>AUCTION_ON_SELL_FAILED = 188;</code>
       *
       * <pre>
       * 市场上架失败
       * </pre>
       */
      AUCTION_ON_SELL_FAILED(90, 188),
      /**
       * <code>AUCTION_ON_BUY_FAILED = 189;</code>
       *
       * <pre>
       * 市场求购失败
       * </pre>
       */
      AUCTION_ON_BUY_FAILED(91, 189),
      /**
       * <code>COMPOND_COST = 190;</code>
       *
       * <pre>
       * 合成消耗
       * </pre>
       */
      COMPOND_COST(92, 190),
      /**
       * <code>COMPOND_GOODS = 191;</code>
       *
       * <pre>
       * 合成物品
       * </pre>
       */
      COMPOND_GOODS(93, 191),
      /**
       * <code>BAO_KU_BUY_COUNT = 200;</code>
       *
       * <pre>
       * 魔王宝库副本购买进入次数
       * </pre>
       */
      BAO_KU_BUY_COUNT(94, 200),
      /**
       * <code>BAO_KU_SWEEP = 201;</code>
       *
       * <pre>
       * 魔王宝库副本扫荡
       * </pre>
       */
      BAO_KU_SWEEP(95, 201),
      /**
       * <code>MARRIAGE_PROPOSE = 210;</code>
       *
       * <pre>
       * 结婚
       * </pre>
       */
      MARRIAGE_PROPOSE(96, 210),
      /**
       * <code>MARRIAGE_PROPOSE_FAILED = 211;</code>
       *
       * <pre>
       * 求婚失败
       * </pre>
       */
      MARRIAGE_PROPOSE_FAILED(97, 211),
      /**
       * <code>MARRIAGE_PROPOSE_EXPIRED = 212;</code>
       *
       * <pre>
       * 求婚超时
       * </pre>
       */
      MARRIAGE_PROPOSE_EXPIRED(98, 212),
      /**
       * <code>MARRIAGE_PROPOSE_SUCCESS = 213;</code>
       *
       * <pre>
       * 求婚成功
       * </pre>
       */
      MARRIAGE_PROPOSE_SUCCESS(99, 213),
      /**
       * <code>MARRIAGE_ORDER_WEDDING = 214;</code>
       *
       * <pre>
       * 预约婚礼
       * </pre>
       */
      MARRIAGE_ORDER_WEDDING(100, 214),
      /**
       * <code>MARRIAGE_INVITE_WEDDING = 215;</code>
       *
       * <pre>
       * 邀请宾客
       * </pre>
       */
      MARRIAGE_INVITE_WEDDING(101, 215),
      /**
       * <code>MARRIAGE_DIVORCE = 216;</code>
       *
       * <pre>
       * 离婚
       * </pre>
       */
      MARRIAGE_DIVORCE(102, 216),
      /**
       * <code>MARRIAGE_BUY_INVITE_COUNT = 217;</code>
       *
       * <pre>
       * 购买邀请次数
       * </pre>
       */
      MARRIAGE_BUY_INVITE_COUNT(103, 217),
      /**
       * <code>MARRIAGE_COLLECT_CANDY = 218;</code>
       *
       * <pre>
       * 收集喜糖
       * </pre>
       */
      MARRIAGE_COLLECT_CANDY(104, 218),
      /**
       * <code>MARRIAGE_COLLECT_BANQUET = 219;</code>
       *
       * <pre>
       * 收集喜宴
       * </pre>
       */
      MARRIAGE_COLLECT_BANQUET(105, 219),
      /**
       * <code>MARRIAGE_WEDDING_EXP = 220;</code>
       *
       * <pre>
       * 婚礼泡点
       * </pre>
       */
      MARRIAGE_WEDDING_EXP(106, 220),
      /**
       * <code>SEND_FLOWER = 221;</code>
       *
       * <pre>
       * 送花
       * </pre>
       */
      SEND_FLOWER(107, 221),
      /**
       * <code>SEND_WEDDING_DIAMOND = 222;</code>
       *
       * <pre>
       * 新婚祝福
       * </pre>
       */
      SEND_WEDDING_DIAMOND(108, 222),
      /**
       * <code>WEDDING_RING_UPGRADE = 223;</code>
       *
       * <pre>
       * 升级婚戒
       * </pre>
       */
      WEDDING_RING_UPGRADE(109, 223),
      /**
       * <code>GIVE_CRYSTAL = 224;</code>
       *
       * <pre>
       * 赠送守护水晶
       * </pre>
       */
      GIVE_CRYSTAL(110, 224),
      /**
       * <code>GET_CRYSTAL_PRIZE = 225;</code>
       *
       * <pre>
       * 领取守护水晶奖励
       * </pre>
       */
      GET_CRYSTAL_PRIZE(111, 225),
      /**
       * <code>GET_CRYSTAL_DAILY_PRIZE = 226;</code>
       *
       * <pre>
       * 领取守护水晶每日奖励
       * </pre>
       */
      GET_CRYSTAL_DAILY_PRIZE(112, 226),
      /**
       * <code>ACTIVE_CHILD = 227;</code>
       *
       * <pre>
       * 激活仙娃
       * </pre>
       */
      ACTIVE_CHILD(113, 227),
      /**
       * <code>DECOMPOSE_CHILD = 228;</code>
       *
       * <pre>
       * 分解仙娃
       * </pre>
       */
      DECOMPOSE_CHILD(114, 228),
      /**
       * <code>UPGRADE_CHILD = 229;</code>
       *
       * <pre>
       * 升阶仙娃
       * </pre>
       */
      UPGRADE_CHILD(115, 229),
      /**
       * <code>BUY_MATE_DUNGEON_COUNT = 230;</code>
       *
       * <pre>
       * 购买仙侣副本次数
       * </pre>
       */
      BUY_MATE_DUNGEON_COUNT(116, 230),
      /**
       * <code>FINISH_MATE_DUNGEON = 231;</code>
       *
       * <pre>
       * 通关仙侣副本
       * </pre>
       */
      FINISH_MATE_DUNGEON(117, 231),
      /**
       * <code>EXAM_ANSWER = 251;</code>
       *
       * <pre>
       *个人答题
       * </pre>
       */
      EXAM_ANSWER(118, 251),
      /**
       * <code>KF_EXAM_ANSWER = 252;</code>
       *
       * <pre>
       *跨服答题
       * </pre>
       */
      KF_EXAM_ANSWER(119, 252),
      /**
       * <code>VIP_RECHARGE_REBATE = 260;</code>
       *
       * <pre>
       * vip
       * </pre>
       */
      VIP_RECHARGE_REBATE(120, 260),
      /**
       * <code>FREE_VIP = 261;</code>
       *
       * <pre>
       * 免费vip卡领取
       * </pre>
       */
      FREE_VIP(121, 261),
      /**
       * <code>BUY_VIP_CARD = 262;</code>
       *
       * <pre>
       * 购买vip卡
       * </pre>
       */
      BUY_VIP_CARD(122, 262),
      /**
       * <code>VIP_WEEKLY_PRIZE = 263;</code>
       *
       * <pre>
       * vip周奖励
       * </pre>
       */
      VIP_WEEKLY_PRIZE(123, 263),
      /**
       * <code>VIP_ONCE_PRIZE = 264;</code>
       *
       * <pre>
       * vip等级奖励
       * </pre>
       */
      VIP_ONCE_PRIZE(124, 264),
      /**
       * <code>VIP_STORE_EXP = 265;</code>
       *
       * <pre>
       * vip存储经验
       * </pre>
       */
      VIP_STORE_EXP(125, 265),
      /**
       * <code>VIP_EXPIRED = 266;</code>
       *
       * <pre>
       * vip过期
       * </pre>
       */
      VIP_EXPIRED(126, 266),
      /**
       * <code>GET_ACHIEVEMENT_PRIZE = 270;</code>
       *
       * <pre>
       * 获取成就奖励
       * </pre>
       */
      GET_ACHIEVEMENT_PRIZE(127, 270),
      /**
       * <code>GET_ACHIEVEMENT_SOCRE_PRIZE = 271;</code>
       *
       * <pre>
       * 获取成就积分奖励
       * </pre>
       */
      GET_ACHIEVEMENT_SOCRE_PRIZE(128, 271),
      /**
       * <code>SHOP_BUY = 280;</code>
       *
       * <pre>
       * 商城购买
       * </pre>
       */
      SHOP_BUY(129, 280),
      /**
       * <code>UPGRADE_REALM = 290;</code>
       *
       * <pre>
       *提升境界
       * </pre>
       */
      UPGRADE_REALM(130, 290),
      /**
       * <code>HONOR_BATTLE_CHALLENGE = 300;</code>
       *
       * <pre>
       * pvp
       * </pre>
       */
      HONOR_BATTLE_CHALLENGE(131, 300),
      /**
       * <code>HONOR_BATTLE_INSPIRE = 301;</code>
       *
       * <pre>
       * 荣耀挑战鼓舞
       * </pre>
       */
      HONOR_BATTLE_INSPIRE(132, 301),
      /**
       * <code>HONOR_BATTLE_BUY = 302;</code>
       *
       * <pre>
       * 荣耀挑战购买次数
       * </pre>
       */
      HONOR_BATTLE_BUY(133, 302),
      /**
       * <code>HONOR_BATTLE_RANK_PRIZE = 303;</code>
       *
       * <pre>
       * 荣耀挑战排名奖励
       * </pre>
       */
      HONOR_BATTLE_RANK_PRIZE(134, 303),
      /**
       * <code>PEAK_COMBAT_DAILY_PRIZE = 304;</code>
       *
       * <pre>
       * 巅峰竞技每日奖励
       * </pre>
       */
      PEAK_COMBAT_DAILY_PRIZE(135, 304),
      /**
       * <code>PEAK_COMBAT_BOX_PRIZE = 305;</code>
       *
       * <pre>
       * 巅峰竞技宝箱奖励
       * </pre>
       */
      PEAK_COMBAT_BOX_PRIZE(136, 305),
      /**
       * <code>PEAK_COMBAT_FINISH_DUNGEON = 306;</code>
       *
       * <pre>
       * 巅峰竞技比赛奖励
       * </pre>
       */
      PEAK_COMBAT_FINISH_DUNGEON(137, 306),
      /**
       * <code>RED_NAME_BEEN_KILLED = 307;</code>
       *
       * <pre>
       * 红名被杀
       * </pre>
       */
      RED_NAME_BEEN_KILLED(138, 307),
      /**
       * <code>RELIVE = 308;</code>
       *
       * <pre>
       * 复活
       * </pre>
       */
      RELIVE(139, 308),
      /**
       * <code>BRAVE_PEAK_PASS_LAYER = 309;</code>
       *
       * <pre>
       * 勇者之巅通关副本
       * </pre>
       */
      BRAVE_PEAK_PASS_LAYER(140, 309),
      /**
       * <code>THREE_BATTLE_RANK = 310;</code>
       *
       * <pre>
       * 三界战场排名结算
       * </pre>
       */
      THREE_BATTLE_RANK(141, 310),
      /**
       * <code>THREE_BATTLE_POINT = 311;</code>
       *
       * <pre>
       * 三界战场积分结算
       * </pre>
       */
      THREE_BATTLE_POINT(142, 311),
      /**
       * <code>KF_PEAK_COMBAT_EXPLOIT_PRIZE = 312;</code>
       *
       * <pre>
       * 跨服天梯争霸功勋奖励
       * </pre>
       */
      KF_PEAK_COMBAT_EXPLOIT_PRIZE(143, 312),
      /**
       * <code>KF_PEAK_COMBAT_RANK_PRIZE = 313;</code>
       *
       * <pre>
       * 跨服天梯争霸排名奖励
       * </pre>
       */
      KF_PEAK_COMBAT_RANK_PRIZE(144, 313),
      /**
       * <code>KF_PEAK_COMBAT_BUY = 314;</code>
       *
       * <pre>
       * 跨服天梯争霸购买次数
       * </pre>
       */
      KF_PEAK_COMBAT_BUY(145, 314),
      /**
       * <code>RESOUCE_BAKC_MONEY = 320;</code>
       *
       * <pre>
       * 资源找回金币找回
       * </pre>
       */
      RESOUCE_BAKC_MONEY(146, 320),
      /**
       * <code>RESOUCE_BAKC_DIAMOND = 321;</code>
       *
       * <pre>
       * 资源找回钻石找回
       * </pre>
       */
      RESOUCE_BAKC_DIAMOND(147, 321),
      /**
       * <code>GET_LIVENESS_PRIZE = 330;</code>
       *
       * <pre>
       * 获取活跃度奖励
       * </pre>
       */
      GET_LIVENESS_PRIZE(148, 330),
      /**
       * <code>OPEN_FUNCTION = 331;</code>
       *
       * <pre>
       * 开启功能
       * </pre>
       */
      OPEN_FUNCTION(149, 331),
      /**
       * <code>TRANSFORM_ACTIVATE = 340;</code>
       *
       * <pre>
       * 幻化激活
       * </pre>
       */
      TRANSFORM_ACTIVATE(150, 340),
      /**
       * <code>TRANSFORM_UPSTAR = 341;</code>
       *
       * <pre>
       * 幻化升星
       * </pre>
       */
      TRANSFORM_UPSTAR(151, 341),
      /**
       * <code>TRANSFORM_RESOLVE = 343;</code>
       *
       * <pre>
       * 幻化分解
       * </pre>
       */
      TRANSFORM_RESOLVE(152, 343),
      /**
       * <code>GUILD_EXAM_COLLECT = 350;</code>
       *
       * <pre>
       * 帮派答题采集
       * </pre>
       */
      GUILD_EXAM_COLLECT(153, 350),
      /**
       * <code>GUILD_EXAM_PRIZE = 351;</code>
       *
       * <pre>
       * 帮派答题奖励
       * </pre>
       */
      GUILD_EXAM_PRIZE(154, 351),
      /**
       * <code>GUILD_EXAM_TIP = 352;</code>
       *
       * <pre>
       * 帮派答题奖励邮件提示
       * </pre>
       */
      GUILD_EXAM_TIP(155, 352),
      /**
       * <code>TALENT_WASH_POINT = 360;</code>
       *
       * <pre>
       * 天赋洗点
       * </pre>
       */
      TALENT_WASH_POINT(156, 360),
      /**
       * <code>TOU_ZI_JI_HUA_BUY = 400;</code>
       *
       * <pre>
       * 400-600 是运营活动相关，先占位
       * </pre>
       */
      TOU_ZI_JI_HUA_BUY(157, 400),
      /**
       * <code>TOU_ZI_JI_HUA_RETURN = 401;</code>
       *
       * <pre>
       * 投资计划返还
       * </pre>
       */
      TOU_ZI_JI_HUA_RETURN(158, 401),
      /**
       * <code>YUE_KA_BUY = 402;</code>
       *
       * <pre>
       * 月卡购买
       * </pre>
       */
      YUE_KA_BUY(159, 402),
      /**
       * <code>YUE_KA_DAILY_PRIZE = 403;</code>
       *
       * <pre>
       * 月卡日奖励
       * </pre>
       */
      YUE_KA_DAILY_PRIZE(160, 403),
      /**
       * <code>CHONG_JI_HAO_LI_PRIZE = 404;</code>
       *
       * <pre>
       * 冲级豪礼
       * </pre>
       */
      CHONG_JI_HAO_LI_PRIZE(161, 404),
      /**
       * <code>MEI_RI_QIAN_DAO_DAILY = 405;</code>
       *
       * <pre>
       * 每日签到
       * </pre>
       */
      MEI_RI_QIAN_DAO_DAILY(162, 405),
      /**
       * <code>MEI_RI_QIAN_DAO_SUM = 406;</code>
       *
       * <pre>
       * 每日累签
       * </pre>
       */
      MEI_RI_QIAN_DAO_SUM(163, 406),
      /**
       * <code>COUPON = 407;</code>
       *
       * <pre>
       * 激活码
       * </pre>
       */
      COUPON(164, 407),
      /**
       * <code>GONG_GAO = 408;</code>
       *
       * <pre>
       * 更新公告
       * </pre>
       */
      GONG_GAO(165, 408),
      /**
       * <code>DENG_JI_XIAN_GOU_BUY = 409;</code>
       *
       * <pre>
       * 等级限购购买
       * </pre>
       */
      DENG_JI_XIAN_GOU_BUY(166, 409),
      /**
       * <code>TIAN_SHU_XUN_ZHU = 410;</code>
       *
       * <pre>
       * 天书寻主领取奖励
       * </pre>
       */
      TIAN_SHU_XUN_ZHU(167, 410),
      /**
       * <code>LEI_CHONG = 411;</code>
       *
       * <pre>
       * 累充
       * </pre>
       */
      LEI_CHONG(168, 411),
      /**
       * <code>LIAN_CHONG = 412;</code>
       *
       * <pre>
       * 连充
       * </pre>
       */
      LIAN_CHONG(169, 412),
      /**
       * <code>QI_RI_DENG_LU = 413;</code>
       *
       * <pre>
       * 七日登陆
       * </pre>
       */
      QI_RI_DENG_LU(170, 413),
      /**
       * <code>LING_YUAN_GOU_BUY = 414;</code>
       *
       * <pre>
       * 零元钻石购
       * </pre>
       */
      LING_YUAN_GOU_BUY(171, 414),
      /**
       * <code>LING_YUAN_GOU_RETURN = 415;</code>
       *
       * <pre>
       * 零元购返还
       * </pre>
       */
      LING_YUAN_GOU_RETURN(172, 415),
      /**
       * <code>CHONG_BANG_PRIZE = 416;</code>
       *
       * <pre>
       * 冲榜
       * </pre>
       */
      CHONG_BANG_PRIZE(173, 416),
      /**
       * <code>JING_JI_PRIZE = 417;</code>
       *
       * <pre>
       * 竞技
       * </pre>
       */
      JING_JI_PRIZE(174, 417),
      /**
       * <code>SHEN_MI_XIAN_GOU_BUY = 418;</code>
       *
       * <pre>
       * 神秘限购
       * </pre>
       */
      SHEN_MI_XIAN_GOU_BUY(175, 418),
      /**
       * <code>BOSS_SHOU_SHA = 419;</code>
       *
       * <pre>
       * boss首杀
       * </pre>
       */
      BOSS_SHOU_SHA(176, 419),
      /**
       * <code>KAI_ZONG_LI_PAI = 420;</code>
       *
       * <pre>
       * 开宗立派
       * </pre>
       */
      KAI_ZONG_LI_PAI(177, 420),
      /**
       * <code>JI_ZI = 421;</code>
       *
       * <pre>
       * 集字活动
       * </pre>
       */
      JI_ZI(178, 421),
      /**
       * <code>XIAN_MENG_ZHENG_BA = 422;</code>
       *
       * <pre>
       * 仙盟争霸活动
       * </pre>
       */
      XIAN_MENG_ZHENG_BA(179, 422),
      /**
       * <code>RECHARGE = 423;</code>
       *
       * <pre>
       * 充值
       * </pre>
       */
      RECHARGE(180, 423),
      /**
       * <code>FIRST_RECHARGE = 424;</code>
       *
       * <pre>
       * 首充
       * </pre>
       */
      FIRST_RECHARGE(181, 424),
      /**
       * <code>DAILY_RECHARGE_DIAMOND = 425;</code>
       *
       * <pre>
       * 每日绑钻礼包
       * </pre>
       */
      DAILY_RECHARGE_DIAMOND(182, 425),
      /**
       * <code>DAILY_ADD_UP_RECHAGE = 426;</code>
       *
       * <pre>
       * 每日累充
       * </pre>
       */
      DAILY_ADD_UP_RECHAGE(183, 426),
      /**
       * <code>DAYS_RECHARGE = 427;</code>
       *
       * <pre>
       * 累计充值
       * </pre>
       */
      DAYS_RECHARGE(184, 427),
      /**
       * <code>BIND_DIAMOND = 428;</code>
       *
       * <pre>
       * 绑钻礼包
       * </pre>
       */
      BIND_DIAMOND(185, 428),
      /**
       * <code>CLIENT_DOWNLOAD = 429;</code>
       *
       * <pre>
       * 分包下载
       * </pre>
       */
      CLIENT_DOWNLOAD(186, 429),
      /**
       * <code>LING_YUAN_GOU_BIND_DIAMOND_BUY = 430;</code>
       *
       * <pre>
       * 零元绑定钻石购
       * </pre>
       */
      LING_YUAN_GOU_BIND_DIAMOND_BUY(187, 430),
      /**
       * <code>DENG_LU = 431;</code>
       *
       * <pre>
       * 登陆有礼
       * </pre>
       */
      DENG_LU(188, 431),
      /**
       * <code>GOODS_EXCHAGNGE = 432;</code>
       *
       * <pre>
       * 庆典兑换
       * </pre>
       */
      GOODS_EXCHAGNGE(189, 432),
      /**
       * <code>ANGEL_TREASURE = 433;</code>
       *
       * <pre>
       * 天使秘宝
       * </pre>
       */
      ANGEL_TREASURE(190, 433),
      /**
       * <code>KUANG_HAI = 434;</code>
       *
       * <pre>
       * 庆典狂嗨
       * </pre>
       */
      KUANG_HAI(191, 434),
      /**
       * <code>CLOUND_BUY = 435;</code>
       *
       * <pre>
       *限时云购
       * </pre>
       */
      CLOUND_BUY(192, 435),
      /**
       * <code>CLOUND_BUY_MUST_HIT = 436;</code>
       *
       * <pre>
       *限时云购次数满，从购买人列表中，抽取一个人给奖励
       * </pre>
       */
      CLOUND_BUY_MUST_HIT(193, 436),
      /**
       * <code>DAILY_ADD_UP_CONSUME = 437;</code>
       *
       * <pre>
       * 每日累计消费
       * </pre>
       */
      DAILY_ADD_UP_CONSUME(194, 437),
      /**
       * <code>DAYS_CONSUME = 438;</code>
       *
       * <pre>
       * 累计消费
       * </pre>
       */
      DAYS_CONSUME(195, 438),
      /**
       * <code>TIAN_TIAN_FAN_LI_MAIL = 439;</code>
       *
       * <pre>
       *天天返利，未领取时发的邮件
       * </pre>
       */
      TIAN_TIAN_FAN_LI_MAIL(196, 439),
      /**
       * <code>TIAN_TIAN_FAN_LI = 440;</code>
       *
       * <pre>
       *天天返利领取奖励
       * </pre>
       */
      TIAN_TIAN_FAN_LI(197, 440),
      /**
       * <code>LUCK_SHOP_REFRESH = 441;</code>
       *
       * <pre>
       *幸运商店刷新
       * </pre>
       */
      LUCK_SHOP_REFRESH(198, 441),
      /**
       * <code>LUCK_SHOP_BUY = 442;</code>
       *
       * <pre>
       *幸运商店购买
       * </pre>
       */
      LUCK_SHOP_BUY(199, 442),
      /**
       * <code>BUY_YAN_HUA_QING_DIAN = 443;</code>
       *
       * <pre>
       *购买烟花庆典
       * </pre>
       */
      BUY_YAN_HUA_QING_DIAN(200, 443),
      /**
       * <code>BOSS_TOU_ZI_BUY = 444;</code>
       *
       * <pre>
       * boss投资购买
       * </pre>
       */
      BOSS_TOU_ZI_BUY(201, 444),
      /**
       * <code>BOSS_TOU_ZI_GET_PRIZE = 445;</code>
       *
       * <pre>
       * boss投资领取奖励
       * </pre>
       */
      BOSS_TOU_ZI_GET_PRIZE(202, 445),
      /**
       * <code>CLOUD_BUY_UNLIMIT = 446;</code>
       *
       * <pre>
       *云购不限时邮件
       * </pre>
       */
      CLOUD_BUY_UNLIMIT(203, 446),
      /**
       * <code>PERFECT_COUPLE_PRIZE = 447;</code>
       *
       * <pre>
       * 完美情人奖励领取
       * </pre>
       */
      PERFECT_COUPLE_PRIZE(204, 447),
      /**
       * <code>BUY_SPRITE_GOODS_RETURN_EXP = 448;</code>
       *
       * <pre>
       * 购买小魔龙返还经验
       * </pre>
       */
      BUY_SPRITE_GOODS_RETURN_EXP(205, 448),
      /**
       * <code>DAILY_ADD_UP_LEI_XIAO = 449;</code>
       *
       * <pre>
       * 每日累消
       * </pre>
       */
      DAILY_ADD_UP_LEI_XIAO(206, 449),
      /**
       * <code>DIAN_FENG_PAI_HANG_PRIZE = 450;</code>
       *
       * <pre>
       * 巅峰排行
       * </pre>
       */
      DIAN_FENG_PAI_HANG_PRIZE(207, 450),
      /**
       * <code>TREASURE_BOX_OPEN = 451;</code>
       *
       * <pre>
       * 开启宝藏副本箱子
       * </pre>
       */
      TREASURE_BOX_OPEN(208, 451),
      /**
       * <code>TREASURE_MAP_OPEN = 452;</code>
       *
       * <pre>
       * 开启藏宝图宝藏
       * </pre>
       */
      TREASURE_MAP_OPEN(209, 452),
      /**
       * <code>JI_FEN_CHONG_BANG_RANK_PRIZE = 453;</code>
       *
       * <pre>
       * 积分冲榜排行奖励
       * </pre>
       */
      JI_FEN_CHONG_BANG_RANK_PRIZE(210, 453),
      /**
       * <code>JI_FEN_CHONG_BANG_DRAW = 454;</code>
       *
       * <pre>
       * 积分冲榜抽奖
       * </pre>
       */
      JI_FEN_CHONG_BANG_DRAW(211, 454),
      /**
       * <code>JI_FEN_CHONG_BANG_POINT_PRIZE = 455;</code>
       *
       * <pre>
       * 积分冲榜积分奖励
       * </pre>
       */
      JI_FEN_CHONG_BANG_POINT_PRIZE(212, 455),
      /**
       * <code>XIAN_GOU_DA_LI_BAO_BUY = 456;</code>
       *
       * <pre>
       * 限购大礼包购买
       * </pre>
       */
      XIAN_GOU_DA_LI_BAO_BUY(213, 456),
      /**
       * <code>XING_YUN_LUN_PAN_ROLL = 457;</code>
       *
       * <pre>
       * 幸运轮盘转
       * </pre>
       */
      XING_YUN_LUN_PAN_ROLL(214, 457),
      /**
       * <code>PROMOTION_PRIZE = 458;</code>
       *
       * <pre>
       * 领取进阶线奖励
       * </pre>
       */
      PROMOTION_PRIZE(215, 458),
      /**
       * <code>DISCOUNT_SHOP = 459;</code>
       *
       * <pre>
       * 折扣商城
       * </pre>
       */
      DISCOUNT_SHOP(216, 459),
      /**
       * <code>DAILY_TASK = 460;</code>
       *
       * <pre>
       * 每日任务
       * </pre>
       */
      DAILY_TASK(217, 460),
      /**
       * <code>HEGEMONY_END_FIXED_PRIZE = 601;</code>
       *
       * <pre>
       * 400-600 是运营活动相关，先占位
       * </pre>
       */
      HEGEMONY_END_FIXED_PRIZE(218, 601),
      /**
       * <code>HEGEMONY_END_RANK_PRIZE = 602;</code>
       *
       * <pre>
       * 帮派争霸排名奖励
       * </pre>
       */
      HEGEMONY_END_RANK_PRIZE(219, 602),
      /**
       * <code>DOMINATE_CONTINUE_WIN_PRIZE = 603;</code>
       *
       * <pre>
       * 主宰帮会连胜奖励
       * </pre>
       */
      DOMINATE_CONTINUE_WIN_PRIZE(220, 603),
      /**
       * <code>DOMINATE_GUILD_DAILY_PRIZE = 604;</code>
       *
       * <pre>
       * 主宰帮会成员每日奖励
       * </pre>
       */
      DOMINATE_GUILD_DAILY_PRIZE(221, 604),
      /**
       * <code>MONEY_PRAY_FREE = 610;</code>
       *
       * <pre>
       *金币祈福免费
       * </pre>
       */
      MONEY_PRAY_FREE(222, 610),
      /**
       * <code>MONEY_PRAY_COST_DIAMOND = 611;</code>
       *
       * <pre>
       *金币祈福消耗钻石
       * </pre>
       */
      MONEY_PRAY_COST_DIAMOND(223, 611),
      /**
       * <code>EXP_PRAY_COST_DIAMOND = 612;</code>
       *
       * <pre>
       *经验祈福消耗钻石
       * </pre>
       */
      EXP_PRAY_COST_DIAMOND(224, 612),
      /**
       * <code>RUNE_LOTTERTY_ONE_TIME_FREE = 620;</code>
       *
       * <pre>
       *符文抽奖免费
       * </pre>
       */
      RUNE_LOTTERTY_ONE_TIME_FREE(225, 620),
      /**
       * <code>RUNE_LOTTERTY_ONE_TIME = 621;</code>
       *
       * <pre>
       *使用钻石抽奖符文一次
       * </pre>
       */
      RUNE_LOTTERTY_ONE_TIME(226, 621),
      /**
       * <code>RUNE_LOTTERTY_TEN_TIME = 623;</code>
       *
       * <pre>
       *使用钻石抽奖符文十次
       * </pre>
       */
      RUNE_LOTTERTY_TEN_TIME(227, 623),
      /**
       * <code>RUNE_LOTTERTY_GET_WEEKLY_PRIZE = 624;</code>
       *
       * <pre>
       *领取周抽奖次数 奖励
       * </pre>
       */
      RUNE_LOTTERTY_GET_WEEKLY_PRIZE(228, 624),
      /**
       * <code>EQUIP_LOTTERY_1 = 630;</code>
       *
       * <pre>
       *装备寻宝1档
       * </pre>
       */
      EQUIP_LOTTERY_1(229, 630),
      /**
       * <code>EQUIP_LOTTERY_2 = 631;</code>
       *
       * <pre>
       *装备寻宝2档
       * </pre>
       */
      EQUIP_LOTTERY_2(230, 631),
      /**
       * <code>EQUIP_LOTTERY_3 = 632;</code>
       *
       * <pre>
       *装备寻宝3档
       * </pre>
       */
      EQUIP_LOTTERY_3(231, 632),
      /**
       * <code>HANDBOOK_ITEM_UPGRADE = 640;</code>
       *
       * <pre>
       * 图鉴激活or升级
       * </pre>
       */
      HANDBOOK_ITEM_UPGRADE(232, 640),
      /**
       * <code>HANDBOOK_COMBINATION_UPGRADE = 641;</code>
       *
       * <pre>
       * 图鉴组合激活or升级
       * </pre>
       */
      HANDBOOK_COMBINATION_UPGRADE(233, 641),
      /**
       * <code>ACTIVE_TURNTABLE_LOTTERY = 650;</code>
       *
       * <pre>
       * 活跃转盘抽奖
       * </pre>
       */
      ACTIVE_TURNTABLE_LOTTERY(234, 650),
      /**
       * <code>JIAN_BAO_LOTTERY = 651;</code>
       *
       * <pre>
       * 鉴宝抽奖
       * </pre>
       */
      JIAN_BAO_LOTTERY(235, 651),
      /**
       * <code>TASK_TARGET_KILL_GET = 719;</code>
       *
       * <pre>
       * 任务相关 700-750
       * </pre>
       */
      TASK_TARGET_KILL_GET(236, 719),
      /**
       * <code>TASK_DONE = 720;</code>
       *
       * <pre>
       * 完成任务
       * </pre>
       */
      TASK_DONE(237, 720),
      /**
       * <code>CHAPTER_TASK_DONE = 721;</code>
       *
       * <pre>
       * 完成主线任务
       * </pre>
       */
      CHAPTER_TASK_DONE(238, 721),
      /**
       * <code>STORY_TASK_DONE = 722;</code>
       *
       * <pre>
       * 完成剧情任务
       * </pre>
       */
      STORY_TASK_DONE(239, 722),
      /**
       * <code>GET_TASK_PRIZE_COST_GOODS = 723;</code>
       *
       * <pre>
       *获得任务奖励，消耗道具
       * </pre>
       */
      GET_TASK_PRIZE_COST_GOODS(240, 723),
      /**
       * <code>BRANCH_TASK_DONE = 724;</code>
       *
       * <pre>
       * 完成支线任务
       * </pre>
       */
      BRANCH_TASK_DONE(241, 724),
      /**
       * <code>ESCORT_TASK_ACCEPT = 725;</code>
       *
       * <pre>
       * 接取护送任务
       * </pre>
       */
      ESCORT_TASK_ACCEPT(242, 725),
      /**
       * <code>ESCORT_TASK_FINISH = 726;</code>
       *
       * <pre>
       * 完成护送任务
       * </pre>
       */
      ESCORT_TASK_FINISH(243, 726),
      /**
       * <code>REWARD_ONE_KEY_COMPLETE = 727;</code>
       *
       * <pre>
       *赏金任务一键完成消耗钻石
       * </pre>
       */
      REWARD_ONE_KEY_COMPLETE(244, 727),
      /**
       * <code>REWARD_COMPLETE = 728;</code>
       *
       * <pre>
       *完成赏金任务
       * </pre>
       */
      REWARD_COMPLETE(245, 728),
      /**
       * <code>TASK_COMMIT_EQUIP = 729;</code>
       *
       * <pre>
       *提交装备任务
       * </pre>
       */
      TASK_COMMIT_EQUIP(246, 729),
      /**
       * <code>TASK_KILL_LAGER_MONSTER_GET_GOODS = 730;</code>
       *
       * <pre>
       *击杀大于自己指定等级的怪物获得物品
       * </pre>
       */
      TASK_KILL_LAGER_MONSTER_GET_GOODS(247, 730),
      /**
       * <code>GUARD_GUILD_KILL_MONSTER = 751;</code>
       *
       * <pre>
       *守卫公会杀怪获得
       * </pre>
       */
      GUARD_GUILD_KILL_MONSTER(248, 751),
      /**
       * <code>GUARD_GUILD_FINISH_REMAIN_GUARD = 752;</code>
       *
       * <pre>
       *守卫公会结束，剩余守护怪获得经验
       * </pre>
       */
      GUARD_GUILD_FINISH_REMAIN_GUARD(249, 752),
      /**
       * <code>GUARD_GUILD_FINISH_STAR = 753;</code>
       *
       * <pre>
       *守卫公会结束，星级获得经验
       * </pre>
       */
      GUARD_GUILD_FINISH_STAR(250, 753),
      /**
       * <code>UPGRADE_HERALDRY = 760;</code>
       *
       * <pre>
       *升级纹章
       * </pre>
       */
      UPGRADE_HERALDRY(251, 760),
      /**
       * <code>COMPOUND_HERALDRY = 761;</code>
       *
       * <pre>
       *合成纹章
       * </pre>
       */
      COMPOUND_HERALDRY(252, 761),
      /**
       * <code>RESOLVE_HERALDRY = 762;</code>
       *
       * <pre>
       *分解纹章
       * </pre>
       */
      RESOLVE_HERALDRY(253, 762),
      /**
       * <code>DISMANTLING_HERALDRY = 763;</code>
       *
       * <pre>
       *拆解纹章
       * </pre>
       */
      DISMANTLING_HERALDRY(254, 763),
      /**
       * <code>ACTIVE_PET_PLUGIN = 770;</code>
       *
       * <pre>
       *激活宠物插件
       * </pre>
       */
      ACTIVE_PET_PLUGIN(255, 770),
      /**
       * <code>RESOLVE_PET_PLUGIN = 771;</code>
       *
       * <pre>
       *分解宠物插件材料
       * </pre>
       */
      RESOLVE_PET_PLUGIN(256, 771),
      /**
       * <code>HERALDRY_MYSTERY_BUY_TIMES = 780;</code>
       *
       * <pre>
       *纹章秘境购买次数
       * </pre>
       */
      HERALDRY_MYSTERY_BUY_TIMES(257, 780),
      /**
       * <code>HERALDRY_MYSTERY_SUMMON_BOSS = 781;</code>
       *
       * <pre>
       *纹章秘境召唤BOSS
       * </pre>
       */
      HERALDRY_MYSTERY_SUMMON_BOSS(258, 781),
      /**
       * <code>HERALDRY_MYSTERY_SWEEP = 782;</code>
       *
       * <pre>
       *纹章秘境扫荡
       * </pre>
       */
      HERALDRY_MYSTERY_SWEEP(259, 782),
      /**
       * <code>RENAME_HERO = 790;</code>
       *
       * <pre>
       *个人改名
       * </pre>
       */
      RENAME_HERO(260, 790),
      /**
       * <code>RENAME_GUILD = 791;</code>
       *
       * <pre>
       *公会改名
       * </pre>
       */
      RENAME_GUILD(261, 791),
      /**
       * <code>ALPACA_COLLECT = 800;</code>
       *
       * <pre>
       * 破碎群岛采集
       * </pre>
       */
      ALPACA_COLLECT(262, 800),
      /**
       * <code>ALPACA_TIME_EXP = 801;</code>
       *
       * <pre>
       * 破碎群岛增加经验
       * </pre>
       */
      ALPACA_TIME_EXP(263, 801),
      /**
       * <code>COMPOND_SOUL_EQUIP_COST = 810;</code>
       *
       * <pre>
       * 魂兽装备合成消耗
       * </pre>
       */
      COMPOND_SOUL_EQUIP_COST(264, 810),
      /**
       * <code>COMPOND_SOUL_EQUIP = 811;</code>
       *
       * <pre>
       * 魂兽装备合成物品
       * </pre>
       */
      COMPOND_SOUL_EQUIP(265, 811),
      /**
       * <code>ADD_SOUL_EQUIP_ENABLE_COUNT = 812;</code>
       *
       * <pre>
       * 增加魂兽助战上限
       * </pre>
       */
      ADD_SOUL_EQUIP_ENABLE_COUNT(266, 812),
      /**
       * <code>ENHANCE_SOUL_EQUIP = 813;</code>
       *
       * <pre>
       * 魂兽装备强化
       * </pre>
       */
      ENHANCE_SOUL_EQUIP(267, 813),
      /**
       * <code>ACTIVE_LIFE_GRID = 820;</code>
       *
       * <pre>
       * 激活命格
       * </pre>
       */
      ACTIVE_LIFE_GRID(268, 820),
      /**
       * <code>BROTHER_BECOME_COST = 830;</code>
       *
       * <pre>
       *血盟 830-880
       * </pre>
       */
      BROTHER_BECOME_COST(269, 830),
      /**
       * <code>BROTHER_BECOME_FAIL_RETURN = 831;</code>
       *
       * <pre>
       *血盟结义失败返还
       * </pre>
       */
      BROTHER_BECOME_FAIL_RETURN(270, 831),
      /**
       * <code>BROTHER_OTHER_EXIT = 832;</code>
       *
       * <pre>
       *他人退出血盟
       * </pre>
       */
      BROTHER_OTHER_EXIT(271, 832),
      /**
       * <code>BROTHER_RENAME = 833;</code>
       *
       * <pre>
       *重命名血盟
       * </pre>
       */
      BROTHER_RENAME(272, 833),
      /**
       * <code>BROTHER_JOIN = 834;</code>
       *
       * <pre>
       *加入血盟
       * </pre>
       */
      BROTHER_JOIN(273, 834),
      /**
       * <code>BROTHER_FERTILIZER = 835;</code>
       *
       * <pre>
       *血盟成长树施肥
       * </pre>
       */
      BROTHER_FERTILIZER(274, 835),
      /**
       * <code>BROTHER_FERTILIZER_FULL_LEVEL = 836;</code>
       *
       * <pre>
       *成长树施肥已满级返还肥料
       * </pre>
       */
      BROTHER_FERTILIZER_FULL_LEVEL(275, 836),
      /**
       * <code>BROTHER_SKILL_RESET = 837;</code>
       *
       * <pre>
       *血盟成长树等级重置
       * </pre>
       */
      BROTHER_SKILL_RESET(276, 837),
      /**
       * <code>BROTHER_SKILL_RESET_FAIL_RETURN = 838;</code>
       *
       * <pre>
       *成长树等级重置失败返还技能果
       * </pre>
       */
      BROTHER_SKILL_RESET_FAIL_RETURN(277, 838),
      /**
       * <code>BROTHER_FROZEN = 839;</code>
       *
       * <pre>
       *血盟冻结
       * </pre>
       */
      BROTHER_FROZEN(278, 839),
      /**
       * <code>BROTHER_BANQUET_ORDER = 840;</code>
       *
       * <pre>
       *血盟宴席预约
       * </pre>
       */
      BROTHER_BANQUET_ORDER(279, 840),
      /**
       * <code>BROTHER_BANQUET_ORDER_FAIL_RETURN = 841;</code>
       *
       * <pre>
       *血盟宴席预约失败返还
       * </pre>
       */
      BROTHER_BANQUET_ORDER_FAIL_RETURN(280, 841),
      /**
       * <code>BORTHER_BANQUET_START_MASTER_GET_RPIZE = 842;</code>
       *
       * <pre>
       *血盟宴席开始主人获得奖励
       * </pre>
       */
      BORTHER_BANQUET_START_MASTER_GET_RPIZE(281, 842),
      /**
       * <code>BORTHER_BANQUET_GET_EXP = 843;</code>
       *
       * <pre>
       *血盟宴席获得泡点经验
       * </pre>
       */
      BORTHER_BANQUET_GET_EXP(282, 843),
      /**
       * <code>BORTHER_BANQUET_COLLECT_PRIZE = 844;</code>
       *
       * <pre>
       *血盟宴席采集获得奖励
       * </pre>
       */
      BORTHER_BANQUET_COLLECT_PRIZE(283, 844),
      /**
       * <code>BROTHER_SELF_EXIT = 845;</code>
       *
       * <pre>
       *自己退出血盟
       * </pre>
       */
      BROTHER_SELF_EXIT(284, 845),
      /**
       * <code>BROTHER_KICK_OUT_VOTE = 846;</code>
       *
       * <pre>
       *血盟请求踢人投票
       * </pre>
       */
      BROTHER_KICK_OUT_VOTE(285, 846),
      /**
       * <code>BROTHER_BE_KICKOUT = 847;</code>
       *
       * <pre>
       *血盟被踢出
       * </pre>
       */
      BROTHER_BE_KICKOUT(286, 847),
      /**
       * <code>UP_QUALITY_DUNGEON_DONE = 861;</code>
       *
       * <pre>
       * 升品副本通关
       * </pre>
       */
      UP_QUALITY_DUNGEON_DONE(287, 861),
      /**
       * <code>UP_QUALITY_DUNGEON_HELP = 862;</code>
       *
       * <pre>
       * 升品副本助战成功
       * </pre>
       */
      UP_QUALITY_DUNGEON_HELP(288, 862),
      /**
       * <code>UP_QUALITY_DUNGEON_MERGE = 863;</code>
       *
       * <pre>
       * 升品副本合并次数
       * </pre>
       */
      UP_QUALITY_DUNGEON_MERGE(289, 863),
      /**
       * <code>XING_ZHEN_UPGRADE_USE = 871;</code>
       *
       * <pre>
       * 星阵升级消耗星尘
       * </pre>
       */
      XING_ZHEN_UPGRADE_USE(290, 871),
      /**
       * <code>AMULET_NORMAL_LOOT = 881;</code>
       *
       * <pre>
       *刻印普通制符
       * </pre>
       */
      AMULET_NORMAL_LOOT(291, 881),
      /**
       * <code>AMULET_ADVANCE_LOOT = 882;</code>
       *
       * <pre>
       *刻印高级制符
       * </pre>
       */
      AMULET_ADVANCE_LOOT(292, 882),
      /**
       * <code>AMULET_PHOTO_UPSTAR = 883;</code>
       *
       * <pre>
       *符画激活或升星
       * </pre>
       */
      AMULET_PHOTO_UPSTAR(293, 883),
      /**
       * <code>AMULET_RESOLVE = 884;</code>
       *
       * <pre>
       *刻印材料分解
       * </pre>
       */
      AMULET_RESOLVE(294, 884),
      /**
       * <code>EVIL_TREASURY_LOTTERY_ONE = 890;</code>
       *
       * <pre>
       *恶魔宝库抽一次
       * </pre>
       */
      EVIL_TREASURY_LOTTERY_ONE(295, 890),
      /**
       * <code>EVIL_TREASURY_LOTTERY_TEN = 891;</code>
       *
       * <pre>
       *恶魔宝库抽10次
       * </pre>
       */
      EVIL_TREASURY_LOTTERY_TEN(296, 891),
      /**
       * <code>EVIL_TREASURY_ENABLE_LOTTERY = 892;</code>
       *
       * <pre>
       *恶魔宝库可以抽奖通知
       * </pre>
       */
      EVIL_TREASURY_ENABLE_LOTTERY(297, 892),
      /**
       * <code>KF_BROTHER_BATTLE_RANK_PRIZE = 910;</code>
       *
       * <pre>
       *血盟竞技排行奖励
       * </pre>
       */
      KF_BROTHER_BATTLE_RANK_PRIZE(298, 910),
      /**
       * <code>KF_BROTHER_BATTLE_BUY_TIMES = 911;</code>
       *
       * <pre>
       *血盟竞技购买次数
       * </pre>
       */
      KF_BROTHER_BATTLE_BUY_TIMES(299, 911),
      /**
       * <code>KF_BROTHER_BATTLE_BOX_PRIZE = 912;</code>
       *
       * <pre>
       * 血盟竞技宝箱奖励
       * </pre>
       */
      KF_BROTHER_BATTLE_BOX_PRIZE(300, 912),
      /**
       * <code>KF_BROTHER_BATTLE_REPUTATION_PRIZE = 913;</code>
       *
       * <pre>
       * 血盟竞技声望奖励
       * </pre>
       */
      KF_BROTHER_BATTLE_REPUTATION_PRIZE(301, 913),
      /**
       * <code>KF_BROTHER_BATTLE_END_PRIZE = 914;</code>
       *
       * <pre>
       * 血盟竞技副本结束奖励
       * </pre>
       */
      KF_BROTHER_BATTLE_END_PRIZE(302, 914),
      /**
       * <code>KF_BOSS_MELEE_RANK_PRIZE = 920;</code>
       *
       * <pre>
       * boss乱斗排行奖励
       * </pre>
       */
      KF_BOSS_MELEE_RANK_PRIZE(303, 920),
      ;

      /**
       * <code>SYSTEM = 1;</code>
       *
       * <pre>
       * 系统
       * </pre>
       */
      public static final int SYSTEM_VALUE = 1;
      /**
       * <code>GM = 2;</code>
       *
       * <pre>
       * GM操作
       * </pre>
       */
      public static final int GM_VALUE = 2;
      /**
       * <code>PLAYER = 3;</code>
       *
       * <pre>
       *玩家操作
       * </pre>
       */
      public static final int PLAYER_VALUE = 3;
      /**
       * <code>SEND_MAIL = 4;</code>
       *
       * <pre>
       * 邮件
       * </pre>
       */
      public static final int SEND_MAIL_VALUE = 4;
      /**
       * <code>COLLECT_MAIL = 5;</code>
       *
       * <pre>
       * 领取邮件
       * </pre>
       */
      public static final int COLLECT_MAIL_VALUE = 5;
      /**
       * <code>GOODS_USE = 6;</code>
       *
       * <pre>
       * 物品
       * </pre>
       */
      public static final int GOODS_USE_VALUE = 6;
      /**
       * <code>SCENE_GOODS_PICK_UP = 7;</code>
       *
       * <pre>
       * 拾取
       * </pre>
       */
      public static final int SCENE_GOODS_PICK_UP_VALUE = 7;
      /**
       * <code>USE_PACKAGE = 8;</code>
       *
       * <pre>
       * 打开礼包
       * </pre>
       */
      public static final int USE_PACKAGE_VALUE = 8;
      /**
       * <code>KILL_MONSTER = 10;</code>
       *
       * <pre>
       * 击杀怪物
       * </pre>
       */
      public static final int KILL_MONSTER_VALUE = 10;
      /**
       * <code>EXP_BUFF = 11;</code>
       *
       * <pre>
       * 经验buff
       * </pre>
       */
      public static final int EXP_BUFF_VALUE = 11;
      /**
       * <code>UNLOCK_GOODS_CONTAINER = 12;</code>
       *
       * <pre>
       * 解锁包裹格子
       * </pre>
       */
      public static final int UNLOCK_GOODS_CONTAINER_VALUE = 12;
      /**
       * <code>SCENE_GOODS_DROP = 13;</code>
       *
       * <pre>
       * 丢弃
       * </pre>
       */
      public static final int SCENE_GOODS_DROP_VALUE = 13;
      /**
       * <code>SHOP_SELL = 14;</code>
       *
       * <pre>
       * 物品出售
       * </pre>
       */
      public static final int SHOP_SELL_VALUE = 14;
      /**
       * <code>FLY_GOODS = 15;</code>
       *
       * <pre>
       * 小飞鞋传送
       * </pre>
       */
      public static final int FLY_GOODS_VALUE = 15;
      /**
       * <code>PET_BLESS_GOODS_CONSUME = 30;</code>
       *
       * <pre>
       * 宠物
       * </pre>
       */
      public static final int PET_BLESS_GOODS_CONSUME_VALUE = 30;
      /**
       * <code>PET_STAT_GOODS_CONSUME = 31;</code>
       *
       * <pre>
       * 宠物使用属性丹
       * </pre>
       */
      public static final int PET_STAT_GOODS_CONSUME_VALUE = 31;
      /**
       * <code>PET_EXP_GOODS_CONSUME = 32;</code>
       *
       * <pre>
       * 宠物吞噬
       * </pre>
       */
      public static final int PET_EXP_GOODS_CONSUME_VALUE = 32;
      /**
       * <code>MOUNT_BLESS_GOODS_CONSUME = 33;</code>
       *
       * <pre>
       * 宠物
       * </pre>
       */
      public static final int MOUNT_BLESS_GOODS_CONSUME_VALUE = 33;
      /**
       * <code>MOUNT_STAT_GOODS_CONSUME = 34;</code>
       *
       * <pre>
       * 坐骑使用属性丹
       * </pre>
       */
      public static final int MOUNT_STAT_GOODS_CONSUME_VALUE = 34;
      /**
       * <code>OFFLINE_HANG = 40;</code>
       *
       * <pre>
       * 离线挂机
       * </pre>
       */
      public static final int OFFLINE_HANG_VALUE = 40;
      /**
       * <code>OFFLINE_HANG_KILLED = 41;</code>
       *
       * <pre>
       * 离线挂机被杀
       * </pre>
       */
      public static final int OFFLINE_HANG_KILLED_VALUE = 41;
      /**
       * <code>EXTERNAL_UPGRADE = 50;</code>
       *
       * <pre>
       *外显升级
       * </pre>
       */
      public static final int EXTERNAL_UPGRADE_VALUE = 50;
      /**
       * <code>DEMON_BOSS_ENTER = 60;</code>
       *
       * <pre>
       * BOSS
       * </pre>
       */
      public static final int DEMON_BOSS_ENTER_VALUE = 60;
      /**
       * <code>PERSONAL_BOSS_ENTER = 61;</code>
       *
       * <pre>
       * 进入个人boss副本
       * </pre>
       */
      public static final int PERSONAL_BOSS_ENTER_VALUE = 61;
      /**
       * <code>GUARD_ELF_SWEEP = 62;</code>
       *
       * <pre>
       * 守护精灵副本扫荡
       * </pre>
       */
      public static final int GUARD_ELF_SWEEP_VALUE = 62;
      /**
       * <code>GUARD_ELF_BUY_COUNT = 63;</code>
       *
       * <pre>
       * 守护精灵副本购买进入次数
       * </pre>
       */
      public static final int GUARD_ELF_BUY_COUNT_VALUE = 63;
      /**
       * <code>HOME_BOSS_ENTER = 64;</code>
       *
       * <pre>
       * boss之家进入
       * </pre>
       */
      public static final int HOME_BOSS_ENTER_VALUE = 64;
      /**
       * <code>BOSS_REWARD = 65;</code>
       *
       * <pre>
       * boss悬赏
       * </pre>
       */
      public static final int BOSS_REWARD_VALUE = 65;
      /**
       * <code>RUNE_RESOLVE = 70;</code>
       *
       * <pre>
       *符文
       * </pre>
       */
      public static final int RUNE_RESOLVE_VALUE = 70;
      /**
       * <code>RUNE_EXCHANGE = 71;</code>
       *
       * <pre>
       *符文兑换
       * </pre>
       */
      public static final int RUNE_EXCHANGE_VALUE = 71;
      /**
       * <code>RUNE_UPGRADE = 72;</code>
       *
       * <pre>
       *符文升级
       * </pre>
       */
      public static final int RUNE_UPGRADE_VALUE = 72;
      /**
       * <code>TOWER_DAILY_PRIZE = 80;</code>
       *
       * <pre>
       *天罚圣殿 (爬塔副本)
       * </pre>
       */
      public static final int TOWER_DAILY_PRIZE_VALUE = 80;
      /**
       * <code>TOWER_PAST_LAYER_PRIZE = 81;</code>
       *
       * <pre>
       *爬塔通关一层奖励
       * </pre>
       */
      public static final int TOWER_PAST_LAYER_PRIZE_VALUE = 81;
      /**
       * <code>MOKU_MERGER_COST_DIAMOND = 100;</code>
       *
       * <pre>
       *魔窟副本
       * </pre>
       */
      public static final int MOKU_MERGER_COST_DIAMOND_VALUE = 100;
      /**
       * <code>MOKU_ENTER_COST_GOODS = 101;</code>
       *
       * <pre>
       *魔窟进入消耗物品
       * </pre>
       */
      public static final int MOKU_ENTER_COST_GOODS_VALUE = 101;
      /**
       * <code>MOKU_INSPIRE_COST_DIAMOND = 102;</code>
       *
       * <pre>
       *魔窟鼓舞消耗钻石
       * </pre>
       */
      public static final int MOKU_INSPIRE_COST_DIAMOND_VALUE = 102;
      /**
       * <code>MOKU_INSPIRE_COST_MONEY = 103;</code>
       *
       * <pre>
       *魔窟鼓舞消耗金币
       * </pre>
       */
      public static final int MOKU_INSPIRE_COST_MONEY_VALUE = 103;
      /**
       * <code>MOKU_BUY_TIMES_COST_DIAMOND = 104;</code>
       *
       * <pre>
       *魔窟购买次数消耗钻石
       * </pre>
       */
      public static final int MOKU_BUY_TIMES_COST_DIAMOND_VALUE = 104;
      /**
       * <code>CLEAR_MO_KU_CD_COST_DIAMOND = 105;</code>
       *
       * <pre>
       *清除魔窟CD消耗钻石
       * </pre>
       */
      public static final int CLEAR_MO_KU_CD_COST_DIAMOND_VALUE = 105;
      /**
       * <code>MOKU_MERGER_GET_EXP = 106;</code>
       *
       * <pre>
       *魔窟合并获得经验
       * </pre>
       */
      public static final int MOKU_MERGER_GET_EXP_VALUE = 106;
      /**
       * <code>SPRITE_EXPIRED = 110;</code>
       *
       * <pre>
       *小鬼怪
       * </pre>
       */
      public static final int SPRITE_EXPIRED_VALUE = 110;
      /**
       * <code>SPRITE_UNLOAD = 111;</code>
       *
       * <pre>
       *小鬼怪卸载
       * </pre>
       */
      public static final int SPRITE_UNLOAD_VALUE = 111;
      /**
       * <code>SPRITE_RENEW = 112;</code>
       *
       * <pre>
       *小鬼怪续费
       * </pre>
       */
      public static final int SPRITE_RENEW_VALUE = 112;
      /**
       * <code>EQUIP_ENHANCE = 120;</code>
       *
       * <pre>
       * 装备
       * </pre>
       */
      public static final int EQUIP_ENHANCE_VALUE = 120;
      /**
       * <code>REPLACE_GEM = 121;</code>
       *
       * <pre>
       * 替换宝石
       * </pre>
       */
      public static final int REPLACE_GEM_VALUE = 121;
      /**
       * <code>FORGE_SUIT = 122;</code>
       *
       * <pre>
       * 打造套装
       * </pre>
       */
      public static final int FORGE_SUIT_VALUE = 122;
      /**
       * <code>SUIT_RETURN = 123;</code>
       *
       * <pre>
       * 套装替换返还
       * </pre>
       */
      public static final int SUIT_RETURN_VALUE = 123;
      /**
       * <code>WASH_SLOT_OPEN = 124;</code>
       *
       * <pre>
       * 洗练槽开启
       * </pre>
       */
      public static final int WASH_SLOT_OPEN_VALUE = 124;
      /**
       * <code>WASH_EUQIP = 125;</code>
       *
       * <pre>
       * 装备洗练
       * </pre>
       */
      public static final int WASH_EUQIP_VALUE = 125;
      /**
       * <code>EQUIP_REWARD = 126;</code>
       *
       * <pre>
       * 装备悬赏
       * </pre>
       */
      public static final int EQUIP_REWARD_VALUE = 126;
      /**
       * <code>ASCEND_PRODUCT = 127;</code>
       *
       * <pre>
       *装备升品
       * </pre>
       */
      public static final int ASCEND_PRODUCT_VALUE = 127;
      /**
       * <code>ASCEND_RETURN = 128;</code>
       *
       * <pre>
       * 升品返还
       * </pre>
       */
      public static final int ASCEND_RETURN_VALUE = 128;
      /**
       * <code>EQUIP_ADVANCE = 129;</code>
       *
       * <pre>
       * 装备进阶
       * </pre>
       */
      public static final int EQUIP_ADVANCE_VALUE = 129;
      /**
       * <code>REINI_ONE_KEY = 130;</code>
       *
       * <pre>
       *转职一键完成
       * </pre>
       */
      public static final int REINI_ONE_KEY_VALUE = 130;
      /**
       * <code>REIN_DUNGEON_DONE = 131;</code>
       *
       * <pre>
       * 转职副本完成
       * </pre>
       */
      public static final int REIN_DUNGEON_DONE_VALUE = 131;
      /**
       * <code>REIN_SUCCESS = 132;</code>
       *
       * <pre>
       * 转职成功
       * </pre>
       */
      public static final int REIN_SUCCESS_VALUE = 132;
      /**
       * <code>XUE_ZHEN_DUNGEON_DONE = 140;</code>
       *
       * <pre>
       * 魔灵血阵副本完成
       * </pre>
       */
      public static final int XUE_ZHEN_DUNGEON_DONE_VALUE = 140;
      /**
       * <code>XUE_ZHEN_DUNGEON_HELP = 141;</code>
       *
       * <pre>
       * 魔灵血阵助战成功
       * </pre>
       */
      public static final int XUE_ZHEN_DUNGEON_HELP_VALUE = 141;
      /**
       * <code>CREATE_GUILD = 150;</code>
       *
       * <pre>
       * 仙盟
       * </pre>
       */
      public static final int CREATE_GUILD_VALUE = 150;
      /**
       * <code>NOTICE_GUILD_ANNOUNCEMENT = 151;</code>
       *
       * <pre>
       * 仙盟公告通知
       * </pre>
       */
      public static final int NOTICE_GUILD_ANNOUNCEMENT_VALUE = 151;
      /**
       * <code>GUILD_TRANS_PRESIDENT = 152;</code>
       *
       * <pre>
       * 仙盟盟主自动转让
       * </pre>
       */
      public static final int GUILD_TRANS_PRESIDENT_VALUE = 152;
      /**
       * <code>GUILD_DAILY_PRIZE = 153;</code>
       *
       * <pre>
       * 仙盟每日奖励
       * </pre>
       */
      public static final int GUILD_DAILY_PRIZE_VALUE = 153;
      /**
       * <code>GUILD_VIP_RED_PACKET = 154;</code>
       *
       * <pre>
       * vip红包发放
       * </pre>
       */
      public static final int GUILD_VIP_RED_PACKET_VALUE = 154;
      /**
       * <code>GUILD_RED_PACKET = 155;</code>
       *
       * <pre>
       * 红包领取
       * </pre>
       */
      public static final int GUILD_RED_PACKET_VALUE = 155;
      /**
       * <code>GUILD_DONATE_FAIL = 156;</code>
       *
       * <pre>
       * 捐献道具失败
       * </pre>
       */
      public static final int GUILD_DONATE_FAIL_VALUE = 156;
      /**
       * <code>GUILD_DONATE = 157;</code>
       *
       * <pre>
       * 捐献道具失败
       * </pre>
       */
      public static final int GUILD_DONATE_VALUE = 157;
      /**
       * <code>GUILD_EXCHANGE_GOODS = 158;</code>
       *
       * <pre>
       * 兑换仓库道具
       * </pre>
       */
      public static final int GUILD_EXCHANGE_GOODS_VALUE = 158;
      /**
       * <code>GUILD_UPGRADE_SKILL = 159;</code>
       *
       * <pre>
       * 仙盟学习心法
       * </pre>
       */
      public static final int GUILD_UPGRADE_SKILL_VALUE = 159;
      /**
       * <code>GUILD_LEAVE = 160;</code>
       *
       * <pre>
       * 离开仙盟
       * </pre>
       */
      public static final int GUILD_LEAVE_VALUE = 160;
      /**
       * <code>GUILD_KILL_BEAST = 161;</code>
       *
       * <pre>
       * 击杀兽神
       * </pre>
       */
      public static final int GUILD_KILL_BEAST_VALUE = 161;
      /**
       * <code>GUILD_OPEN_BEAST = 162;</code>
       *
       * <pre>
       * 开启兽神
       * </pre>
       */
      public static final int GUILD_OPEN_BEAST_VALUE = 162;
      /**
       * <code>SHOU_LIANG_DONATE = 163;</code>
       *
       * <pre>
       * 捐献兽粮
       * </pre>
       */
      public static final int SHOU_LIANG_DONATE_VALUE = 163;
      /**
       * <code>GUILD_TASK_COMPLETE = 164;</code>
       *
       * <pre>
       *公会周任务完成
       * </pre>
       */
      public static final int GUILD_TASK_COMPLETE_VALUE = 164;
      /**
       * <code>GUILD_TASK_ONE_KEY_COMPLETE = 165;</code>
       *
       * <pre>
       *公会周任务一键完成
       * </pre>
       */
      public static final int GUILD_TASK_ONE_KEY_COMPLETE_VALUE = 165;
      /**
       * <code>GUILD_WAR_BATTLE_ATTEND_PRIZE = 166;</code>
       *
       * <pre>
       * 跨服公会战单场参与奖励
       * </pre>
       */
      public static final int GUILD_WAR_BATTLE_ATTEND_PRIZE_VALUE = 166;
      /**
       * <code>GUILD_WAR_BATTLE_RESULT_PRIZE = 167;</code>
       *
       * <pre>
       * 跨服公会战单场胜负奖励
       * </pre>
       */
      public static final int GUILD_WAR_BATTLE_RESULT_PRIZE_VALUE = 167;
      /**
       * <code>GUILD_WAR_BATTLE_RANK_PRIZE = 168;</code>
       *
       * <pre>
       * 跨服公会战单场排名奖励
       * </pre>
       */
      public static final int GUILD_WAR_BATTLE_RANK_PRIZE_VALUE = 168;
      /**
       * <code>GUILD_WAR_BATTLE_GUILD_PRIZE = 169;</code>
       *
       * <pre>
       * 跨服公会战单场战斗奖励(发给会长)
       * </pre>
       */
      public static final int GUILD_WAR_BATTLE_GUILD_PRIZE_VALUE = 169;
      /**
       * <code>GUILD_WAR_WEEKLY_PRIZE = 170;</code>
       *
       * <pre>
       * 跨服公会战周奖励
       * </pre>
       */
      public static final int GUILD_WAR_WEEKLY_PRIZE_VALUE = 170;
      /**
       * <code>GUILD_WAR_SEASON_PRIZE = 171;</code>
       *
       * <pre>
       * 跨服公会战月奖励
       * </pre>
       */
      public static final int GUILD_WAR_SEASON_PRIZE_VALUE = 171;
      /**
       * <code>GUILD_WAR_BATTLE_NOTICE = 172;</code>
       *
       * <pre>
       * 跨服公会战战斗通知
       * </pre>
       */
      public static final int GUILD_WAR_BATTLE_NOTICE_VALUE = 172;
      /**
       * <code>GUILD_WAR_ORDER_NOTICE = 173;</code>
       *
       * <pre>
       * 跨服公会战预约通知
       * </pre>
       */
      public static final int GUILD_WAR_ORDER_NOTICE_VALUE = 173;
      /**
       * <code>AUCITON_ON_SELL = 180;</code>
       *
       * <pre>
       * 市场
       * </pre>
       */
      public static final int AUCITON_ON_SELL_VALUE = 180;
      /**
       * <code>AUCTION_BUY_SELL = 181;</code>
       *
       * <pre>
       * 市场购买出售物品
       * </pre>
       */
      public static final int AUCTION_BUY_SELL_VALUE = 181;
      /**
       * <code>AUCTION_SELL_EXPIRED = 182;</code>
       *
       * <pre>
       * 市场出售物品过期
       * </pre>
       */
      public static final int AUCTION_SELL_EXPIRED_VALUE = 182;
      /**
       * <code>AUCTION_ON_BUY = 183;</code>
       *
       * <pre>
       * 市场求购物品
       * </pre>
       */
      public static final int AUCTION_ON_BUY_VALUE = 183;
      /**
       * <code>AUCTION_SELL_BUY = 184;</code>
       *
       * <pre>
       * 市场出售求购物品
       * </pre>
       */
      public static final int AUCTION_SELL_BUY_VALUE = 184;
      /**
       * <code>AUCTION_BUY_EXPIRED = 185;</code>
       *
       * <pre>
       * 市场求购物品过期
       * </pre>
       */
      public static final int AUCTION_BUY_EXPIRED_VALUE = 185;
      /**
       * <code>AUCTION_CANCEL_SELL = 186;</code>
       *
       * <pre>
       * 市场取消上架
       * </pre>
       */
      public static final int AUCTION_CANCEL_SELL_VALUE = 186;
      /**
       * <code>AUCTION_CANCEL_BUY = 187;</code>
       *
       * <pre>
       * 市场取消求购
       * </pre>
       */
      public static final int AUCTION_CANCEL_BUY_VALUE = 187;
      /**
       * <code>AUCTION_ON_SELL_FAILED = 188;</code>
       *
       * <pre>
       * 市场上架失败
       * </pre>
       */
      public static final int AUCTION_ON_SELL_FAILED_VALUE = 188;
      /**
       * <code>AUCTION_ON_BUY_FAILED = 189;</code>
       *
       * <pre>
       * 市场求购失败
       * </pre>
       */
      public static final int AUCTION_ON_BUY_FAILED_VALUE = 189;
      /**
       * <code>COMPOND_COST = 190;</code>
       *
       * <pre>
       * 合成消耗
       * </pre>
       */
      public static final int COMPOND_COST_VALUE = 190;
      /**
       * <code>COMPOND_GOODS = 191;</code>
       *
       * <pre>
       * 合成物品
       * </pre>
       */
      public static final int COMPOND_GOODS_VALUE = 191;
      /**
       * <code>BAO_KU_BUY_COUNT = 200;</code>
       *
       * <pre>
       * 魔王宝库副本购买进入次数
       * </pre>
       */
      public static final int BAO_KU_BUY_COUNT_VALUE = 200;
      /**
       * <code>BAO_KU_SWEEP = 201;</code>
       *
       * <pre>
       * 魔王宝库副本扫荡
       * </pre>
       */
      public static final int BAO_KU_SWEEP_VALUE = 201;
      /**
       * <code>MARRIAGE_PROPOSE = 210;</code>
       *
       * <pre>
       * 结婚
       * </pre>
       */
      public static final int MARRIAGE_PROPOSE_VALUE = 210;
      /**
       * <code>MARRIAGE_PROPOSE_FAILED = 211;</code>
       *
       * <pre>
       * 求婚失败
       * </pre>
       */
      public static final int MARRIAGE_PROPOSE_FAILED_VALUE = 211;
      /**
       * <code>MARRIAGE_PROPOSE_EXPIRED = 212;</code>
       *
       * <pre>
       * 求婚超时
       * </pre>
       */
      public static final int MARRIAGE_PROPOSE_EXPIRED_VALUE = 212;
      /**
       * <code>MARRIAGE_PROPOSE_SUCCESS = 213;</code>
       *
       * <pre>
       * 求婚成功
       * </pre>
       */
      public static final int MARRIAGE_PROPOSE_SUCCESS_VALUE = 213;
      /**
       * <code>MARRIAGE_ORDER_WEDDING = 214;</code>
       *
       * <pre>
       * 预约婚礼
       * </pre>
       */
      public static final int MARRIAGE_ORDER_WEDDING_VALUE = 214;
      /**
       * <code>MARRIAGE_INVITE_WEDDING = 215;</code>
       *
       * <pre>
       * 邀请宾客
       * </pre>
       */
      public static final int MARRIAGE_INVITE_WEDDING_VALUE = 215;
      /**
       * <code>MARRIAGE_DIVORCE = 216;</code>
       *
       * <pre>
       * 离婚
       * </pre>
       */
      public static final int MARRIAGE_DIVORCE_VALUE = 216;
      /**
       * <code>MARRIAGE_BUY_INVITE_COUNT = 217;</code>
       *
       * <pre>
       * 购买邀请次数
       * </pre>
       */
      public static final int MARRIAGE_BUY_INVITE_COUNT_VALUE = 217;
      /**
       * <code>MARRIAGE_COLLECT_CANDY = 218;</code>
       *
       * <pre>
       * 收集喜糖
       * </pre>
       */
      public static final int MARRIAGE_COLLECT_CANDY_VALUE = 218;
      /**
       * <code>MARRIAGE_COLLECT_BANQUET = 219;</code>
       *
       * <pre>
       * 收集喜宴
       * </pre>
       */
      public static final int MARRIAGE_COLLECT_BANQUET_VALUE = 219;
      /**
       * <code>MARRIAGE_WEDDING_EXP = 220;</code>
       *
       * <pre>
       * 婚礼泡点
       * </pre>
       */
      public static final int MARRIAGE_WEDDING_EXP_VALUE = 220;
      /**
       * <code>SEND_FLOWER = 221;</code>
       *
       * <pre>
       * 送花
       * </pre>
       */
      public static final int SEND_FLOWER_VALUE = 221;
      /**
       * <code>SEND_WEDDING_DIAMOND = 222;</code>
       *
       * <pre>
       * 新婚祝福
       * </pre>
       */
      public static final int SEND_WEDDING_DIAMOND_VALUE = 222;
      /**
       * <code>WEDDING_RING_UPGRADE = 223;</code>
       *
       * <pre>
       * 升级婚戒
       * </pre>
       */
      public static final int WEDDING_RING_UPGRADE_VALUE = 223;
      /**
       * <code>GIVE_CRYSTAL = 224;</code>
       *
       * <pre>
       * 赠送守护水晶
       * </pre>
       */
      public static final int GIVE_CRYSTAL_VALUE = 224;
      /**
       * <code>GET_CRYSTAL_PRIZE = 225;</code>
       *
       * <pre>
       * 领取守护水晶奖励
       * </pre>
       */
      public static final int GET_CRYSTAL_PRIZE_VALUE = 225;
      /**
       * <code>GET_CRYSTAL_DAILY_PRIZE = 226;</code>
       *
       * <pre>
       * 领取守护水晶每日奖励
       * </pre>
       */
      public static final int GET_CRYSTAL_DAILY_PRIZE_VALUE = 226;
      /**
       * <code>ACTIVE_CHILD = 227;</code>
       *
       * <pre>
       * 激活仙娃
       * </pre>
       */
      public static final int ACTIVE_CHILD_VALUE = 227;
      /**
       * <code>DECOMPOSE_CHILD = 228;</code>
       *
       * <pre>
       * 分解仙娃
       * </pre>
       */
      public static final int DECOMPOSE_CHILD_VALUE = 228;
      /**
       * <code>UPGRADE_CHILD = 229;</code>
       *
       * <pre>
       * 升阶仙娃
       * </pre>
       */
      public static final int UPGRADE_CHILD_VALUE = 229;
      /**
       * <code>BUY_MATE_DUNGEON_COUNT = 230;</code>
       *
       * <pre>
       * 购买仙侣副本次数
       * </pre>
       */
      public static final int BUY_MATE_DUNGEON_COUNT_VALUE = 230;
      /**
       * <code>FINISH_MATE_DUNGEON = 231;</code>
       *
       * <pre>
       * 通关仙侣副本
       * </pre>
       */
      public static final int FINISH_MATE_DUNGEON_VALUE = 231;
      /**
       * <code>EXAM_ANSWER = 251;</code>
       *
       * <pre>
       *个人答题
       * </pre>
       */
      public static final int EXAM_ANSWER_VALUE = 251;
      /**
       * <code>KF_EXAM_ANSWER = 252;</code>
       *
       * <pre>
       *跨服答题
       * </pre>
       */
      public static final int KF_EXAM_ANSWER_VALUE = 252;
      /**
       * <code>VIP_RECHARGE_REBATE = 260;</code>
       *
       * <pre>
       * vip
       * </pre>
       */
      public static final int VIP_RECHARGE_REBATE_VALUE = 260;
      /**
       * <code>FREE_VIP = 261;</code>
       *
       * <pre>
       * 免费vip卡领取
       * </pre>
       */
      public static final int FREE_VIP_VALUE = 261;
      /**
       * <code>BUY_VIP_CARD = 262;</code>
       *
       * <pre>
       * 购买vip卡
       * </pre>
       */
      public static final int BUY_VIP_CARD_VALUE = 262;
      /**
       * <code>VIP_WEEKLY_PRIZE = 263;</code>
       *
       * <pre>
       * vip周奖励
       * </pre>
       */
      public static final int VIP_WEEKLY_PRIZE_VALUE = 263;
      /**
       * <code>VIP_ONCE_PRIZE = 264;</code>
       *
       * <pre>
       * vip等级奖励
       * </pre>
       */
      public static final int VIP_ONCE_PRIZE_VALUE = 264;
      /**
       * <code>VIP_STORE_EXP = 265;</code>
       *
       * <pre>
       * vip存储经验
       * </pre>
       */
      public static final int VIP_STORE_EXP_VALUE = 265;
      /**
       * <code>VIP_EXPIRED = 266;</code>
       *
       * <pre>
       * vip过期
       * </pre>
       */
      public static final int VIP_EXPIRED_VALUE = 266;
      /**
       * <code>GET_ACHIEVEMENT_PRIZE = 270;</code>
       *
       * <pre>
       * 获取成就奖励
       * </pre>
       */
      public static final int GET_ACHIEVEMENT_PRIZE_VALUE = 270;
      /**
       * <code>GET_ACHIEVEMENT_SOCRE_PRIZE = 271;</code>
       *
       * <pre>
       * 获取成就积分奖励
       * </pre>
       */
      public static final int GET_ACHIEVEMENT_SOCRE_PRIZE_VALUE = 271;
      /**
       * <code>SHOP_BUY = 280;</code>
       *
       * <pre>
       * 商城购买
       * </pre>
       */
      public static final int SHOP_BUY_VALUE = 280;
      /**
       * <code>UPGRADE_REALM = 290;</code>
       *
       * <pre>
       *提升境界
       * </pre>
       */
      public static final int UPGRADE_REALM_VALUE = 290;
      /**
       * <code>HONOR_BATTLE_CHALLENGE = 300;</code>
       *
       * <pre>
       * pvp
       * </pre>
       */
      public static final int HONOR_BATTLE_CHALLENGE_VALUE = 300;
      /**
       * <code>HONOR_BATTLE_INSPIRE = 301;</code>
       *
       * <pre>
       * 荣耀挑战鼓舞
       * </pre>
       */
      public static final int HONOR_BATTLE_INSPIRE_VALUE = 301;
      /**
       * <code>HONOR_BATTLE_BUY = 302;</code>
       *
       * <pre>
       * 荣耀挑战购买次数
       * </pre>
       */
      public static final int HONOR_BATTLE_BUY_VALUE = 302;
      /**
       * <code>HONOR_BATTLE_RANK_PRIZE = 303;</code>
       *
       * <pre>
       * 荣耀挑战排名奖励
       * </pre>
       */
      public static final int HONOR_BATTLE_RANK_PRIZE_VALUE = 303;
      /**
       * <code>PEAK_COMBAT_DAILY_PRIZE = 304;</code>
       *
       * <pre>
       * 巅峰竞技每日奖励
       * </pre>
       */
      public static final int PEAK_COMBAT_DAILY_PRIZE_VALUE = 304;
      /**
       * <code>PEAK_COMBAT_BOX_PRIZE = 305;</code>
       *
       * <pre>
       * 巅峰竞技宝箱奖励
       * </pre>
       */
      public static final int PEAK_COMBAT_BOX_PRIZE_VALUE = 305;
      /**
       * <code>PEAK_COMBAT_FINISH_DUNGEON = 306;</code>
       *
       * <pre>
       * 巅峰竞技比赛奖励
       * </pre>
       */
      public static final int PEAK_COMBAT_FINISH_DUNGEON_VALUE = 306;
      /**
       * <code>RED_NAME_BEEN_KILLED = 307;</code>
       *
       * <pre>
       * 红名被杀
       * </pre>
       */
      public static final int RED_NAME_BEEN_KILLED_VALUE = 307;
      /**
       * <code>RELIVE = 308;</code>
       *
       * <pre>
       * 复活
       * </pre>
       */
      public static final int RELIVE_VALUE = 308;
      /**
       * <code>BRAVE_PEAK_PASS_LAYER = 309;</code>
       *
       * <pre>
       * 勇者之巅通关副本
       * </pre>
       */
      public static final int BRAVE_PEAK_PASS_LAYER_VALUE = 309;
      /**
       * <code>THREE_BATTLE_RANK = 310;</code>
       *
       * <pre>
       * 三界战场排名结算
       * </pre>
       */
      public static final int THREE_BATTLE_RANK_VALUE = 310;
      /**
       * <code>THREE_BATTLE_POINT = 311;</code>
       *
       * <pre>
       * 三界战场积分结算
       * </pre>
       */
      public static final int THREE_BATTLE_POINT_VALUE = 311;
      /**
       * <code>KF_PEAK_COMBAT_EXPLOIT_PRIZE = 312;</code>
       *
       * <pre>
       * 跨服天梯争霸功勋奖励
       * </pre>
       */
      public static final int KF_PEAK_COMBAT_EXPLOIT_PRIZE_VALUE = 312;
      /**
       * <code>KF_PEAK_COMBAT_RANK_PRIZE = 313;</code>
       *
       * <pre>
       * 跨服天梯争霸排名奖励
       * </pre>
       */
      public static final int KF_PEAK_COMBAT_RANK_PRIZE_VALUE = 313;
      /**
       * <code>KF_PEAK_COMBAT_BUY = 314;</code>
       *
       * <pre>
       * 跨服天梯争霸购买次数
       * </pre>
       */
      public static final int KF_PEAK_COMBAT_BUY_VALUE = 314;
      /**
       * <code>RESOUCE_BAKC_MONEY = 320;</code>
       *
       * <pre>
       * 资源找回金币找回
       * </pre>
       */
      public static final int RESOUCE_BAKC_MONEY_VALUE = 320;
      /**
       * <code>RESOUCE_BAKC_DIAMOND = 321;</code>
       *
       * <pre>
       * 资源找回钻石找回
       * </pre>
       */
      public static final int RESOUCE_BAKC_DIAMOND_VALUE = 321;
      /**
       * <code>GET_LIVENESS_PRIZE = 330;</code>
       *
       * <pre>
       * 获取活跃度奖励
       * </pre>
       */
      public static final int GET_LIVENESS_PRIZE_VALUE = 330;
      /**
       * <code>OPEN_FUNCTION = 331;</code>
       *
       * <pre>
       * 开启功能
       * </pre>
       */
      public static final int OPEN_FUNCTION_VALUE = 331;
      /**
       * <code>TRANSFORM_ACTIVATE = 340;</code>
       *
       * <pre>
       * 幻化激活
       * </pre>
       */
      public static final int TRANSFORM_ACTIVATE_VALUE = 340;
      /**
       * <code>TRANSFORM_UPSTAR = 341;</code>
       *
       * <pre>
       * 幻化升星
       * </pre>
       */
      public static final int TRANSFORM_UPSTAR_VALUE = 341;
      /**
       * <code>TRANSFORM_RESOLVE = 343;</code>
       *
       * <pre>
       * 幻化分解
       * </pre>
       */
      public static final int TRANSFORM_RESOLVE_VALUE = 343;
      /**
       * <code>GUILD_EXAM_COLLECT = 350;</code>
       *
       * <pre>
       * 帮派答题采集
       * </pre>
       */
      public static final int GUILD_EXAM_COLLECT_VALUE = 350;
      /**
       * <code>GUILD_EXAM_PRIZE = 351;</code>
       *
       * <pre>
       * 帮派答题奖励
       * </pre>
       */
      public static final int GUILD_EXAM_PRIZE_VALUE = 351;
      /**
       * <code>GUILD_EXAM_TIP = 352;</code>
       *
       * <pre>
       * 帮派答题奖励邮件提示
       * </pre>
       */
      public static final int GUILD_EXAM_TIP_VALUE = 352;
      /**
       * <code>TALENT_WASH_POINT = 360;</code>
       *
       * <pre>
       * 天赋洗点
       * </pre>
       */
      public static final int TALENT_WASH_POINT_VALUE = 360;
      /**
       * <code>TOU_ZI_JI_HUA_BUY = 400;</code>
       *
       * <pre>
       * 400-600 是运营活动相关，先占位
       * </pre>
       */
      public static final int TOU_ZI_JI_HUA_BUY_VALUE = 400;
      /**
       * <code>TOU_ZI_JI_HUA_RETURN = 401;</code>
       *
       * <pre>
       * 投资计划返还
       * </pre>
       */
      public static final int TOU_ZI_JI_HUA_RETURN_VALUE = 401;
      /**
       * <code>YUE_KA_BUY = 402;</code>
       *
       * <pre>
       * 月卡购买
       * </pre>
       */
      public static final int YUE_KA_BUY_VALUE = 402;
      /**
       * <code>YUE_KA_DAILY_PRIZE = 403;</code>
       *
       * <pre>
       * 月卡日奖励
       * </pre>
       */
      public static final int YUE_KA_DAILY_PRIZE_VALUE = 403;
      /**
       * <code>CHONG_JI_HAO_LI_PRIZE = 404;</code>
       *
       * <pre>
       * 冲级豪礼
       * </pre>
       */
      public static final int CHONG_JI_HAO_LI_PRIZE_VALUE = 404;
      /**
       * <code>MEI_RI_QIAN_DAO_DAILY = 405;</code>
       *
       * <pre>
       * 每日签到
       * </pre>
       */
      public static final int MEI_RI_QIAN_DAO_DAILY_VALUE = 405;
      /**
       * <code>MEI_RI_QIAN_DAO_SUM = 406;</code>
       *
       * <pre>
       * 每日累签
       * </pre>
       */
      public static final int MEI_RI_QIAN_DAO_SUM_VALUE = 406;
      /**
       * <code>COUPON = 407;</code>
       *
       * <pre>
       * 激活码
       * </pre>
       */
      public static final int COUPON_VALUE = 407;
      /**
       * <code>GONG_GAO = 408;</code>
       *
       * <pre>
       * 更新公告
       * </pre>
       */
      public static final int GONG_GAO_VALUE = 408;
      /**
       * <code>DENG_JI_XIAN_GOU_BUY = 409;</code>
       *
       * <pre>
       * 等级限购购买
       * </pre>
       */
      public static final int DENG_JI_XIAN_GOU_BUY_VALUE = 409;
      /**
       * <code>TIAN_SHU_XUN_ZHU = 410;</code>
       *
       * <pre>
       * 天书寻主领取奖励
       * </pre>
       */
      public static final int TIAN_SHU_XUN_ZHU_VALUE = 410;
      /**
       * <code>LEI_CHONG = 411;</code>
       *
       * <pre>
       * 累充
       * </pre>
       */
      public static final int LEI_CHONG_VALUE = 411;
      /**
       * <code>LIAN_CHONG = 412;</code>
       *
       * <pre>
       * 连充
       * </pre>
       */
      public static final int LIAN_CHONG_VALUE = 412;
      /**
       * <code>QI_RI_DENG_LU = 413;</code>
       *
       * <pre>
       * 七日登陆
       * </pre>
       */
      public static final int QI_RI_DENG_LU_VALUE = 413;
      /**
       * <code>LING_YUAN_GOU_BUY = 414;</code>
       *
       * <pre>
       * 零元钻石购
       * </pre>
       */
      public static final int LING_YUAN_GOU_BUY_VALUE = 414;
      /**
       * <code>LING_YUAN_GOU_RETURN = 415;</code>
       *
       * <pre>
       * 零元购返还
       * </pre>
       */
      public static final int LING_YUAN_GOU_RETURN_VALUE = 415;
      /**
       * <code>CHONG_BANG_PRIZE = 416;</code>
       *
       * <pre>
       * 冲榜
       * </pre>
       */
      public static final int CHONG_BANG_PRIZE_VALUE = 416;
      /**
       * <code>JING_JI_PRIZE = 417;</code>
       *
       * <pre>
       * 竞技
       * </pre>
       */
      public static final int JING_JI_PRIZE_VALUE = 417;
      /**
       * <code>SHEN_MI_XIAN_GOU_BUY = 418;</code>
       *
       * <pre>
       * 神秘限购
       * </pre>
       */
      public static final int SHEN_MI_XIAN_GOU_BUY_VALUE = 418;
      /**
       * <code>BOSS_SHOU_SHA = 419;</code>
       *
       * <pre>
       * boss首杀
       * </pre>
       */
      public static final int BOSS_SHOU_SHA_VALUE = 419;
      /**
       * <code>KAI_ZONG_LI_PAI = 420;</code>
       *
       * <pre>
       * 开宗立派
       * </pre>
       */
      public static final int KAI_ZONG_LI_PAI_VALUE = 420;
      /**
       * <code>JI_ZI = 421;</code>
       *
       * <pre>
       * 集字活动
       * </pre>
       */
      public static final int JI_ZI_VALUE = 421;
      /**
       * <code>XIAN_MENG_ZHENG_BA = 422;</code>
       *
       * <pre>
       * 仙盟争霸活动
       * </pre>
       */
      public static final int XIAN_MENG_ZHENG_BA_VALUE = 422;
      /**
       * <code>RECHARGE = 423;</code>
       *
       * <pre>
       * 充值
       * </pre>
       */
      public static final int RECHARGE_VALUE = 423;
      /**
       * <code>FIRST_RECHARGE = 424;</code>
       *
       * <pre>
       * 首充
       * </pre>
       */
      public static final int FIRST_RECHARGE_VALUE = 424;
      /**
       * <code>DAILY_RECHARGE_DIAMOND = 425;</code>
       *
       * <pre>
       * 每日绑钻礼包
       * </pre>
       */
      public static final int DAILY_RECHARGE_DIAMOND_VALUE = 425;
      /**
       * <code>DAILY_ADD_UP_RECHAGE = 426;</code>
       *
       * <pre>
       * 每日累充
       * </pre>
       */
      public static final int DAILY_ADD_UP_RECHAGE_VALUE = 426;
      /**
       * <code>DAYS_RECHARGE = 427;</code>
       *
       * <pre>
       * 累计充值
       * </pre>
       */
      public static final int DAYS_RECHARGE_VALUE = 427;
      /**
       * <code>BIND_DIAMOND = 428;</code>
       *
       * <pre>
       * 绑钻礼包
       * </pre>
       */
      public static final int BIND_DIAMOND_VALUE = 428;
      /**
       * <code>CLIENT_DOWNLOAD = 429;</code>
       *
       * <pre>
       * 分包下载
       * </pre>
       */
      public static final int CLIENT_DOWNLOAD_VALUE = 429;
      /**
       * <code>LING_YUAN_GOU_BIND_DIAMOND_BUY = 430;</code>
       *
       * <pre>
       * 零元绑定钻石购
       * </pre>
       */
      public static final int LING_YUAN_GOU_BIND_DIAMOND_BUY_VALUE = 430;
      /**
       * <code>DENG_LU = 431;</code>
       *
       * <pre>
       * 登陆有礼
       * </pre>
       */
      public static final int DENG_LU_VALUE = 431;
      /**
       * <code>GOODS_EXCHAGNGE = 432;</code>
       *
       * <pre>
       * 庆典兑换
       * </pre>
       */
      public static final int GOODS_EXCHAGNGE_VALUE = 432;
      /**
       * <code>ANGEL_TREASURE = 433;</code>
       *
       * <pre>
       * 天使秘宝
       * </pre>
       */
      public static final int ANGEL_TREASURE_VALUE = 433;
      /**
       * <code>KUANG_HAI = 434;</code>
       *
       * <pre>
       * 庆典狂嗨
       * </pre>
       */
      public static final int KUANG_HAI_VALUE = 434;
      /**
       * <code>CLOUND_BUY = 435;</code>
       *
       * <pre>
       *限时云购
       * </pre>
       */
      public static final int CLOUND_BUY_VALUE = 435;
      /**
       * <code>CLOUND_BUY_MUST_HIT = 436;</code>
       *
       * <pre>
       *限时云购次数满，从购买人列表中，抽取一个人给奖励
       * </pre>
       */
      public static final int CLOUND_BUY_MUST_HIT_VALUE = 436;
      /**
       * <code>DAILY_ADD_UP_CONSUME = 437;</code>
       *
       * <pre>
       * 每日累计消费
       * </pre>
       */
      public static final int DAILY_ADD_UP_CONSUME_VALUE = 437;
      /**
       * <code>DAYS_CONSUME = 438;</code>
       *
       * <pre>
       * 累计消费
       * </pre>
       */
      public static final int DAYS_CONSUME_VALUE = 438;
      /**
       * <code>TIAN_TIAN_FAN_LI_MAIL = 439;</code>
       *
       * <pre>
       *天天返利，未领取时发的邮件
       * </pre>
       */
      public static final int TIAN_TIAN_FAN_LI_MAIL_VALUE = 439;
      /**
       * <code>TIAN_TIAN_FAN_LI = 440;</code>
       *
       * <pre>
       *天天返利领取奖励
       * </pre>
       */
      public static final int TIAN_TIAN_FAN_LI_VALUE = 440;
      /**
       * <code>LUCK_SHOP_REFRESH = 441;</code>
       *
       * <pre>
       *幸运商店刷新
       * </pre>
       */
      public static final int LUCK_SHOP_REFRESH_VALUE = 441;
      /**
       * <code>LUCK_SHOP_BUY = 442;</code>
       *
       * <pre>
       *幸运商店购买
       * </pre>
       */
      public static final int LUCK_SHOP_BUY_VALUE = 442;
      /**
       * <code>BUY_YAN_HUA_QING_DIAN = 443;</code>
       *
       * <pre>
       *购买烟花庆典
       * </pre>
       */
      public static final int BUY_YAN_HUA_QING_DIAN_VALUE = 443;
      /**
       * <code>BOSS_TOU_ZI_BUY = 444;</code>
       *
       * <pre>
       * boss投资购买
       * </pre>
       */
      public static final int BOSS_TOU_ZI_BUY_VALUE = 444;
      /**
       * <code>BOSS_TOU_ZI_GET_PRIZE = 445;</code>
       *
       * <pre>
       * boss投资领取奖励
       * </pre>
       */
      public static final int BOSS_TOU_ZI_GET_PRIZE_VALUE = 445;
      /**
       * <code>CLOUD_BUY_UNLIMIT = 446;</code>
       *
       * <pre>
       *云购不限时邮件
       * </pre>
       */
      public static final int CLOUD_BUY_UNLIMIT_VALUE = 446;
      /**
       * <code>PERFECT_COUPLE_PRIZE = 447;</code>
       *
       * <pre>
       * 完美情人奖励领取
       * </pre>
       */
      public static final int PERFECT_COUPLE_PRIZE_VALUE = 447;
      /**
       * <code>BUY_SPRITE_GOODS_RETURN_EXP = 448;</code>
       *
       * <pre>
       * 购买小魔龙返还经验
       * </pre>
       */
      public static final int BUY_SPRITE_GOODS_RETURN_EXP_VALUE = 448;
      /**
       * <code>DAILY_ADD_UP_LEI_XIAO = 449;</code>
       *
       * <pre>
       * 每日累消
       * </pre>
       */
      public static final int DAILY_ADD_UP_LEI_XIAO_VALUE = 449;
      /**
       * <code>DIAN_FENG_PAI_HANG_PRIZE = 450;</code>
       *
       * <pre>
       * 巅峰排行
       * </pre>
       */
      public static final int DIAN_FENG_PAI_HANG_PRIZE_VALUE = 450;
      /**
       * <code>TREASURE_BOX_OPEN = 451;</code>
       *
       * <pre>
       * 开启宝藏副本箱子
       * </pre>
       */
      public static final int TREASURE_BOX_OPEN_VALUE = 451;
      /**
       * <code>TREASURE_MAP_OPEN = 452;</code>
       *
       * <pre>
       * 开启藏宝图宝藏
       * </pre>
       */
      public static final int TREASURE_MAP_OPEN_VALUE = 452;
      /**
       * <code>JI_FEN_CHONG_BANG_RANK_PRIZE = 453;</code>
       *
       * <pre>
       * 积分冲榜排行奖励
       * </pre>
       */
      public static final int JI_FEN_CHONG_BANG_RANK_PRIZE_VALUE = 453;
      /**
       * <code>JI_FEN_CHONG_BANG_DRAW = 454;</code>
       *
       * <pre>
       * 积分冲榜抽奖
       * </pre>
       */
      public static final int JI_FEN_CHONG_BANG_DRAW_VALUE = 454;
      /**
       * <code>JI_FEN_CHONG_BANG_POINT_PRIZE = 455;</code>
       *
       * <pre>
       * 积分冲榜积分奖励
       * </pre>
       */
      public static final int JI_FEN_CHONG_BANG_POINT_PRIZE_VALUE = 455;
      /**
       * <code>XIAN_GOU_DA_LI_BAO_BUY = 456;</code>
       *
       * <pre>
       * 限购大礼包购买
       * </pre>
       */
      public static final int XIAN_GOU_DA_LI_BAO_BUY_VALUE = 456;
      /**
       * <code>XING_YUN_LUN_PAN_ROLL = 457;</code>
       *
       * <pre>
       * 幸运轮盘转
       * </pre>
       */
      public static final int XING_YUN_LUN_PAN_ROLL_VALUE = 457;
      /**
       * <code>PROMOTION_PRIZE = 458;</code>
       *
       * <pre>
       * 领取进阶线奖励
       * </pre>
       */
      public static final int PROMOTION_PRIZE_VALUE = 458;
      /**
       * <code>DISCOUNT_SHOP = 459;</code>
       *
       * <pre>
       * 折扣商城
       * </pre>
       */
      public static final int DISCOUNT_SHOP_VALUE = 459;
      /**
       * <code>DAILY_TASK = 460;</code>
       *
       * <pre>
       * 每日任务
       * </pre>
       */
      public static final int DAILY_TASK_VALUE = 460;
      /**
       * <code>HEGEMONY_END_FIXED_PRIZE = 601;</code>
       *
       * <pre>
       * 400-600 是运营活动相关，先占位
       * </pre>
       */
      public static final int HEGEMONY_END_FIXED_PRIZE_VALUE = 601;
      /**
       * <code>HEGEMONY_END_RANK_PRIZE = 602;</code>
       *
       * <pre>
       * 帮派争霸排名奖励
       * </pre>
       */
      public static final int HEGEMONY_END_RANK_PRIZE_VALUE = 602;
      /**
       * <code>DOMINATE_CONTINUE_WIN_PRIZE = 603;</code>
       *
       * <pre>
       * 主宰帮会连胜奖励
       * </pre>
       */
      public static final int DOMINATE_CONTINUE_WIN_PRIZE_VALUE = 603;
      /**
       * <code>DOMINATE_GUILD_DAILY_PRIZE = 604;</code>
       *
       * <pre>
       * 主宰帮会成员每日奖励
       * </pre>
       */
      public static final int DOMINATE_GUILD_DAILY_PRIZE_VALUE = 604;
      /**
       * <code>MONEY_PRAY_FREE = 610;</code>
       *
       * <pre>
       *金币祈福免费
       * </pre>
       */
      public static final int MONEY_PRAY_FREE_VALUE = 610;
      /**
       * <code>MONEY_PRAY_COST_DIAMOND = 611;</code>
       *
       * <pre>
       *金币祈福消耗钻石
       * </pre>
       */
      public static final int MONEY_PRAY_COST_DIAMOND_VALUE = 611;
      /**
       * <code>EXP_PRAY_COST_DIAMOND = 612;</code>
       *
       * <pre>
       *经验祈福消耗钻石
       * </pre>
       */
      public static final int EXP_PRAY_COST_DIAMOND_VALUE = 612;
      /**
       * <code>RUNE_LOTTERTY_ONE_TIME_FREE = 620;</code>
       *
       * <pre>
       *符文抽奖免费
       * </pre>
       */
      public static final int RUNE_LOTTERTY_ONE_TIME_FREE_VALUE = 620;
      /**
       * <code>RUNE_LOTTERTY_ONE_TIME = 621;</code>
       *
       * <pre>
       *使用钻石抽奖符文一次
       * </pre>
       */
      public static final int RUNE_LOTTERTY_ONE_TIME_VALUE = 621;
      /**
       * <code>RUNE_LOTTERTY_TEN_TIME = 623;</code>
       *
       * <pre>
       *使用钻石抽奖符文十次
       * </pre>
       */
      public static final int RUNE_LOTTERTY_TEN_TIME_VALUE = 623;
      /**
       * <code>RUNE_LOTTERTY_GET_WEEKLY_PRIZE = 624;</code>
       *
       * <pre>
       *领取周抽奖次数 奖励
       * </pre>
       */
      public static final int RUNE_LOTTERTY_GET_WEEKLY_PRIZE_VALUE = 624;
      /**
       * <code>EQUIP_LOTTERY_1 = 630;</code>
       *
       * <pre>
       *装备寻宝1档
       * </pre>
       */
      public static final int EQUIP_LOTTERY_1_VALUE = 630;
      /**
       * <code>EQUIP_LOTTERY_2 = 631;</code>
       *
       * <pre>
       *装备寻宝2档
       * </pre>
       */
      public static final int EQUIP_LOTTERY_2_VALUE = 631;
      /**
       * <code>EQUIP_LOTTERY_3 = 632;</code>
       *
       * <pre>
       *装备寻宝3档
       * </pre>
       */
      public static final int EQUIP_LOTTERY_3_VALUE = 632;
      /**
       * <code>HANDBOOK_ITEM_UPGRADE = 640;</code>
       *
       * <pre>
       * 图鉴激活or升级
       * </pre>
       */
      public static final int HANDBOOK_ITEM_UPGRADE_VALUE = 640;
      /**
       * <code>HANDBOOK_COMBINATION_UPGRADE = 641;</code>
       *
       * <pre>
       * 图鉴组合激活or升级
       * </pre>
       */
      public static final int HANDBOOK_COMBINATION_UPGRADE_VALUE = 641;
      /**
       * <code>ACTIVE_TURNTABLE_LOTTERY = 650;</code>
       *
       * <pre>
       * 活跃转盘抽奖
       * </pre>
       */
      public static final int ACTIVE_TURNTABLE_LOTTERY_VALUE = 650;
      /**
       * <code>JIAN_BAO_LOTTERY = 651;</code>
       *
       * <pre>
       * 鉴宝抽奖
       * </pre>
       */
      public static final int JIAN_BAO_LOTTERY_VALUE = 651;
      /**
       * <code>TASK_TARGET_KILL_GET = 719;</code>
       *
       * <pre>
       * 任务相关 700-750
       * </pre>
       */
      public static final int TASK_TARGET_KILL_GET_VALUE = 719;
      /**
       * <code>TASK_DONE = 720;</code>
       *
       * <pre>
       * 完成任务
       * </pre>
       */
      public static final int TASK_DONE_VALUE = 720;
      /**
       * <code>CHAPTER_TASK_DONE = 721;</code>
       *
       * <pre>
       * 完成主线任务
       * </pre>
       */
      public static final int CHAPTER_TASK_DONE_VALUE = 721;
      /**
       * <code>STORY_TASK_DONE = 722;</code>
       *
       * <pre>
       * 完成剧情任务
       * </pre>
       */
      public static final int STORY_TASK_DONE_VALUE = 722;
      /**
       * <code>GET_TASK_PRIZE_COST_GOODS = 723;</code>
       *
       * <pre>
       *获得任务奖励，消耗道具
       * </pre>
       */
      public static final int GET_TASK_PRIZE_COST_GOODS_VALUE = 723;
      /**
       * <code>BRANCH_TASK_DONE = 724;</code>
       *
       * <pre>
       * 完成支线任务
       * </pre>
       */
      public static final int BRANCH_TASK_DONE_VALUE = 724;
      /**
       * <code>ESCORT_TASK_ACCEPT = 725;</code>
       *
       * <pre>
       * 接取护送任务
       * </pre>
       */
      public static final int ESCORT_TASK_ACCEPT_VALUE = 725;
      /**
       * <code>ESCORT_TASK_FINISH = 726;</code>
       *
       * <pre>
       * 完成护送任务
       * </pre>
       */
      public static final int ESCORT_TASK_FINISH_VALUE = 726;
      /**
       * <code>REWARD_ONE_KEY_COMPLETE = 727;</code>
       *
       * <pre>
       *赏金任务一键完成消耗钻石
       * </pre>
       */
      public static final int REWARD_ONE_KEY_COMPLETE_VALUE = 727;
      /**
       * <code>REWARD_COMPLETE = 728;</code>
       *
       * <pre>
       *完成赏金任务
       * </pre>
       */
      public static final int REWARD_COMPLETE_VALUE = 728;
      /**
       * <code>TASK_COMMIT_EQUIP = 729;</code>
       *
       * <pre>
       *提交装备任务
       * </pre>
       */
      public static final int TASK_COMMIT_EQUIP_VALUE = 729;
      /**
       * <code>TASK_KILL_LAGER_MONSTER_GET_GOODS = 730;</code>
       *
       * <pre>
       *击杀大于自己指定等级的怪物获得物品
       * </pre>
       */
      public static final int TASK_KILL_LAGER_MONSTER_GET_GOODS_VALUE = 730;
      /**
       * <code>GUARD_GUILD_KILL_MONSTER = 751;</code>
       *
       * <pre>
       *守卫公会杀怪获得
       * </pre>
       */
      public static final int GUARD_GUILD_KILL_MONSTER_VALUE = 751;
      /**
       * <code>GUARD_GUILD_FINISH_REMAIN_GUARD = 752;</code>
       *
       * <pre>
       *守卫公会结束，剩余守护怪获得经验
       * </pre>
       */
      public static final int GUARD_GUILD_FINISH_REMAIN_GUARD_VALUE = 752;
      /**
       * <code>GUARD_GUILD_FINISH_STAR = 753;</code>
       *
       * <pre>
       *守卫公会结束，星级获得经验
       * </pre>
       */
      public static final int GUARD_GUILD_FINISH_STAR_VALUE = 753;
      /**
       * <code>UPGRADE_HERALDRY = 760;</code>
       *
       * <pre>
       *升级纹章
       * </pre>
       */
      public static final int UPGRADE_HERALDRY_VALUE = 760;
      /**
       * <code>COMPOUND_HERALDRY = 761;</code>
       *
       * <pre>
       *合成纹章
       * </pre>
       */
      public static final int COMPOUND_HERALDRY_VALUE = 761;
      /**
       * <code>RESOLVE_HERALDRY = 762;</code>
       *
       * <pre>
       *分解纹章
       * </pre>
       */
      public static final int RESOLVE_HERALDRY_VALUE = 762;
      /**
       * <code>DISMANTLING_HERALDRY = 763;</code>
       *
       * <pre>
       *拆解纹章
       * </pre>
       */
      public static final int DISMANTLING_HERALDRY_VALUE = 763;
      /**
       * <code>ACTIVE_PET_PLUGIN = 770;</code>
       *
       * <pre>
       *激活宠物插件
       * </pre>
       */
      public static final int ACTIVE_PET_PLUGIN_VALUE = 770;
      /**
       * <code>RESOLVE_PET_PLUGIN = 771;</code>
       *
       * <pre>
       *分解宠物插件材料
       * </pre>
       */
      public static final int RESOLVE_PET_PLUGIN_VALUE = 771;
      /**
       * <code>HERALDRY_MYSTERY_BUY_TIMES = 780;</code>
       *
       * <pre>
       *纹章秘境购买次数
       * </pre>
       */
      public static final int HERALDRY_MYSTERY_BUY_TIMES_VALUE = 780;
      /**
       * <code>HERALDRY_MYSTERY_SUMMON_BOSS = 781;</code>
       *
       * <pre>
       *纹章秘境召唤BOSS
       * </pre>
       */
      public static final int HERALDRY_MYSTERY_SUMMON_BOSS_VALUE = 781;
      /**
       * <code>HERALDRY_MYSTERY_SWEEP = 782;</code>
       *
       * <pre>
       *纹章秘境扫荡
       * </pre>
       */
      public static final int HERALDRY_MYSTERY_SWEEP_VALUE = 782;
      /**
       * <code>RENAME_HERO = 790;</code>
       *
       * <pre>
       *个人改名
       * </pre>
       */
      public static final int RENAME_HERO_VALUE = 790;
      /**
       * <code>RENAME_GUILD = 791;</code>
       *
       * <pre>
       *公会改名
       * </pre>
       */
      public static final int RENAME_GUILD_VALUE = 791;
      /**
       * <code>ALPACA_COLLECT = 800;</code>
       *
       * <pre>
       * 破碎群岛采集
       * </pre>
       */
      public static final int ALPACA_COLLECT_VALUE = 800;
      /**
       * <code>ALPACA_TIME_EXP = 801;</code>
       *
       * <pre>
       * 破碎群岛增加经验
       * </pre>
       */
      public static final int ALPACA_TIME_EXP_VALUE = 801;
      /**
       * <code>COMPOND_SOUL_EQUIP_COST = 810;</code>
       *
       * <pre>
       * 魂兽装备合成消耗
       * </pre>
       */
      public static final int COMPOND_SOUL_EQUIP_COST_VALUE = 810;
      /**
       * <code>COMPOND_SOUL_EQUIP = 811;</code>
       *
       * <pre>
       * 魂兽装备合成物品
       * </pre>
       */
      public static final int COMPOND_SOUL_EQUIP_VALUE = 811;
      /**
       * <code>ADD_SOUL_EQUIP_ENABLE_COUNT = 812;</code>
       *
       * <pre>
       * 增加魂兽助战上限
       * </pre>
       */
      public static final int ADD_SOUL_EQUIP_ENABLE_COUNT_VALUE = 812;
      /**
       * <code>ENHANCE_SOUL_EQUIP = 813;</code>
       *
       * <pre>
       * 魂兽装备强化
       * </pre>
       */
      public static final int ENHANCE_SOUL_EQUIP_VALUE = 813;
      /**
       * <code>ACTIVE_LIFE_GRID = 820;</code>
       *
       * <pre>
       * 激活命格
       * </pre>
       */
      public static final int ACTIVE_LIFE_GRID_VALUE = 820;
      /**
       * <code>BROTHER_BECOME_COST = 830;</code>
       *
       * <pre>
       *血盟 830-880
       * </pre>
       */
      public static final int BROTHER_BECOME_COST_VALUE = 830;
      /**
       * <code>BROTHER_BECOME_FAIL_RETURN = 831;</code>
       *
       * <pre>
       *血盟结义失败返还
       * </pre>
       */
      public static final int BROTHER_BECOME_FAIL_RETURN_VALUE = 831;
      /**
       * <code>BROTHER_OTHER_EXIT = 832;</code>
       *
       * <pre>
       *他人退出血盟
       * </pre>
       */
      public static final int BROTHER_OTHER_EXIT_VALUE = 832;
      /**
       * <code>BROTHER_RENAME = 833;</code>
       *
       * <pre>
       *重命名血盟
       * </pre>
       */
      public static final int BROTHER_RENAME_VALUE = 833;
      /**
       * <code>BROTHER_JOIN = 834;</code>
       *
       * <pre>
       *加入血盟
       * </pre>
       */
      public static final int BROTHER_JOIN_VALUE = 834;
      /**
       * <code>BROTHER_FERTILIZER = 835;</code>
       *
       * <pre>
       *血盟成长树施肥
       * </pre>
       */
      public static final int BROTHER_FERTILIZER_VALUE = 835;
      /**
       * <code>BROTHER_FERTILIZER_FULL_LEVEL = 836;</code>
       *
       * <pre>
       *成长树施肥已满级返还肥料
       * </pre>
       */
      public static final int BROTHER_FERTILIZER_FULL_LEVEL_VALUE = 836;
      /**
       * <code>BROTHER_SKILL_RESET = 837;</code>
       *
       * <pre>
       *血盟成长树等级重置
       * </pre>
       */
      public static final int BROTHER_SKILL_RESET_VALUE = 837;
      /**
       * <code>BROTHER_SKILL_RESET_FAIL_RETURN = 838;</code>
       *
       * <pre>
       *成长树等级重置失败返还技能果
       * </pre>
       */
      public static final int BROTHER_SKILL_RESET_FAIL_RETURN_VALUE = 838;
      /**
       * <code>BROTHER_FROZEN = 839;</code>
       *
       * <pre>
       *血盟冻结
       * </pre>
       */
      public static final int BROTHER_FROZEN_VALUE = 839;
      /**
       * <code>BROTHER_BANQUET_ORDER = 840;</code>
       *
       * <pre>
       *血盟宴席预约
       * </pre>
       */
      public static final int BROTHER_BANQUET_ORDER_VALUE = 840;
      /**
       * <code>BROTHER_BANQUET_ORDER_FAIL_RETURN = 841;</code>
       *
       * <pre>
       *血盟宴席预约失败返还
       * </pre>
       */
      public static final int BROTHER_BANQUET_ORDER_FAIL_RETURN_VALUE = 841;
      /**
       * <code>BORTHER_BANQUET_START_MASTER_GET_RPIZE = 842;</code>
       *
       * <pre>
       *血盟宴席开始主人获得奖励
       * </pre>
       */
      public static final int BORTHER_BANQUET_START_MASTER_GET_RPIZE_VALUE = 842;
      /**
       * <code>BORTHER_BANQUET_GET_EXP = 843;</code>
       *
       * <pre>
       *血盟宴席获得泡点经验
       * </pre>
       */
      public static final int BORTHER_BANQUET_GET_EXP_VALUE = 843;
      /**
       * <code>BORTHER_BANQUET_COLLECT_PRIZE = 844;</code>
       *
       * <pre>
       *血盟宴席采集获得奖励
       * </pre>
       */
      public static final int BORTHER_BANQUET_COLLECT_PRIZE_VALUE = 844;
      /**
       * <code>BROTHER_SELF_EXIT = 845;</code>
       *
       * <pre>
       *自己退出血盟
       * </pre>
       */
      public static final int BROTHER_SELF_EXIT_VALUE = 845;
      /**
       * <code>BROTHER_KICK_OUT_VOTE = 846;</code>
       *
       * <pre>
       *血盟请求踢人投票
       * </pre>
       */
      public static final int BROTHER_KICK_OUT_VOTE_VALUE = 846;
      /**
       * <code>BROTHER_BE_KICKOUT = 847;</code>
       *
       * <pre>
       *血盟被踢出
       * </pre>
       */
      public static final int BROTHER_BE_KICKOUT_VALUE = 847;
      /**
       * <code>UP_QUALITY_DUNGEON_DONE = 861;</code>
       *
       * <pre>
       * 升品副本通关
       * </pre>
       */
      public static final int UP_QUALITY_DUNGEON_DONE_VALUE = 861;
      /**
       * <code>UP_QUALITY_DUNGEON_HELP = 862;</code>
       *
       * <pre>
       * 升品副本助战成功
       * </pre>
       */
      public static final int UP_QUALITY_DUNGEON_HELP_VALUE = 862;
      /**
       * <code>UP_QUALITY_DUNGEON_MERGE = 863;</code>
       *
       * <pre>
       * 升品副本合并次数
       * </pre>
       */
      public static final int UP_QUALITY_DUNGEON_MERGE_VALUE = 863;
      /**
       * <code>XING_ZHEN_UPGRADE_USE = 871;</code>
       *
       * <pre>
       * 星阵升级消耗星尘
       * </pre>
       */
      public static final int XING_ZHEN_UPGRADE_USE_VALUE = 871;
      /**
       * <code>AMULET_NORMAL_LOOT = 881;</code>
       *
       * <pre>
       *刻印普通制符
       * </pre>
       */
      public static final int AMULET_NORMAL_LOOT_VALUE = 881;
      /**
       * <code>AMULET_ADVANCE_LOOT = 882;</code>
       *
       * <pre>
       *刻印高级制符
       * </pre>
       */
      public static final int AMULET_ADVANCE_LOOT_VALUE = 882;
      /**
       * <code>AMULET_PHOTO_UPSTAR = 883;</code>
       *
       * <pre>
       *符画激活或升星
       * </pre>
       */
      public static final int AMULET_PHOTO_UPSTAR_VALUE = 883;
      /**
       * <code>AMULET_RESOLVE = 884;</code>
       *
       * <pre>
       *刻印材料分解
       * </pre>
       */
      public static final int AMULET_RESOLVE_VALUE = 884;
      /**
       * <code>EVIL_TREASURY_LOTTERY_ONE = 890;</code>
       *
       * <pre>
       *恶魔宝库抽一次
       * </pre>
       */
      public static final int EVIL_TREASURY_LOTTERY_ONE_VALUE = 890;
      /**
       * <code>EVIL_TREASURY_LOTTERY_TEN = 891;</code>
       *
       * <pre>
       *恶魔宝库抽10次
       * </pre>
       */
      public static final int EVIL_TREASURY_LOTTERY_TEN_VALUE = 891;
      /**
       * <code>EVIL_TREASURY_ENABLE_LOTTERY = 892;</code>
       *
       * <pre>
       *恶魔宝库可以抽奖通知
       * </pre>
       */
      public static final int EVIL_TREASURY_ENABLE_LOTTERY_VALUE = 892;
      /**
       * <code>KF_BROTHER_BATTLE_RANK_PRIZE = 910;</code>
       *
       * <pre>
       *血盟竞技排行奖励
       * </pre>
       */
      public static final int KF_BROTHER_BATTLE_RANK_PRIZE_VALUE = 910;
      /**
       * <code>KF_BROTHER_BATTLE_BUY_TIMES = 911;</code>
       *
       * <pre>
       *血盟竞技购买次数
       * </pre>
       */
      public static final int KF_BROTHER_BATTLE_BUY_TIMES_VALUE = 911;
      /**
       * <code>KF_BROTHER_BATTLE_BOX_PRIZE = 912;</code>
       *
       * <pre>
       * 血盟竞技宝箱奖励
       * </pre>
       */
      public static final int KF_BROTHER_BATTLE_BOX_PRIZE_VALUE = 912;
      /**
       * <code>KF_BROTHER_BATTLE_REPUTATION_PRIZE = 913;</code>
       *
       * <pre>
       * 血盟竞技声望奖励
       * </pre>
       */
      public static final int KF_BROTHER_BATTLE_REPUTATION_PRIZE_VALUE = 913;
      /**
       * <code>KF_BROTHER_BATTLE_END_PRIZE = 914;</code>
       *
       * <pre>
       * 血盟竞技副本结束奖励
       * </pre>
       */
      public static final int KF_BROTHER_BATTLE_END_PRIZE_VALUE = 914;
      /**
       * <code>KF_BOSS_MELEE_RANK_PRIZE = 920;</code>
       *
       * <pre>
       * boss乱斗排行奖励
       * </pre>
       */
      public static final int KF_BOSS_MELEE_RANK_PRIZE_VALUE = 920;


      public final int getNumber() { return value; }

      public static OperateType valueOf(int value) {
        switch (value) {
          case 1: return SYSTEM;
          case 2: return GM;
          case 3: return PLAYER;
          case 4: return SEND_MAIL;
          case 5: return COLLECT_MAIL;
          case 6: return GOODS_USE;
          case 7: return SCENE_GOODS_PICK_UP;
          case 8: return USE_PACKAGE;
          case 10: return KILL_MONSTER;
          case 11: return EXP_BUFF;
          case 12: return UNLOCK_GOODS_CONTAINER;
          case 13: return SCENE_GOODS_DROP;
          case 14: return SHOP_SELL;
          case 15: return FLY_GOODS;
          case 30: return PET_BLESS_GOODS_CONSUME;
          case 31: return PET_STAT_GOODS_CONSUME;
          case 32: return PET_EXP_GOODS_CONSUME;
          case 33: return MOUNT_BLESS_GOODS_CONSUME;
          case 34: return MOUNT_STAT_GOODS_CONSUME;
          case 40: return OFFLINE_HANG;
          case 41: return OFFLINE_HANG_KILLED;
          case 50: return EXTERNAL_UPGRADE;
          case 60: return DEMON_BOSS_ENTER;
          case 61: return PERSONAL_BOSS_ENTER;
          case 62: return GUARD_ELF_SWEEP;
          case 63: return GUARD_ELF_BUY_COUNT;
          case 64: return HOME_BOSS_ENTER;
          case 65: return BOSS_REWARD;
          case 70: return RUNE_RESOLVE;
          case 71: return RUNE_EXCHANGE;
          case 72: return RUNE_UPGRADE;
          case 80: return TOWER_DAILY_PRIZE;
          case 81: return TOWER_PAST_LAYER_PRIZE;
          case 100: return MOKU_MERGER_COST_DIAMOND;
          case 101: return MOKU_ENTER_COST_GOODS;
          case 102: return MOKU_INSPIRE_COST_DIAMOND;
          case 103: return MOKU_INSPIRE_COST_MONEY;
          case 104: return MOKU_BUY_TIMES_COST_DIAMOND;
          case 105: return CLEAR_MO_KU_CD_COST_DIAMOND;
          case 106: return MOKU_MERGER_GET_EXP;
          case 110: return SPRITE_EXPIRED;
          case 111: return SPRITE_UNLOAD;
          case 112: return SPRITE_RENEW;
          case 120: return EQUIP_ENHANCE;
          case 121: return REPLACE_GEM;
          case 122: return FORGE_SUIT;
          case 123: return SUIT_RETURN;
          case 124: return WASH_SLOT_OPEN;
          case 125: return WASH_EUQIP;
          case 126: return EQUIP_REWARD;
          case 127: return ASCEND_PRODUCT;
          case 128: return ASCEND_RETURN;
          case 129: return EQUIP_ADVANCE;
          case 130: return REINI_ONE_KEY;
          case 131: return REIN_DUNGEON_DONE;
          case 132: return REIN_SUCCESS;
          case 140: return XUE_ZHEN_DUNGEON_DONE;
          case 141: return XUE_ZHEN_DUNGEON_HELP;
          case 150: return CREATE_GUILD;
          case 151: return NOTICE_GUILD_ANNOUNCEMENT;
          case 152: return GUILD_TRANS_PRESIDENT;
          case 153: return GUILD_DAILY_PRIZE;
          case 154: return GUILD_VIP_RED_PACKET;
          case 155: return GUILD_RED_PACKET;
          case 156: return GUILD_DONATE_FAIL;
          case 157: return GUILD_DONATE;
          case 158: return GUILD_EXCHANGE_GOODS;
          case 159: return GUILD_UPGRADE_SKILL;
          case 160: return GUILD_LEAVE;
          case 161: return GUILD_KILL_BEAST;
          case 162: return GUILD_OPEN_BEAST;
          case 163: return SHOU_LIANG_DONATE;
          case 164: return GUILD_TASK_COMPLETE;
          case 165: return GUILD_TASK_ONE_KEY_COMPLETE;
          case 166: return GUILD_WAR_BATTLE_ATTEND_PRIZE;
          case 167: return GUILD_WAR_BATTLE_RESULT_PRIZE;
          case 168: return GUILD_WAR_BATTLE_RANK_PRIZE;
          case 169: return GUILD_WAR_BATTLE_GUILD_PRIZE;
          case 170: return GUILD_WAR_WEEKLY_PRIZE;
          case 171: return GUILD_WAR_SEASON_PRIZE;
          case 172: return GUILD_WAR_BATTLE_NOTICE;
          case 173: return GUILD_WAR_ORDER_NOTICE;
          case 180: return AUCITON_ON_SELL;
          case 181: return AUCTION_BUY_SELL;
          case 182: return AUCTION_SELL_EXPIRED;
          case 183: return AUCTION_ON_BUY;
          case 184: return AUCTION_SELL_BUY;
          case 185: return AUCTION_BUY_EXPIRED;
          case 186: return AUCTION_CANCEL_SELL;
          case 187: return AUCTION_CANCEL_BUY;
          case 188: return AUCTION_ON_SELL_FAILED;
          case 189: return AUCTION_ON_BUY_FAILED;
          case 190: return COMPOND_COST;
          case 191: return COMPOND_GOODS;
          case 200: return BAO_KU_BUY_COUNT;
          case 201: return BAO_KU_SWEEP;
          case 210: return MARRIAGE_PROPOSE;
          case 211: return MARRIAGE_PROPOSE_FAILED;
          case 212: return MARRIAGE_PROPOSE_EXPIRED;
          case 213: return MARRIAGE_PROPOSE_SUCCESS;
          case 214: return MARRIAGE_ORDER_WEDDING;
          case 215: return MARRIAGE_INVITE_WEDDING;
          case 216: return MARRIAGE_DIVORCE;
          case 217: return MARRIAGE_BUY_INVITE_COUNT;
          case 218: return MARRIAGE_COLLECT_CANDY;
          case 219: return MARRIAGE_COLLECT_BANQUET;
          case 220: return MARRIAGE_WEDDING_EXP;
          case 221: return SEND_FLOWER;
          case 222: return SEND_WEDDING_DIAMOND;
          case 223: return WEDDING_RING_UPGRADE;
          case 224: return GIVE_CRYSTAL;
          case 225: return GET_CRYSTAL_PRIZE;
          case 226: return GET_CRYSTAL_DAILY_PRIZE;
          case 227: return ACTIVE_CHILD;
          case 228: return DECOMPOSE_CHILD;
          case 229: return UPGRADE_CHILD;
          case 230: return BUY_MATE_DUNGEON_COUNT;
          case 231: return FINISH_MATE_DUNGEON;
          case 251: return EXAM_ANSWER;
          case 252: return KF_EXAM_ANSWER;
          case 260: return VIP_RECHARGE_REBATE;
          case 261: return FREE_VIP;
          case 262: return BUY_VIP_CARD;
          case 263: return VIP_WEEKLY_PRIZE;
          case 264: return VIP_ONCE_PRIZE;
          case 265: return VIP_STORE_EXP;
          case 266: return VIP_EXPIRED;
          case 270: return GET_ACHIEVEMENT_PRIZE;
          case 271: return GET_ACHIEVEMENT_SOCRE_PRIZE;
          case 280: return SHOP_BUY;
          case 290: return UPGRADE_REALM;
          case 300: return HONOR_BATTLE_CHALLENGE;
          case 301: return HONOR_BATTLE_INSPIRE;
          case 302: return HONOR_BATTLE_BUY;
          case 303: return HONOR_BATTLE_RANK_PRIZE;
          case 304: return PEAK_COMBAT_DAILY_PRIZE;
          case 305: return PEAK_COMBAT_BOX_PRIZE;
          case 306: return PEAK_COMBAT_FINISH_DUNGEON;
          case 307: return RED_NAME_BEEN_KILLED;
          case 308: return RELIVE;
          case 309: return BRAVE_PEAK_PASS_LAYER;
          case 310: return THREE_BATTLE_RANK;
          case 311: return THREE_BATTLE_POINT;
          case 312: return KF_PEAK_COMBAT_EXPLOIT_PRIZE;
          case 313: return KF_PEAK_COMBAT_RANK_PRIZE;
          case 314: return KF_PEAK_COMBAT_BUY;
          case 320: return RESOUCE_BAKC_MONEY;
          case 321: return RESOUCE_BAKC_DIAMOND;
          case 330: return GET_LIVENESS_PRIZE;
          case 331: return OPEN_FUNCTION;
          case 340: return TRANSFORM_ACTIVATE;
          case 341: return TRANSFORM_UPSTAR;
          case 343: return TRANSFORM_RESOLVE;
          case 350: return GUILD_EXAM_COLLECT;
          case 351: return GUILD_EXAM_PRIZE;
          case 352: return GUILD_EXAM_TIP;
          case 360: return TALENT_WASH_POINT;
          case 400: return TOU_ZI_JI_HUA_BUY;
          case 401: return TOU_ZI_JI_HUA_RETURN;
          case 402: return YUE_KA_BUY;
          case 403: return YUE_KA_DAILY_PRIZE;
          case 404: return CHONG_JI_HAO_LI_PRIZE;
          case 405: return MEI_RI_QIAN_DAO_DAILY;
          case 406: return MEI_RI_QIAN_DAO_SUM;
          case 407: return COUPON;
          case 408: return GONG_GAO;
          case 409: return DENG_JI_XIAN_GOU_BUY;
          case 410: return TIAN_SHU_XUN_ZHU;
          case 411: return LEI_CHONG;
          case 412: return LIAN_CHONG;
          case 413: return QI_RI_DENG_LU;
          case 414: return LING_YUAN_GOU_BUY;
          case 415: return LING_YUAN_GOU_RETURN;
          case 416: return CHONG_BANG_PRIZE;
          case 417: return JING_JI_PRIZE;
          case 418: return SHEN_MI_XIAN_GOU_BUY;
          case 419: return BOSS_SHOU_SHA;
          case 420: return KAI_ZONG_LI_PAI;
          case 421: return JI_ZI;
          case 422: return XIAN_MENG_ZHENG_BA;
          case 423: return RECHARGE;
          case 424: return FIRST_RECHARGE;
          case 425: return DAILY_RECHARGE_DIAMOND;
          case 426: return DAILY_ADD_UP_RECHAGE;
          case 427: return DAYS_RECHARGE;
          case 428: return BIND_DIAMOND;
          case 429: return CLIENT_DOWNLOAD;
          case 430: return LING_YUAN_GOU_BIND_DIAMOND_BUY;
          case 431: return DENG_LU;
          case 432: return GOODS_EXCHAGNGE;
          case 433: return ANGEL_TREASURE;
          case 434: return KUANG_HAI;
          case 435: return CLOUND_BUY;
          case 436: return CLOUND_BUY_MUST_HIT;
          case 437: return DAILY_ADD_UP_CONSUME;
          case 438: return DAYS_CONSUME;
          case 439: return TIAN_TIAN_FAN_LI_MAIL;
          case 440: return TIAN_TIAN_FAN_LI;
          case 441: return LUCK_SHOP_REFRESH;
          case 442: return LUCK_SHOP_BUY;
          case 443: return BUY_YAN_HUA_QING_DIAN;
          case 444: return BOSS_TOU_ZI_BUY;
          case 445: return BOSS_TOU_ZI_GET_PRIZE;
          case 446: return CLOUD_BUY_UNLIMIT;
          case 447: return PERFECT_COUPLE_PRIZE;
          case 448: return BUY_SPRITE_GOODS_RETURN_EXP;
          case 449: return DAILY_ADD_UP_LEI_XIAO;
          case 450: return DIAN_FENG_PAI_HANG_PRIZE;
          case 451: return TREASURE_BOX_OPEN;
          case 452: return TREASURE_MAP_OPEN;
          case 453: return JI_FEN_CHONG_BANG_RANK_PRIZE;
          case 454: return JI_FEN_CHONG_BANG_DRAW;
          case 455: return JI_FEN_CHONG_BANG_POINT_PRIZE;
          case 456: return XIAN_GOU_DA_LI_BAO_BUY;
          case 457: return XING_YUN_LUN_PAN_ROLL;
          case 458: return PROMOTION_PRIZE;
          case 459: return DISCOUNT_SHOP;
          case 460: return DAILY_TASK;
          case 601: return HEGEMONY_END_FIXED_PRIZE;
          case 602: return HEGEMONY_END_RANK_PRIZE;
          case 603: return DOMINATE_CONTINUE_WIN_PRIZE;
          case 604: return DOMINATE_GUILD_DAILY_PRIZE;
          case 610: return MONEY_PRAY_FREE;
          case 611: return MONEY_PRAY_COST_DIAMOND;
          case 612: return EXP_PRAY_COST_DIAMOND;
          case 620: return RUNE_LOTTERTY_ONE_TIME_FREE;
          case 621: return RUNE_LOTTERTY_ONE_TIME;
          case 623: return RUNE_LOTTERTY_TEN_TIME;
          case 624: return RUNE_LOTTERTY_GET_WEEKLY_PRIZE;
          case 630: return EQUIP_LOTTERY_1;
          case 631: return EQUIP_LOTTERY_2;
          case 632: return EQUIP_LOTTERY_3;
          case 640: return HANDBOOK_ITEM_UPGRADE;
          case 641: return HANDBOOK_COMBINATION_UPGRADE;
          case 650: return ACTIVE_TURNTABLE_LOTTERY;
          case 651: return JIAN_BAO_LOTTERY;
          case 719: return TASK_TARGET_KILL_GET;
          case 720: return TASK_DONE;
          case 721: return CHAPTER_TASK_DONE;
          case 722: return STORY_TASK_DONE;
          case 723: return GET_TASK_PRIZE_COST_GOODS;
          case 724: return BRANCH_TASK_DONE;
          case 725: return ESCORT_TASK_ACCEPT;
          case 726: return ESCORT_TASK_FINISH;
          case 727: return REWARD_ONE_KEY_COMPLETE;
          case 728: return REWARD_COMPLETE;
          case 729: return TASK_COMMIT_EQUIP;
          case 730: return TASK_KILL_LAGER_MONSTER_GET_GOODS;
          case 751: return GUARD_GUILD_KILL_MONSTER;
          case 752: return GUARD_GUILD_FINISH_REMAIN_GUARD;
          case 753: return GUARD_GUILD_FINISH_STAR;
          case 760: return UPGRADE_HERALDRY;
          case 761: return COMPOUND_HERALDRY;
          case 762: return RESOLVE_HERALDRY;
          case 763: return DISMANTLING_HERALDRY;
          case 770: return ACTIVE_PET_PLUGIN;
          case 771: return RESOLVE_PET_PLUGIN;
          case 780: return HERALDRY_MYSTERY_BUY_TIMES;
          case 781: return HERALDRY_MYSTERY_SUMMON_BOSS;
          case 782: return HERALDRY_MYSTERY_SWEEP;
          case 790: return RENAME_HERO;
          case 791: return RENAME_GUILD;
          case 800: return ALPACA_COLLECT;
          case 801: return ALPACA_TIME_EXP;
          case 810: return COMPOND_SOUL_EQUIP_COST;
          case 811: return COMPOND_SOUL_EQUIP;
          case 812: return ADD_SOUL_EQUIP_ENABLE_COUNT;
          case 813: return ENHANCE_SOUL_EQUIP;
          case 820: return ACTIVE_LIFE_GRID;
          case 830: return BROTHER_BECOME_COST;
          case 831: return BROTHER_BECOME_FAIL_RETURN;
          case 832: return BROTHER_OTHER_EXIT;
          case 833: return BROTHER_RENAME;
          case 834: return BROTHER_JOIN;
          case 835: return BROTHER_FERTILIZER;
          case 836: return BROTHER_FERTILIZER_FULL_LEVEL;
          case 837: return BROTHER_SKILL_RESET;
          case 838: return BROTHER_SKILL_RESET_FAIL_RETURN;
          case 839: return BROTHER_FROZEN;
          case 840: return BROTHER_BANQUET_ORDER;
          case 841: return BROTHER_BANQUET_ORDER_FAIL_RETURN;
          case 842: return BORTHER_BANQUET_START_MASTER_GET_RPIZE;
          case 843: return BORTHER_BANQUET_GET_EXP;
          case 844: return BORTHER_BANQUET_COLLECT_PRIZE;
          case 845: return BROTHER_SELF_EXIT;
          case 846: return BROTHER_KICK_OUT_VOTE;
          case 847: return BROTHER_BE_KICKOUT;
          case 861: return UP_QUALITY_DUNGEON_DONE;
          case 862: return UP_QUALITY_DUNGEON_HELP;
          case 863: return UP_QUALITY_DUNGEON_MERGE;
          case 871: return XING_ZHEN_UPGRADE_USE;
          case 881: return AMULET_NORMAL_LOOT;
          case 882: return AMULET_ADVANCE_LOOT;
          case 883: return AMULET_PHOTO_UPSTAR;
          case 884: return AMULET_RESOLVE;
          case 890: return EVIL_TREASURY_LOTTERY_ONE;
          case 891: return EVIL_TREASURY_LOTTERY_TEN;
          case 892: return EVIL_TREASURY_ENABLE_LOTTERY;
          case 910: return KF_BROTHER_BATTLE_RANK_PRIZE;
          case 911: return KF_BROTHER_BATTLE_BUY_TIMES;
          case 912: return KF_BROTHER_BATTLE_BOX_PRIZE;
          case 913: return KF_BROTHER_BATTLE_REPUTATION_PRIZE;
          case 914: return KF_BROTHER_BATTLE_END_PRIZE;
          case 920: return KF_BOSS_MELEE_RANK_PRIZE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<OperateType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<OperateType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<OperateType>() {
              public OperateType findValueByNumber(int number) {
                return OperateType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return app.protobuf.server.LogContent.LogEnum.getDescriptor().getEnumTypes().get(0);
      }

      private static final OperateType[] VALUES = values();

      public static OperateType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private OperateType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:proto.LogEnum.OperateType)
    }

    /**
     * Protobuf enum {@code proto.LogEnum.DiamondOperationType}
     *
     * <pre>
     *钻石相关操作类型
     * </pre>
     */
    public enum DiamondOperationType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>D_MOKU_BUY_TIMES_COST_DIAMOND = 1;</code>
       *
       * <pre>
       *经验秘境增加经验秘境的刷本次数
       * </pre>
       */
      D_MOKU_BUY_TIMES_COST_DIAMOND(0, 1),
      /**
       * <code>D_MOKU_INSPIRE_COST_DIAMOND = 2;</code>
       *
       * <pre>
       *经验秘境绑钻鼓舞
       * </pre>
       */
      D_MOKU_INSPIRE_COST_DIAMOND(1, 2),
      /**
       * <code>D_MOKU_MERGER_COST_DIAMOND = 3;</code>
       *
       * <pre>
       *经验秘境合并次数
       * </pre>
       */
      D_MOKU_MERGER_COST_DIAMOND(2, 3),
      /**
       * <code>D_CLEAR_MO_KU_CD_COST_DIAMOND = 4;</code>
       *
       * <pre>
       *经验秘境冷却清除
       * </pre>
       */
      D_CLEAR_MO_KU_CD_COST_DIAMOND(3, 4),
      /**
       * <code>D_GUARD_ELF_BUY_COUNT = 5;</code>
       *
       * <pre>
       *佣兵秘境增加佣兵秘境的刷本次数
       * </pre>
       */
      D_GUARD_ELF_BUY_COUNT(4, 5),
      /**
       * <code>D_BAO_KU_BUY_COUNT = 6;</code>
       *
       * <pre>
       *金币秘境增加金币秘境的刷本次数
       * </pre>
       */
      D_BAO_KU_BUY_COUNT(5, 6),
      /**
       * <code>D_RUNE_LOTTERTY_ONE_TIME = 7;</code>
       *
       * <pre>
       *符文寻宝符文抽奖
       * </pre>
       */
      D_RUNE_LOTTERTY_ONE_TIME(6, 7),
      /**
       * <code>D_RUNE_LOTTERTY_TEN_TIME = 8;</code>
       *
       * <pre>
       *符文寻宝符文抽奖
       * </pre>
       */
      D_RUNE_LOTTERTY_TEN_TIME(7, 8),
      /**
       * <code>D_EQUIP_LOTTERY_1 = 9;</code>
       *
       * <pre>
       *装备寻宝1档
       * </pre>
       */
      D_EQUIP_LOTTERY_1(8, 9),
      /**
       * <code>D_EQUIP_LOTTERY_2 = 10;</code>
       *
       * <pre>
       *装备寻宝2档
       * </pre>
       */
      D_EQUIP_LOTTERY_2(9, 10),
      /**
       * <code>D_EQUIP_LOTTERY_3 = 11;</code>
       *
       * <pre>
       *装备寻宝3档
       * </pre>
       */
      D_EQUIP_LOTTERY_3(10, 11),
      /**
       * <code>D_HOME_BOSS_ENTER = 16;</code>
       *
       * <pre>
       *-------可以插入类型--------
       * </pre>
       */
      D_HOME_BOSS_ENTER(11, 16),
      /**
       * <code>D_PERSONAL_BOSS_ENTER = 17;</code>
       *
       * <pre>
       *个人boss入场券不足时的门票
       * </pre>
       */
      D_PERSONAL_BOSS_ENTER(12, 17),
      /**
       * <code>D_MARRIAGE_PROPOSE = 18;</code>
       *
       * <pre>
       *结婚系统求婚
       * </pre>
       */
      D_MARRIAGE_PROPOSE(13, 18),
      /**
       * <code>D_BUY_MATE_DUNGEON_COUNT = 19;</code>
       *
       * <pre>
       *情侣副本购买进入次数
       * </pre>
       */
      D_BUY_MATE_DUNGEON_COUNT(14, 19),
      /**
       * <code>D_HONOR_BATTLE_BUY = 20;</code>
       *
       * <pre>
       *荣誉挑战增加荣誉挑战次数
       * </pre>
       */
      D_HONOR_BATTLE_BUY(15, 20),
      /**
       * <code>D_HONOR_BATTLE_INSPIRE = 21;</code>
       *
       * <pre>
       *荣誉挑战激励增加战力
       * </pre>
       */
      D_HONOR_BATTLE_INSPIRE(16, 21),
      /**
       * <code>D_WASH_SLOT_OPEN = 22;</code>
       *
       * <pre>
       *洗练系统开启洗练槽
       * </pre>
       */
      D_WASH_SLOT_OPEN(17, 22),
      /**
       * <code>D_WASH_EUQIP = 23;</code>
       *
       * <pre>
       *洗练系统消耗钻石必定获得紫色属性
       * </pre>
       */
      D_WASH_EUQIP(18, 23),
      /**
       * <code>D_HERALDRY_MYSTERY_BUY_TIMES = 24;</code>
       *
       * <pre>
       *纹章秘境增加纹章秘境的刷本次数
       * </pre>
       */
      D_HERALDRY_MYSTERY_BUY_TIMES(19, 24),
      /**
       * <code>D_HERALDRY_MYSTERY_SUMMON_BOSS = 25;</code>
       *
       * <pre>
       *纹章秘境召唤boss
       * </pre>
       */
      D_HERALDRY_MYSTERY_SUMMON_BOSS(20, 25),
      /**
       * <code>D_BUY_VIP_CARD = 26;</code>
       *
       * <pre>
       *开通vip系统
       * </pre>
       */
      D_BUY_VIP_CARD(21, 26),
      /**
       * <code>D_MONEY_PRAY_COST_DIAMOND = 27;</code>
       *
       * <pre>
       *祈福祈福金币
       * </pre>
       */
      D_MONEY_PRAY_COST_DIAMOND(22, 27),
      /**
       * <code>D_EXP_PRAY_COST_DIAMOND = 28;</code>
       *
       * <pre>
       *祈福祈福经验
       * </pre>
       */
      D_EXP_PRAY_COST_DIAMOND(23, 28),
      /**
       * <code>D_TOU_ZI_JI_HUA_BUY = 31;</code>
       *
       * <pre>
       *-------可以插入类型--------
       * </pre>
       */
      D_TOU_ZI_JI_HUA_BUY(24, 31),
      /**
       * <code>D_YUE_KA_BUY = 32;</code>
       *
       * <pre>
       *月卡投资投资钻石返绑钻
       * </pre>
       */
      D_YUE_KA_BUY(25, 32),
      /**
       * <code>D_BOSS_TOU_ZI_BUY = 33;</code>
       *
       * <pre>
       *boss投资击杀boss返绑钻
       * </pre>
       */
      D_BOSS_TOU_ZI_BUY(26, 33),
      /**
       * <code>D_XING_YUN_LUN_PAN_ROLL = 34;</code>
       *
       * <pre>
       *幸运轮盘每次消耗不等数量钻石返利
       * </pre>
       */
      D_XING_YUN_LUN_PAN_ROLL(27, 34),
      /**
       * <code>D_LUCK_SHOP_REFRESH = 35;</code>
       *
       * <pre>
       *幸运商店星级刷新
       * </pre>
       */
      D_LUCK_SHOP_REFRESH(28, 35),
      /**
       * <code>D_BUY_YAN_HUA_QING_DIAN = 36;</code>
       *
       * <pre>
       *烟花庆典抽奖活动
       * </pre>
       */
      D_BUY_YAN_HUA_QING_DIAN(29, 36),
      /**
       * <code>D_CLOUND_BUY = 37;</code>
       *
       * <pre>
       *限时云购购买抽奖号码
       * </pre>
       */
      D_CLOUND_BUY(30, 37),
      /**
       * <code>D_RESOUCE_BAKC_EXP_DUNGEON = 40;</code>
       *
       * <pre>
       *-------可以插入类型--------
       * </pre>
       */
      D_RESOUCE_BAKC_EXP_DUNGEON(31, 40),
      /**
       * <code>D_RESOUCE_BAKC_EQUIP_DUNGEON = 41;</code>
       *
       * <pre>
       *资源找回之装备副本(挑战秘境)
       * </pre>
       */
      D_RESOUCE_BAKC_EQUIP_DUNGEON(32, 41),
      /**
       * <code>D_RESOUCE_BAKC_GUARD_ELF_DUNGEON = 42;</code>
       *
       * <pre>
       *资源找回之守护仙灵
       * </pre>
       */
      D_RESOUCE_BAKC_GUARD_ELF_DUNGEON(33, 42),
      /**
       * <code>D_RESOUCE_BAKC_MONEY_DUNGEON = 43;</code>
       *
       * <pre>
       *资源找回之仙帝宝库
       * </pre>
       */
      D_RESOUCE_BAKC_MONEY_DUNGEON(34, 43),
      /**
       * <code>D_RESOUCE_BAKC_REWARD_TASK = 44;</code>
       *
       * <pre>
       *资源找回之赏金任务
       * </pre>
       */
      D_RESOUCE_BAKC_REWARD_TASK(35, 44),
      /**
       * <code>D_RESOUCE_BAKC_EXAM_DUNGEON = 45;</code>
       *
       * <pre>
       *资源找回之修仙论道
       * </pre>
       */
      D_RESOUCE_BAKC_EXAM_DUNGEON(36, 45),
      /**
       * <code>D_RESOUCE_BAKC_QING_YUN_ZHI_DIAN = 46;</code>
       *
       * <pre>
       *资源找回之青云之巅(勇者之巅)
       * </pre>
       */
      D_RESOUCE_BAKC_QING_YUN_ZHI_DIAN(37, 46),
      /**
       * <code>D_RESOUCE_BAKC_SAN_JIE_ZHAN_CHANG = 47;</code>
       *
       * <pre>
       *资源找回之三界战场
       * </pre>
       */
      D_RESOUCE_BAKC_SAN_JIE_ZHAN_CHANG(38, 47),
      /**
       * <code>D_RESOUCE_BAKC_XIAN_MENG_WAN_YAN = 48;</code>
       *
       * <pre>
       *资源找回之仙盟晚宴
       * </pre>
       */
      D_RESOUCE_BAKC_XIAN_MENG_WAN_YAN(39, 48),
      /**
       * <code>D_RESOUCE_BAKC_TIAN_JIANG_MO_HE = 49;</code>
       *
       * <pre>
       *资源找回之天降魔盒
       * </pre>
       */
      D_RESOUCE_BAKC_TIAN_JIANG_MO_HE(40, 49),
      /**
       * <code>D_RESOUCE_BAKC_HONOR_BATTLE = 50;</code>
       *
       * <pre>
       *资源找回之决战青云(荣誉挑战)
       * </pre>
       */
      D_RESOUCE_BAKC_HONOR_BATTLE(41, 50),
      /**
       * <code>D_RESOUCE_BAKC_ESCORT_TASK = 51;</code>
       *
       * <pre>
       *资源找回之护送任务
       * </pre>
       */
      D_RESOUCE_BAKC_ESCORT_TASK(42, 51),
      /**
       * <code>D_RESOUCE_BAKC_GUARD_GUILD = 52;</code>
       *
       * <pre>
       *资源找回之守护公会
       * </pre>
       */
      D_RESOUCE_BAKC_GUARD_GUILD(43, 52),
      /**
       * <code>D_RESOUCE_BAKC_HERALDRY_MYSTERY_DUNGEON = 53;</code>
       *
       * <pre>
       *资源找回之纹章秘境
       * </pre>
       */
      D_RESOUCE_BAKC_HERALDRY_MYSTERY_DUNGEON(44, 53),
      /**
       * <code>D_RESOUCE_BAKC_UP_QUALITY_DUNGEON = 54;</code>
       *
       * <pre>
       *资源找回之升品副本
       * </pre>
       */
      D_RESOUCE_BAKC_UP_QUALITY_DUNGEON(45, 54),
      ;

      /**
       * <code>D_MOKU_BUY_TIMES_COST_DIAMOND = 1;</code>
       *
       * <pre>
       *经验秘境增加经验秘境的刷本次数
       * </pre>
       */
      public static final int D_MOKU_BUY_TIMES_COST_DIAMOND_VALUE = 1;
      /**
       * <code>D_MOKU_INSPIRE_COST_DIAMOND = 2;</code>
       *
       * <pre>
       *经验秘境绑钻鼓舞
       * </pre>
       */
      public static final int D_MOKU_INSPIRE_COST_DIAMOND_VALUE = 2;
      /**
       * <code>D_MOKU_MERGER_COST_DIAMOND = 3;</code>
       *
       * <pre>
       *经验秘境合并次数
       * </pre>
       */
      public static final int D_MOKU_MERGER_COST_DIAMOND_VALUE = 3;
      /**
       * <code>D_CLEAR_MO_KU_CD_COST_DIAMOND = 4;</code>
       *
       * <pre>
       *经验秘境冷却清除
       * </pre>
       */
      public static final int D_CLEAR_MO_KU_CD_COST_DIAMOND_VALUE = 4;
      /**
       * <code>D_GUARD_ELF_BUY_COUNT = 5;</code>
       *
       * <pre>
       *佣兵秘境增加佣兵秘境的刷本次数
       * </pre>
       */
      public static final int D_GUARD_ELF_BUY_COUNT_VALUE = 5;
      /**
       * <code>D_BAO_KU_BUY_COUNT = 6;</code>
       *
       * <pre>
       *金币秘境增加金币秘境的刷本次数
       * </pre>
       */
      public static final int D_BAO_KU_BUY_COUNT_VALUE = 6;
      /**
       * <code>D_RUNE_LOTTERTY_ONE_TIME = 7;</code>
       *
       * <pre>
       *符文寻宝符文抽奖
       * </pre>
       */
      public static final int D_RUNE_LOTTERTY_ONE_TIME_VALUE = 7;
      /**
       * <code>D_RUNE_LOTTERTY_TEN_TIME = 8;</code>
       *
       * <pre>
       *符文寻宝符文抽奖
       * </pre>
       */
      public static final int D_RUNE_LOTTERTY_TEN_TIME_VALUE = 8;
      /**
       * <code>D_EQUIP_LOTTERY_1 = 9;</code>
       *
       * <pre>
       *装备寻宝1档
       * </pre>
       */
      public static final int D_EQUIP_LOTTERY_1_VALUE = 9;
      /**
       * <code>D_EQUIP_LOTTERY_2 = 10;</code>
       *
       * <pre>
       *装备寻宝2档
       * </pre>
       */
      public static final int D_EQUIP_LOTTERY_2_VALUE = 10;
      /**
       * <code>D_EQUIP_LOTTERY_3 = 11;</code>
       *
       * <pre>
       *装备寻宝3档
       * </pre>
       */
      public static final int D_EQUIP_LOTTERY_3_VALUE = 11;
      /**
       * <code>D_HOME_BOSS_ENTER = 16;</code>
       *
       * <pre>
       *-------可以插入类型--------
       * </pre>
       */
      public static final int D_HOME_BOSS_ENTER_VALUE = 16;
      /**
       * <code>D_PERSONAL_BOSS_ENTER = 17;</code>
       *
       * <pre>
       *个人boss入场券不足时的门票
       * </pre>
       */
      public static final int D_PERSONAL_BOSS_ENTER_VALUE = 17;
      /**
       * <code>D_MARRIAGE_PROPOSE = 18;</code>
       *
       * <pre>
       *结婚系统求婚
       * </pre>
       */
      public static final int D_MARRIAGE_PROPOSE_VALUE = 18;
      /**
       * <code>D_BUY_MATE_DUNGEON_COUNT = 19;</code>
       *
       * <pre>
       *情侣副本购买进入次数
       * </pre>
       */
      public static final int D_BUY_MATE_DUNGEON_COUNT_VALUE = 19;
      /**
       * <code>D_HONOR_BATTLE_BUY = 20;</code>
       *
       * <pre>
       *荣誉挑战增加荣誉挑战次数
       * </pre>
       */
      public static final int D_HONOR_BATTLE_BUY_VALUE = 20;
      /**
       * <code>D_HONOR_BATTLE_INSPIRE = 21;</code>
       *
       * <pre>
       *荣誉挑战激励增加战力
       * </pre>
       */
      public static final int D_HONOR_BATTLE_INSPIRE_VALUE = 21;
      /**
       * <code>D_WASH_SLOT_OPEN = 22;</code>
       *
       * <pre>
       *洗练系统开启洗练槽
       * </pre>
       */
      public static final int D_WASH_SLOT_OPEN_VALUE = 22;
      /**
       * <code>D_WASH_EUQIP = 23;</code>
       *
       * <pre>
       *洗练系统消耗钻石必定获得紫色属性
       * </pre>
       */
      public static final int D_WASH_EUQIP_VALUE = 23;
      /**
       * <code>D_HERALDRY_MYSTERY_BUY_TIMES = 24;</code>
       *
       * <pre>
       *纹章秘境增加纹章秘境的刷本次数
       * </pre>
       */
      public static final int D_HERALDRY_MYSTERY_BUY_TIMES_VALUE = 24;
      /**
       * <code>D_HERALDRY_MYSTERY_SUMMON_BOSS = 25;</code>
       *
       * <pre>
       *纹章秘境召唤boss
       * </pre>
       */
      public static final int D_HERALDRY_MYSTERY_SUMMON_BOSS_VALUE = 25;
      /**
       * <code>D_BUY_VIP_CARD = 26;</code>
       *
       * <pre>
       *开通vip系统
       * </pre>
       */
      public static final int D_BUY_VIP_CARD_VALUE = 26;
      /**
       * <code>D_MONEY_PRAY_COST_DIAMOND = 27;</code>
       *
       * <pre>
       *祈福祈福金币
       * </pre>
       */
      public static final int D_MONEY_PRAY_COST_DIAMOND_VALUE = 27;
      /**
       * <code>D_EXP_PRAY_COST_DIAMOND = 28;</code>
       *
       * <pre>
       *祈福祈福经验
       * </pre>
       */
      public static final int D_EXP_PRAY_COST_DIAMOND_VALUE = 28;
      /**
       * <code>D_TOU_ZI_JI_HUA_BUY = 31;</code>
       *
       * <pre>
       *-------可以插入类型--------
       * </pre>
       */
      public static final int D_TOU_ZI_JI_HUA_BUY_VALUE = 31;
      /**
       * <code>D_YUE_KA_BUY = 32;</code>
       *
       * <pre>
       *月卡投资投资钻石返绑钻
       * </pre>
       */
      public static final int D_YUE_KA_BUY_VALUE = 32;
      /**
       * <code>D_BOSS_TOU_ZI_BUY = 33;</code>
       *
       * <pre>
       *boss投资击杀boss返绑钻
       * </pre>
       */
      public static final int D_BOSS_TOU_ZI_BUY_VALUE = 33;
      /**
       * <code>D_XING_YUN_LUN_PAN_ROLL = 34;</code>
       *
       * <pre>
       *幸运轮盘每次消耗不等数量钻石返利
       * </pre>
       */
      public static final int D_XING_YUN_LUN_PAN_ROLL_VALUE = 34;
      /**
       * <code>D_LUCK_SHOP_REFRESH = 35;</code>
       *
       * <pre>
       *幸运商店星级刷新
       * </pre>
       */
      public static final int D_LUCK_SHOP_REFRESH_VALUE = 35;
      /**
       * <code>D_BUY_YAN_HUA_QING_DIAN = 36;</code>
       *
       * <pre>
       *烟花庆典抽奖活动
       * </pre>
       */
      public static final int D_BUY_YAN_HUA_QING_DIAN_VALUE = 36;
      /**
       * <code>D_CLOUND_BUY = 37;</code>
       *
       * <pre>
       *限时云购购买抽奖号码
       * </pre>
       */
      public static final int D_CLOUND_BUY_VALUE = 37;
      /**
       * <code>D_RESOUCE_BAKC_EXP_DUNGEON = 40;</code>
       *
       * <pre>
       *-------可以插入类型--------
       * </pre>
       */
      public static final int D_RESOUCE_BAKC_EXP_DUNGEON_VALUE = 40;
      /**
       * <code>D_RESOUCE_BAKC_EQUIP_DUNGEON = 41;</code>
       *
       * <pre>
       *资源找回之装备副本(挑战秘境)
       * </pre>
       */
      public static final int D_RESOUCE_BAKC_EQUIP_DUNGEON_VALUE = 41;
      /**
       * <code>D_RESOUCE_BAKC_GUARD_ELF_DUNGEON = 42;</code>
       *
       * <pre>
       *资源找回之守护仙灵
       * </pre>
       */
      public static final int D_RESOUCE_BAKC_GUARD_ELF_DUNGEON_VALUE = 42;
      /**
       * <code>D_RESOUCE_BAKC_MONEY_DUNGEON = 43;</code>
       *
       * <pre>
       *资源找回之仙帝宝库
       * </pre>
       */
      public static final int D_RESOUCE_BAKC_MONEY_DUNGEON_VALUE = 43;
      /**
       * <code>D_RESOUCE_BAKC_REWARD_TASK = 44;</code>
       *
       * <pre>
       *资源找回之赏金任务
       * </pre>
       */
      public static final int D_RESOUCE_BAKC_REWARD_TASK_VALUE = 44;
      /**
       * <code>D_RESOUCE_BAKC_EXAM_DUNGEON = 45;</code>
       *
       * <pre>
       *资源找回之修仙论道
       * </pre>
       */
      public static final int D_RESOUCE_BAKC_EXAM_DUNGEON_VALUE = 45;
      /**
       * <code>D_RESOUCE_BAKC_QING_YUN_ZHI_DIAN = 46;</code>
       *
       * <pre>
       *资源找回之青云之巅(勇者之巅)
       * </pre>
       */
      public static final int D_RESOUCE_BAKC_QING_YUN_ZHI_DIAN_VALUE = 46;
      /**
       * <code>D_RESOUCE_BAKC_SAN_JIE_ZHAN_CHANG = 47;</code>
       *
       * <pre>
       *资源找回之三界战场
       * </pre>
       */
      public static final int D_RESOUCE_BAKC_SAN_JIE_ZHAN_CHANG_VALUE = 47;
      /**
       * <code>D_RESOUCE_BAKC_XIAN_MENG_WAN_YAN = 48;</code>
       *
       * <pre>
       *资源找回之仙盟晚宴
       * </pre>
       */
      public static final int D_RESOUCE_BAKC_XIAN_MENG_WAN_YAN_VALUE = 48;
      /**
       * <code>D_RESOUCE_BAKC_TIAN_JIANG_MO_HE = 49;</code>
       *
       * <pre>
       *资源找回之天降魔盒
       * </pre>
       */
      public static final int D_RESOUCE_BAKC_TIAN_JIANG_MO_HE_VALUE = 49;
      /**
       * <code>D_RESOUCE_BAKC_HONOR_BATTLE = 50;</code>
       *
       * <pre>
       *资源找回之决战青云(荣誉挑战)
       * </pre>
       */
      public static final int D_RESOUCE_BAKC_HONOR_BATTLE_VALUE = 50;
      /**
       * <code>D_RESOUCE_BAKC_ESCORT_TASK = 51;</code>
       *
       * <pre>
       *资源找回之护送任务
       * </pre>
       */
      public static final int D_RESOUCE_BAKC_ESCORT_TASK_VALUE = 51;
      /**
       * <code>D_RESOUCE_BAKC_GUARD_GUILD = 52;</code>
       *
       * <pre>
       *资源找回之守护公会
       * </pre>
       */
      public static final int D_RESOUCE_BAKC_GUARD_GUILD_VALUE = 52;
      /**
       * <code>D_RESOUCE_BAKC_HERALDRY_MYSTERY_DUNGEON = 53;</code>
       *
       * <pre>
       *资源找回之纹章秘境
       * </pre>
       */
      public static final int D_RESOUCE_BAKC_HERALDRY_MYSTERY_DUNGEON_VALUE = 53;
      /**
       * <code>D_RESOUCE_BAKC_UP_QUALITY_DUNGEON = 54;</code>
       *
       * <pre>
       *资源找回之升品副本
       * </pre>
       */
      public static final int D_RESOUCE_BAKC_UP_QUALITY_DUNGEON_VALUE = 54;


      public final int getNumber() { return value; }

      public static DiamondOperationType valueOf(int value) {
        switch (value) {
          case 1: return D_MOKU_BUY_TIMES_COST_DIAMOND;
          case 2: return D_MOKU_INSPIRE_COST_DIAMOND;
          case 3: return D_MOKU_MERGER_COST_DIAMOND;
          case 4: return D_CLEAR_MO_KU_CD_COST_DIAMOND;
          case 5: return D_GUARD_ELF_BUY_COUNT;
          case 6: return D_BAO_KU_BUY_COUNT;
          case 7: return D_RUNE_LOTTERTY_ONE_TIME;
          case 8: return D_RUNE_LOTTERTY_TEN_TIME;
          case 9: return D_EQUIP_LOTTERY_1;
          case 10: return D_EQUIP_LOTTERY_2;
          case 11: return D_EQUIP_LOTTERY_3;
          case 16: return D_HOME_BOSS_ENTER;
          case 17: return D_PERSONAL_BOSS_ENTER;
          case 18: return D_MARRIAGE_PROPOSE;
          case 19: return D_BUY_MATE_DUNGEON_COUNT;
          case 20: return D_HONOR_BATTLE_BUY;
          case 21: return D_HONOR_BATTLE_INSPIRE;
          case 22: return D_WASH_SLOT_OPEN;
          case 23: return D_WASH_EUQIP;
          case 24: return D_HERALDRY_MYSTERY_BUY_TIMES;
          case 25: return D_HERALDRY_MYSTERY_SUMMON_BOSS;
          case 26: return D_BUY_VIP_CARD;
          case 27: return D_MONEY_PRAY_COST_DIAMOND;
          case 28: return D_EXP_PRAY_COST_DIAMOND;
          case 31: return D_TOU_ZI_JI_HUA_BUY;
          case 32: return D_YUE_KA_BUY;
          case 33: return D_BOSS_TOU_ZI_BUY;
          case 34: return D_XING_YUN_LUN_PAN_ROLL;
          case 35: return D_LUCK_SHOP_REFRESH;
          case 36: return D_BUY_YAN_HUA_QING_DIAN;
          case 37: return D_CLOUND_BUY;
          case 40: return D_RESOUCE_BAKC_EXP_DUNGEON;
          case 41: return D_RESOUCE_BAKC_EQUIP_DUNGEON;
          case 42: return D_RESOUCE_BAKC_GUARD_ELF_DUNGEON;
          case 43: return D_RESOUCE_BAKC_MONEY_DUNGEON;
          case 44: return D_RESOUCE_BAKC_REWARD_TASK;
          case 45: return D_RESOUCE_BAKC_EXAM_DUNGEON;
          case 46: return D_RESOUCE_BAKC_QING_YUN_ZHI_DIAN;
          case 47: return D_RESOUCE_BAKC_SAN_JIE_ZHAN_CHANG;
          case 48: return D_RESOUCE_BAKC_XIAN_MENG_WAN_YAN;
          case 49: return D_RESOUCE_BAKC_TIAN_JIANG_MO_HE;
          case 50: return D_RESOUCE_BAKC_HONOR_BATTLE;
          case 51: return D_RESOUCE_BAKC_ESCORT_TASK;
          case 52: return D_RESOUCE_BAKC_GUARD_GUILD;
          case 53: return D_RESOUCE_BAKC_HERALDRY_MYSTERY_DUNGEON;
          case 54: return D_RESOUCE_BAKC_UP_QUALITY_DUNGEON;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DiamondOperationType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<DiamondOperationType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DiamondOperationType>() {
              public DiamondOperationType findValueByNumber(int number) {
                return DiamondOperationType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return app.protobuf.server.LogContent.LogEnum.getDescriptor().getEnumTypes().get(1);
      }

      private static final DiamondOperationType[] VALUES = values();

      public static DiamondOperationType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private DiamondOperationType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:proto.LogEnum.DiamondOperationType)
    }

    /**
     * Protobuf enum {@code proto.LogEnum.ShopType}
     */
    public enum ShopType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SHOP_NORMAL = 1;</code>
       *
       * <pre>
       *商城
       * </pre>
       */
      SHOP_NORMAL(0, 1),
      /**
       * <code>SHOP_DENG_JI_XIAN_GOU = 2;</code>
       *
       * <pre>
       *每日限购(等级限购)
       * </pre>
       */
      SHOP_DENG_JI_XIAN_GOU(1, 2),
      /**
       * <code>SHOP_SHEN_MI_XIAN_GOU = 3;</code>
       *
       * <pre>
       *神秘限购
       * </pre>
       */
      SHOP_SHEN_MI_XIAN_GOU(2, 3),
      /**
       * <code>SHOP_LUCK_SHOP = 4;</code>
       *
       * <pre>
       *幸运商店
       * </pre>
       */
      SHOP_LUCK_SHOP(3, 4),
      ;

      /**
       * <code>SHOP_NORMAL = 1;</code>
       *
       * <pre>
       *商城
       * </pre>
       */
      public static final int SHOP_NORMAL_VALUE = 1;
      /**
       * <code>SHOP_DENG_JI_XIAN_GOU = 2;</code>
       *
       * <pre>
       *每日限购(等级限购)
       * </pre>
       */
      public static final int SHOP_DENG_JI_XIAN_GOU_VALUE = 2;
      /**
       * <code>SHOP_SHEN_MI_XIAN_GOU = 3;</code>
       *
       * <pre>
       *神秘限购
       * </pre>
       */
      public static final int SHOP_SHEN_MI_XIAN_GOU_VALUE = 3;
      /**
       * <code>SHOP_LUCK_SHOP = 4;</code>
       *
       * <pre>
       *幸运商店
       * </pre>
       */
      public static final int SHOP_LUCK_SHOP_VALUE = 4;


      public final int getNumber() { return value; }

      public static ShopType valueOf(int value) {
        switch (value) {
          case 1: return SHOP_NORMAL;
          case 2: return SHOP_DENG_JI_XIAN_GOU;
          case 3: return SHOP_SHEN_MI_XIAN_GOU;
          case 4: return SHOP_LUCK_SHOP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ShopType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ShopType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ShopType>() {
              public ShopType findValueByNumber(int number) {
                return ShopType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return app.protobuf.server.LogContent.LogEnum.getDescriptor().getEnumTypes().get(2);
      }

      private static final ShopType[] VALUES = values();

      public static ShopType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ShopType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:proto.LogEnum.ShopType)
    }

    /**
     * Protobuf enum {@code proto.LogEnum.TransportType}
     */
    public enum TransportType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>GATE = 1;</code>
       *
       * <pre>
       * 传送门
       * </pre>
       */
      GATE(0, 1),
      /**
       * <code>CHANGE_LINE = 2;</code>
       *
       * <pre>
       * 换线
       * </pre>
       */
      CHANGE_LINE(1, 2),
      /**
       * <code>CITY_RELIVE = 3;</code>
       *
       * <pre>
       * 回城复活
       * </pre>
       */
      CITY_RELIVE(2, 3),
      /**
       * <code>RETURN_CITY = 4;</code>
       *
       * <pre>
       * 回城
       * </pre>
       */
      RETURN_CITY(3, 4),
      /**
       * <code>TP_GOODS = 5;</code>
       *
       * <pre>
       * 传送卷轴
       * </pre>
       */
      TP_GOODS(4, 5),
      /**
       * <code>NPC = 6;</code>
       *
       * <pre>
       * NPC传送
       * </pre>
       */
      NPC(5, 6),
      /**
       * <code>MAP = 7;</code>
       *
       * <pre>
       * 地图传送
       * </pre>
       */
      MAP(6, 7),
      /**
       * <code>TP_TASK = 8;</code>
       *
       * <pre>
       * 任务传送
       * </pre>
       */
      TP_TASK(7, 8),
      /**
       * <code>ASSIST = 9;</code>
       *
       * <pre>
       * 聊天位置传送
       * </pre>
       */
      ASSIST(8, 9),
      /**
       * <code>ENTER_DUNGEON = 10;</code>
       *
       * <pre>
       * 进入副本
       * </pre>
       */
      ENTER_DUNGEON(9, 10),
      /**
       * <code>LEAVE_DUNGEON = 11;</code>
       *
       * <pre>
       * 离开副本
       * </pre>
       */
      LEAVE_DUNGEON(10, 11),
      /**
       * <code>OFFLINE = 12;</code>
       *
       * <pre>
       * 离线
       * </pre>
       */
      OFFLINE(11, 12),
      /**
       * <code>GM_TP = 13;</code>
       *
       * <pre>
       * GM
       * </pre>
       */
      GM_TP(12, 13),
      /**
       * <code>TEAM = 17;</code>
       *
       * <pre>
       * 组队传送
       * </pre>
       */
      TEAM(13, 17),
      /**
       * <code>WANG_ZHE = 18;</code>
       *
       * <pre>
       * 王者印记
       * </pre>
       */
      WANG_ZHE(14, 18),
      /**
       * <code>SUMMON = 19;</code>
       *
       * <pre>
       * 国王召唤
       * </pre>
       */
      SUMMON(15, 19),
      /**
       * <code>WATCH = 20;</code>
       *
       * <pre>
       * 观战
       * </pre>
       */
      WATCH(16, 20),
      /**
       * <code>TRANSPORT_ARENA = 21;</code>
       *
       * <pre>
       * 竞技场
       * </pre>
       */
      TRANSPORT_ARENA(17, 21),
      /**
       * <code>TRANSPORT_DOUBLE_FLY = 22;</code>
       *
       * <pre>
       * 比翼齐飞
       * </pre>
       */
      TRANSPORT_DOUBLE_FLY(18, 22),
      /**
       * <code>FLY = 23;</code>
       *
       * <pre>
       * 飞行道具
       * </pre>
       */
      FLY(19, 23),
      /**
       * <code>EXAM_KICK_OTHER = 24;</code>
       *
       * <pre>
       *答题踢人
       * </pre>
       */
      EXAM_KICK_OTHER(20, 24),
      ;

      /**
       * <code>GATE = 1;</code>
       *
       * <pre>
       * 传送门
       * </pre>
       */
      public static final int GATE_VALUE = 1;
      /**
       * <code>CHANGE_LINE = 2;</code>
       *
       * <pre>
       * 换线
       * </pre>
       */
      public static final int CHANGE_LINE_VALUE = 2;
      /**
       * <code>CITY_RELIVE = 3;</code>
       *
       * <pre>
       * 回城复活
       * </pre>
       */
      public static final int CITY_RELIVE_VALUE = 3;
      /**
       * <code>RETURN_CITY = 4;</code>
       *
       * <pre>
       * 回城
       * </pre>
       */
      public static final int RETURN_CITY_VALUE = 4;
      /**
       * <code>TP_GOODS = 5;</code>
       *
       * <pre>
       * 传送卷轴
       * </pre>
       */
      public static final int TP_GOODS_VALUE = 5;
      /**
       * <code>NPC = 6;</code>
       *
       * <pre>
       * NPC传送
       * </pre>
       */
      public static final int NPC_VALUE = 6;
      /**
       * <code>MAP = 7;</code>
       *
       * <pre>
       * 地图传送
       * </pre>
       */
      public static final int MAP_VALUE = 7;
      /**
       * <code>TP_TASK = 8;</code>
       *
       * <pre>
       * 任务传送
       * </pre>
       */
      public static final int TP_TASK_VALUE = 8;
      /**
       * <code>ASSIST = 9;</code>
       *
       * <pre>
       * 聊天位置传送
       * </pre>
       */
      public static final int ASSIST_VALUE = 9;
      /**
       * <code>ENTER_DUNGEON = 10;</code>
       *
       * <pre>
       * 进入副本
       * </pre>
       */
      public static final int ENTER_DUNGEON_VALUE = 10;
      /**
       * <code>LEAVE_DUNGEON = 11;</code>
       *
       * <pre>
       * 离开副本
       * </pre>
       */
      public static final int LEAVE_DUNGEON_VALUE = 11;
      /**
       * <code>OFFLINE = 12;</code>
       *
       * <pre>
       * 离线
       * </pre>
       */
      public static final int OFFLINE_VALUE = 12;
      /**
       * <code>GM_TP = 13;</code>
       *
       * <pre>
       * GM
       * </pre>
       */
      public static final int GM_TP_VALUE = 13;
      /**
       * <code>TEAM = 17;</code>
       *
       * <pre>
       * 组队传送
       * </pre>
       */
      public static final int TEAM_VALUE = 17;
      /**
       * <code>WANG_ZHE = 18;</code>
       *
       * <pre>
       * 王者印记
       * </pre>
       */
      public static final int WANG_ZHE_VALUE = 18;
      /**
       * <code>SUMMON = 19;</code>
       *
       * <pre>
       * 国王召唤
       * </pre>
       */
      public static final int SUMMON_VALUE = 19;
      /**
       * <code>WATCH = 20;</code>
       *
       * <pre>
       * 观战
       * </pre>
       */
      public static final int WATCH_VALUE = 20;
      /**
       * <code>TRANSPORT_ARENA = 21;</code>
       *
       * <pre>
       * 竞技场
       * </pre>
       */
      public static final int TRANSPORT_ARENA_VALUE = 21;
      /**
       * <code>TRANSPORT_DOUBLE_FLY = 22;</code>
       *
       * <pre>
       * 比翼齐飞
       * </pre>
       */
      public static final int TRANSPORT_DOUBLE_FLY_VALUE = 22;
      /**
       * <code>FLY = 23;</code>
       *
       * <pre>
       * 飞行道具
       * </pre>
       */
      public static final int FLY_VALUE = 23;
      /**
       * <code>EXAM_KICK_OTHER = 24;</code>
       *
       * <pre>
       *答题踢人
       * </pre>
       */
      public static final int EXAM_KICK_OTHER_VALUE = 24;


      public final int getNumber() { return value; }

      public static TransportType valueOf(int value) {
        switch (value) {
          case 1: return GATE;
          case 2: return CHANGE_LINE;
          case 3: return CITY_RELIVE;
          case 4: return RETURN_CITY;
          case 5: return TP_GOODS;
          case 6: return NPC;
          case 7: return MAP;
          case 8: return TP_TASK;
          case 9: return ASSIST;
          case 10: return ENTER_DUNGEON;
          case 11: return LEAVE_DUNGEON;
          case 12: return OFFLINE;
          case 13: return GM_TP;
          case 17: return TEAM;
          case 18: return WANG_ZHE;
          case 19: return SUMMON;
          case 20: return WATCH;
          case 21: return TRANSPORT_ARENA;
          case 22: return TRANSPORT_DOUBLE_FLY;
          case 23: return FLY;
          case 24: return EXAM_KICK_OTHER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TransportType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<TransportType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TransportType>() {
              public TransportType findValueByNumber(int number) {
                return TransportType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return app.protobuf.server.LogContent.LogEnum.getDescriptor().getEnumTypes().get(3);
      }

      private static final TransportType[] VALUES = values();

      public static TransportType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private TransportType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:proto.LogEnum.TransportType)
    }

    /**
     * Protobuf enum {@code proto.LogEnum.ExternalLogOperationType}
     */
    public enum ExternalLogOperationType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>USER_MEDICINE_1 = 1;</code>
       *
       * <pre>
       *使用丹药1
       * </pre>
       */
      USER_MEDICINE_1(0, 1),
      /**
       * <code>USER_MEDICINE_2 = 2;</code>
       *
       * <pre>
       *使用丹药2
       * </pre>
       */
      USER_MEDICINE_2(1, 2),
      /**
       * <code>USER_MEDICINE_3 = 3;</code>
       *
       * <pre>
       *使用丹药3
       * </pre>
       */
      USER_MEDICINE_3(2, 3),
      /**
       * <code>UPLEVEL_OPERATION = 4;</code>
       *
       * <pre>
       *升级
       * </pre>
       */
      UPLEVEL_OPERATION(3, 4),
      /**
       * <code>UPSTAGE_OPERATION = 5;</code>
       *
       * <pre>
       *升阶星
       * </pre>
       */
      UPSTAGE_OPERATION(4, 5),
      /**
       * <code>ACTIVE_OPERATION = 6;</code>
       *
       * <pre>
       *激活
       * </pre>
       */
      ACTIVE_OPERATION(5, 6),
      /**
       * <code>LOAD_OPERATION = 7;</code>
       *
       * <pre>
       *穿戴
       * </pre>
       */
      LOAD_OPERATION(6, 7),
      ;

      /**
       * <code>USER_MEDICINE_1 = 1;</code>
       *
       * <pre>
       *使用丹药1
       * </pre>
       */
      public static final int USER_MEDICINE_1_VALUE = 1;
      /**
       * <code>USER_MEDICINE_2 = 2;</code>
       *
       * <pre>
       *使用丹药2
       * </pre>
       */
      public static final int USER_MEDICINE_2_VALUE = 2;
      /**
       * <code>USER_MEDICINE_3 = 3;</code>
       *
       * <pre>
       *使用丹药3
       * </pre>
       */
      public static final int USER_MEDICINE_3_VALUE = 3;
      /**
       * <code>UPLEVEL_OPERATION = 4;</code>
       *
       * <pre>
       *升级
       * </pre>
       */
      public static final int UPLEVEL_OPERATION_VALUE = 4;
      /**
       * <code>UPSTAGE_OPERATION = 5;</code>
       *
       * <pre>
       *升阶星
       * </pre>
       */
      public static final int UPSTAGE_OPERATION_VALUE = 5;
      /**
       * <code>ACTIVE_OPERATION = 6;</code>
       *
       * <pre>
       *激活
       * </pre>
       */
      public static final int ACTIVE_OPERATION_VALUE = 6;
      /**
       * <code>LOAD_OPERATION = 7;</code>
       *
       * <pre>
       *穿戴
       * </pre>
       */
      public static final int LOAD_OPERATION_VALUE = 7;


      public final int getNumber() { return value; }

      public static ExternalLogOperationType valueOf(int value) {
        switch (value) {
          case 1: return USER_MEDICINE_1;
          case 2: return USER_MEDICINE_2;
          case 3: return USER_MEDICINE_3;
          case 4: return UPLEVEL_OPERATION;
          case 5: return UPSTAGE_OPERATION;
          case 6: return ACTIVE_OPERATION;
          case 7: return LOAD_OPERATION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ExternalLogOperationType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ExternalLogOperationType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ExternalLogOperationType>() {
              public ExternalLogOperationType findValueByNumber(int number) {
                return ExternalLogOperationType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return app.protobuf.server.LogContent.LogEnum.getDescriptor().getEnumTypes().get(4);
      }

      private static final ExternalLogOperationType[] VALUES = values();

      public static ExternalLogOperationType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ExternalLogOperationType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:proto.LogEnum.ExternalLogOperationType)
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static app.protobuf.server.LogContent.LogEnum parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static app.protobuf.server.LogContent.LogEnum parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static app.protobuf.server.LogContent.LogEnum parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static app.protobuf.server.LogContent.LogEnum parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static app.protobuf.server.LogContent.LogEnum parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static app.protobuf.server.LogContent.LogEnum parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static app.protobuf.server.LogContent.LogEnum parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static app.protobuf.server.LogContent.LogEnum parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static app.protobuf.server.LogContent.LogEnum parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static app.protobuf.server.LogContent.LogEnum parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(app.protobuf.server.LogContent.LogEnum prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.LogEnum}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.LogEnum)
        app.protobuf.server.LogContent.LogEnumOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return app.protobuf.server.LogContent.internal_static_proto_LogEnum_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return app.protobuf.server.LogContent.internal_static_proto_LogEnum_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                app.protobuf.server.LogContent.LogEnum.class, app.protobuf.server.LogContent.LogEnum.Builder.class);
      }

      // Construct using app.protobuf.server.LogContent.LogEnum.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return app.protobuf.server.LogContent.internal_static_proto_LogEnum_descriptor;
      }

      public app.protobuf.server.LogContent.LogEnum getDefaultInstanceForType() {
        return app.protobuf.server.LogContent.LogEnum.getDefaultInstance();
      }

      public app.protobuf.server.LogContent.LogEnum build() {
        app.protobuf.server.LogContent.LogEnum result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public app.protobuf.server.LogContent.LogEnum buildPartial() {
        app.protobuf.server.LogContent.LogEnum result = new app.protobuf.server.LogContent.LogEnum(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof app.protobuf.server.LogContent.LogEnum) {
          return mergeFrom((app.protobuf.server.LogContent.LogEnum)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(app.protobuf.server.LogContent.LogEnum other) {
        if (other == app.protobuf.server.LogContent.LogEnum.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        app.protobuf.server.LogContent.LogEnum parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (app.protobuf.server.LogContent.LogEnum) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.LogEnum)
    }

    static {
      defaultInstance = new LogEnum(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.LogEnum)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_LogEnum_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_LogEnum_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020server/log.proto\022\005proto\"\272K\n\007LogEnum\"\344;" +
      "\n\013OperateType\022\n\n\006SYSTEM\020\001\022\006\n\002GM\020\002\022\n\n\006PLA" +
      "YER\020\003\022\r\n\tSEND_MAIL\020\004\022\020\n\014COLLECT_MAIL\020\005\022\r" +
      "\n\tGOODS_USE\020\006\022\027\n\023SCENE_GOODS_PICK_UP\020\007\022\017" +
      "\n\013USE_PACKAGE\020\010\022\020\n\014KILL_MONSTER\020\n\022\014\n\010EXP" +
      "_BUFF\020\013\022\032\n\026UNLOCK_GOODS_CONTAINER\020\014\022\024\n\020S" +
      "CENE_GOODS_DROP\020\r\022\r\n\tSHOP_SELL\020\016\022\r\n\tFLY_" +
      "GOODS\020\017\022\033\n\027PET_BLESS_GOODS_CONSUME\020\036\022\032\n\026" +
      "PET_STAT_GOODS_CONSUME\020\037\022\031\n\025PET_EXP_GOOD" +
      "S_CONSUME\020 \022\035\n\031MOUNT_BLESS_GOODS_CONSUME",
      "\020!\022\034\n\030MOUNT_STAT_GOODS_CONSUME\020\"\022\020\n\014OFFL" +
      "INE_HANG\020(\022\027\n\023OFFLINE_HANG_KILLED\020)\022\024\n\020E" +
      "XTERNAL_UPGRADE\0202\022\024\n\020DEMON_BOSS_ENTER\020<\022" +
      "\027\n\023PERSONAL_BOSS_ENTER\020=\022\023\n\017GUARD_ELF_SW" +
      "EEP\020>\022\027\n\023GUARD_ELF_BUY_COUNT\020?\022\023\n\017HOME_B" +
      "OSS_ENTER\020@\022\017\n\013BOSS_REWARD\020A\022\020\n\014RUNE_RES" +
      "OLVE\020F\022\021\n\rRUNE_EXCHANGE\020G\022\020\n\014RUNE_UPGRAD" +
      "E\020H\022\025\n\021TOWER_DAILY_PRIZE\020P\022\032\n\026TOWER_PAST" +
      "_LAYER_PRIZE\020Q\022\034\n\030MOKU_MERGER_COST_DIAMO" +
      "ND\020d\022\031\n\025MOKU_ENTER_COST_GOODS\020e\022\035\n\031MOKU_",
      "INSPIRE_COST_DIAMOND\020f\022\033\n\027MOKU_INSPIRE_C" +
      "OST_MONEY\020g\022\037\n\033MOKU_BUY_TIMES_COST_DIAMO" +
      "ND\020h\022\037\n\033CLEAR_MO_KU_CD_COST_DIAMOND\020i\022\027\n" +
      "\023MOKU_MERGER_GET_EXP\020j\022\022\n\016SPRITE_EXPIRED" +
      "\020n\022\021\n\rSPRITE_UNLOAD\020o\022\020\n\014SPRITE_RENEW\020p\022" +
      "\021\n\rEQUIP_ENHANCE\020x\022\017\n\013REPLACE_GEM\020y\022\016\n\nF" +
      "ORGE_SUIT\020z\022\017\n\013SUIT_RETURN\020{\022\022\n\016WASH_SLO" +
      "T_OPEN\020|\022\016\n\nWASH_EUQIP\020}\022\020\n\014EQUIP_REWARD" +
      "\020~\022\022\n\016ASCEND_PRODUCT\020\177\022\022\n\rASCEND_RETURN\020" +
      "\200\001\022\022\n\rEQUIP_ADVANCE\020\201\001\022\022\n\rREINI_ONE_KEY\020",
      "\202\001\022\026\n\021REIN_DUNGEON_DONE\020\203\001\022\021\n\014REIN_SUCCE" +
      "SS\020\204\001\022\032\n\025XUE_ZHEN_DUNGEON_DONE\020\214\001\022\032\n\025XUE" +
      "_ZHEN_DUNGEON_HELP\020\215\001\022\021\n\014CREATE_GUILD\020\226\001" +
      "\022\036\n\031NOTICE_GUILD_ANNOUNCEMENT\020\227\001\022\032\n\025GUIL" +
      "D_TRANS_PRESIDENT\020\230\001\022\026\n\021GUILD_DAILY_PRIZ" +
      "E\020\231\001\022\031\n\024GUILD_VIP_RED_PACKET\020\232\001\022\025\n\020GUILD" +
      "_RED_PACKET\020\233\001\022\026\n\021GUILD_DONATE_FAIL\020\234\001\022\021" +
      "\n\014GUILD_DONATE\020\235\001\022\031\n\024GUILD_EXCHANGE_GOOD" +
      "S\020\236\001\022\030\n\023GUILD_UPGRADE_SKILL\020\237\001\022\020\n\013GUILD_" +
      "LEAVE\020\240\001\022\025\n\020GUILD_KILL_BEAST\020\241\001\022\025\n\020GUILD",
      "_OPEN_BEAST\020\242\001\022\026\n\021SHOU_LIANG_DONATE\020\243\001\022\030" +
      "\n\023GUILD_TASK_COMPLETE\020\244\001\022 \n\033GUILD_TASK_O" +
      "NE_KEY_COMPLETE\020\245\001\022\"\n\035GUILD_WAR_BATTLE_A" +
      "TTEND_PRIZE\020\246\001\022\"\n\035GUILD_WAR_BATTLE_RESUL" +
      "T_PRIZE\020\247\001\022 \n\033GUILD_WAR_BATTLE_RANK_PRIZ" +
      "E\020\250\001\022!\n\034GUILD_WAR_BATTLE_GUILD_PRIZE\020\251\001\022" +
      "\033\n\026GUILD_WAR_WEEKLY_PRIZE\020\252\001\022\033\n\026GUILD_WA" +
      "R_SEASON_PRIZE\020\253\001\022\034\n\027GUILD_WAR_BATTLE_NO" +
      "TICE\020\254\001\022\033\n\026GUILD_WAR_ORDER_NOTICE\020\255\001\022\024\n\017" +
      "AUCITON_ON_SELL\020\264\001\022\025\n\020AUCTION_BUY_SELL\020\265",
      "\001\022\031\n\024AUCTION_SELL_EXPIRED\020\266\001\022\023\n\016AUCTION_" +
      "ON_BUY\020\267\001\022\025\n\020AUCTION_SELL_BUY\020\270\001\022\030\n\023AUCT" +
      "ION_BUY_EXPIRED\020\271\001\022\030\n\023AUCTION_CANCEL_SEL" +
      "L\020\272\001\022\027\n\022AUCTION_CANCEL_BUY\020\273\001\022\033\n\026AUCTION" +
      "_ON_SELL_FAILED\020\274\001\022\032\n\025AUCTION_ON_BUY_FAI" +
      "LED\020\275\001\022\021\n\014COMPOND_COST\020\276\001\022\022\n\rCOMPOND_GOO" +
      "DS\020\277\001\022\025\n\020BAO_KU_BUY_COUNT\020\310\001\022\021\n\014BAO_KU_S" +
      "WEEP\020\311\001\022\025\n\020MARRIAGE_PROPOSE\020\322\001\022\034\n\027MARRIA" +
      "GE_PROPOSE_FAILED\020\323\001\022\035\n\030MARRIAGE_PROPOSE" +
      "_EXPIRED\020\324\001\022\035\n\030MARRIAGE_PROPOSE_SUCCESS\020",
      "\325\001\022\033\n\026MARRIAGE_ORDER_WEDDING\020\326\001\022\034\n\027MARRI" +
      "AGE_INVITE_WEDDING\020\327\001\022\025\n\020MARRIAGE_DIVORC" +
      "E\020\330\001\022\036\n\031MARRIAGE_BUY_INVITE_COUNT\020\331\001\022\033\n\026" +
      "MARRIAGE_COLLECT_CANDY\020\332\001\022\035\n\030MARRIAGE_CO" +
      "LLECT_BANQUET\020\333\001\022\031\n\024MARRIAGE_WEDDING_EXP" +
      "\020\334\001\022\020\n\013SEND_FLOWER\020\335\001\022\031\n\024SEND_WEDDING_DI" +
      "AMOND\020\336\001\022\031\n\024WEDDING_RING_UPGRADE\020\337\001\022\021\n\014G" +
      "IVE_CRYSTAL\020\340\001\022\026\n\021GET_CRYSTAL_PRIZE\020\341\001\022\034" +
      "\n\027GET_CRYSTAL_DAILY_PRIZE\020\342\001\022\021\n\014ACTIVE_C" +
      "HILD\020\343\001\022\024\n\017DECOMPOSE_CHILD\020\344\001\022\022\n\rUPGRADE",
      "_CHILD\020\345\001\022\033\n\026BUY_MATE_DUNGEON_COUNT\020\346\001\022\030" +
      "\n\023FINISH_MATE_DUNGEON\020\347\001\022\020\n\013EXAM_ANSWER\020" +
      "\373\001\022\023\n\016KF_EXAM_ANSWER\020\374\001\022\030\n\023VIP_RECHARGE_" +
      "REBATE\020\204\002\022\r\n\010FREE_VIP\020\205\002\022\021\n\014BUY_VIP_CARD" +
      "\020\206\002\022\025\n\020VIP_WEEKLY_PRIZE\020\207\002\022\023\n\016VIP_ONCE_P" +
      "RIZE\020\210\002\022\022\n\rVIP_STORE_EXP\020\211\002\022\020\n\013VIP_EXPIR" +
      "ED\020\212\002\022\032\n\025GET_ACHIEVEMENT_PRIZE\020\216\002\022 \n\033GET" +
      "_ACHIEVEMENT_SOCRE_PRIZE\020\217\002\022\r\n\010SHOP_BUY\020" +
      "\230\002\022\022\n\rUPGRADE_REALM\020\242\002\022\033\n\026HONOR_BATTLE_C" +
      "HALLENGE\020\254\002\022\031\n\024HONOR_BATTLE_INSPIRE\020\255\002\022\025",
      "\n\020HONOR_BATTLE_BUY\020\256\002\022\034\n\027HONOR_BATTLE_RA" +
      "NK_PRIZE\020\257\002\022\034\n\027PEAK_COMBAT_DAILY_PRIZE\020\260" +
      "\002\022\032\n\025PEAK_COMBAT_BOX_PRIZE\020\261\002\022\037\n\032PEAK_CO" +
      "MBAT_FINISH_DUNGEON\020\262\002\022\031\n\024RED_NAME_BEEN_" +
      "KILLED\020\263\002\022\013\n\006RELIVE\020\264\002\022\032\n\025BRAVE_PEAK_PAS" +
      "S_LAYER\020\265\002\022\026\n\021THREE_BATTLE_RANK\020\266\002\022\027\n\022TH" +
      "REE_BATTLE_POINT\020\267\002\022!\n\034KF_PEAK_COMBAT_EX" +
      "PLOIT_PRIZE\020\270\002\022\036\n\031KF_PEAK_COMBAT_RANK_PR" +
      "IZE\020\271\002\022\027\n\022KF_PEAK_COMBAT_BUY\020\272\002\022\027\n\022RESOU" +
      "CE_BAKC_MONEY\020\300\002\022\031\n\024RESOUCE_BAKC_DIAMOND",
      "\020\301\002\022\027\n\022GET_LIVENESS_PRIZE\020\312\002\022\022\n\rOPEN_FUN" +
      "CTION\020\313\002\022\027\n\022TRANSFORM_ACTIVATE\020\324\002\022\025\n\020TRA" +
      "NSFORM_UPSTAR\020\325\002\022\026\n\021TRANSFORM_RESOLVE\020\327\002" +
      "\022\027\n\022GUILD_EXAM_COLLECT\020\336\002\022\025\n\020GUILD_EXAM_" +
      "PRIZE\020\337\002\022\023\n\016GUILD_EXAM_TIP\020\340\002\022\026\n\021TALENT_" +
      "WASH_POINT\020\350\002\022\026\n\021TOU_ZI_JI_HUA_BUY\020\220\003\022\031\n" +
      "\024TOU_ZI_JI_HUA_RETURN\020\221\003\022\017\n\nYUE_KA_BUY\020\222" +
      "\003\022\027\n\022YUE_KA_DAILY_PRIZE\020\223\003\022\032\n\025CHONG_JI_H" +
      "AO_LI_PRIZE\020\224\003\022\032\n\025MEI_RI_QIAN_DAO_DAILY\020" +
      "\225\003\022\030\n\023MEI_RI_QIAN_DAO_SUM\020\226\003\022\013\n\006COUPON\020\227",
      "\003\022\r\n\010GONG_GAO\020\230\003\022\031\n\024DENG_JI_XIAN_GOU_BUY" +
      "\020\231\003\022\025\n\020TIAN_SHU_XUN_ZHU\020\232\003\022\016\n\tLEI_CHONG\020" +
      "\233\003\022\017\n\nLIAN_CHONG\020\234\003\022\022\n\rQI_RI_DENG_LU\020\235\003\022" +
      "\026\n\021LING_YUAN_GOU_BUY\020\236\003\022\031\n\024LING_YUAN_GOU" +
      "_RETURN\020\237\003\022\025\n\020CHONG_BANG_PRIZE\020\240\003\022\022\n\rJIN" +
      "G_JI_PRIZE\020\241\003\022\031\n\024SHEN_MI_XIAN_GOU_BUY\020\242\003" +
      "\022\022\n\rBOSS_SHOU_SHA\020\243\003\022\024\n\017KAI_ZONG_LI_PAI\020" +
      "\244\003\022\n\n\005JI_ZI\020\245\003\022\027\n\022XIAN_MENG_ZHENG_BA\020\246\003\022" +
      "\r\n\010RECHARGE\020\247\003\022\023\n\016FIRST_RECHARGE\020\250\003\022\033\n\026D" +
      "AILY_RECHARGE_DIAMOND\020\251\003\022\031\n\024DAILY_ADD_UP",
      "_RECHAGE\020\252\003\022\022\n\rDAYS_RECHARGE\020\253\003\022\021\n\014BIND_" +
      "DIAMOND\020\254\003\022\024\n\017CLIENT_DOWNLOAD\020\255\003\022#\n\036LING" +
      "_YUAN_GOU_BIND_DIAMOND_BUY\020\256\003\022\014\n\007DENG_LU" +
      "\020\257\003\022\024\n\017GOODS_EXCHAGNGE\020\260\003\022\023\n\016ANGEL_TREAS" +
      "URE\020\261\003\022\016\n\tKUANG_HAI\020\262\003\022\017\n\nCLOUND_BUY\020\263\003\022" +
      "\030\n\023CLOUND_BUY_MUST_HIT\020\264\003\022\031\n\024DAILY_ADD_U" +
      "P_CONSUME\020\265\003\022\021\n\014DAYS_CONSUME\020\266\003\022\032\n\025TIAN_" +
      "TIAN_FAN_LI_MAIL\020\267\003\022\025\n\020TIAN_TIAN_FAN_LI\020" +
      "\270\003\022\026\n\021LUCK_SHOP_REFRESH\020\271\003\022\022\n\rLUCK_SHOP_" +
      "BUY\020\272\003\022\032\n\025BUY_YAN_HUA_QING_DIAN\020\273\003\022\024\n\017BO",
      "SS_TOU_ZI_BUY\020\274\003\022\032\n\025BOSS_TOU_ZI_GET_PRIZ" +
      "E\020\275\003\022\026\n\021CLOUD_BUY_UNLIMIT\020\276\003\022\031\n\024PERFECT_" +
      "COUPLE_PRIZE\020\277\003\022 \n\033BUY_SPRITE_GOODS_RETU" +
      "RN_EXP\020\300\003\022\032\n\025DAILY_ADD_UP_LEI_XIAO\020\301\003\022\035\n" +
      "\030DIAN_FENG_PAI_HANG_PRIZE\020\302\003\022\026\n\021TREASURE" +
      "_BOX_OPEN\020\303\003\022\026\n\021TREASURE_MAP_OPEN\020\304\003\022!\n\034" +
      "JI_FEN_CHONG_BANG_RANK_PRIZE\020\305\003\022\033\n\026JI_FE" +
      "N_CHONG_BANG_DRAW\020\306\003\022\"\n\035JI_FEN_CHONG_BAN" +
      "G_POINT_PRIZE\020\307\003\022\033\n\026XIAN_GOU_DA_LI_BAO_B" +
      "UY\020\310\003\022\032\n\025XING_YUN_LUN_PAN_ROLL\020\311\003\022\024\n\017PRO",
      "MOTION_PRIZE\020\312\003\022\022\n\rDISCOUNT_SHOP\020\313\003\022\017\n\nD" +
      "AILY_TASK\020\314\003\022\035\n\030HEGEMONY_END_FIXED_PRIZE" +
      "\020\331\004\022\034\n\027HEGEMONY_END_RANK_PRIZE\020\332\004\022 \n\033DOM" +
      "INATE_CONTINUE_WIN_PRIZE\020\333\004\022\037\n\032DOMINATE_" +
      "GUILD_DAILY_PRIZE\020\334\004\022\024\n\017MONEY_PRAY_FREE\020" +
      "\342\004\022\034\n\027MONEY_PRAY_COST_DIAMOND\020\343\004\022\032\n\025EXP_" +
      "PRAY_COST_DIAMOND\020\344\004\022 \n\033RUNE_LOTTERTY_ON" +
      "E_TIME_FREE\020\354\004\022\033\n\026RUNE_LOTTERTY_ONE_TIME" +
      "\020\355\004\022\033\n\026RUNE_LOTTERTY_TEN_TIME\020\357\004\022#\n\036RUNE" +
      "_LOTTERTY_GET_WEEKLY_PRIZE\020\360\004\022\024\n\017EQUIP_L",
      "OTTERY_1\020\366\004\022\024\n\017EQUIP_LOTTERY_2\020\367\004\022\024\n\017EQU" +
      "IP_LOTTERY_3\020\370\004\022\032\n\025HANDBOOK_ITEM_UPGRADE" +
      "\020\200\005\022!\n\034HANDBOOK_COMBINATION_UPGRADE\020\201\005\022\035" +
      "\n\030ACTIVE_TURNTABLE_LOTTERY\020\212\005\022\025\n\020JIAN_BA" +
      "O_LOTTERY\020\213\005\022\031\n\024TASK_TARGET_KILL_GET\020\317\005\022" +
      "\016\n\tTASK_DONE\020\320\005\022\026\n\021CHAPTER_TASK_DONE\020\321\005\022" +
      "\024\n\017STORY_TASK_DONE\020\322\005\022\036\n\031GET_TASK_PRIZE_" +
      "COST_GOODS\020\323\005\022\025\n\020BRANCH_TASK_DONE\020\324\005\022\027\n\022" +
      "ESCORT_TASK_ACCEPT\020\325\005\022\027\n\022ESCORT_TASK_FIN" +
      "ISH\020\326\005\022\034\n\027REWARD_ONE_KEY_COMPLETE\020\327\005\022\024\n\017",
      "REWARD_COMPLETE\020\330\005\022\026\n\021TASK_COMMIT_EQUIP\020" +
      "\331\005\022&\n!TASK_KILL_LAGER_MONSTER_GET_GOODS\020" +
      "\332\005\022\035\n\030GUARD_GUILD_KILL_MONSTER\020\357\005\022$\n\037GUA" +
      "RD_GUILD_FINISH_REMAIN_GUARD\020\360\005\022\034\n\027GUARD" +
      "_GUILD_FINISH_STAR\020\361\005\022\025\n\020UPGRADE_HERALDR" +
      "Y\020\370\005\022\026\n\021COMPOUND_HERALDRY\020\371\005\022\025\n\020RESOLVE_" +
      "HERALDRY\020\372\005\022\031\n\024DISMANTLING_HERALDRY\020\373\005\022\026" +
      "\n\021ACTIVE_PET_PLUGIN\020\202\006\022\027\n\022RESOLVE_PET_PL" +
      "UGIN\020\203\006\022\037\n\032HERALDRY_MYSTERY_BUY_TIMES\020\214\006" +
      "\022!\n\034HERALDRY_MYSTERY_SUMMON_BOSS\020\215\006\022\033\n\026H",
      "ERALDRY_MYSTERY_SWEEP\020\216\006\022\020\n\013RENAME_HERO\020" +
      "\226\006\022\021\n\014RENAME_GUILD\020\227\006\022\023\n\016ALPACA_COLLECT\020" +
      "\240\006\022\024\n\017ALPACA_TIME_EXP\020\241\006\022\034\n\027COMPOND_SOUL" +
      "_EQUIP_COST\020\252\006\022\027\n\022COMPOND_SOUL_EQUIP\020\253\006\022" +
      " \n\033ADD_SOUL_EQUIP_ENABLE_COUNT\020\254\006\022\027\n\022ENH" +
      "ANCE_SOUL_EQUIP\020\255\006\022\025\n\020ACTIVE_LIFE_GRID\020\264" +
      "\006\022\030\n\023BROTHER_BECOME_COST\020\276\006\022\037\n\032BROTHER_B" +
      "ECOME_FAIL_RETURN\020\277\006\022\027\n\022BROTHER_OTHER_EX" +
      "IT\020\300\006\022\023\n\016BROTHER_RENAME\020\301\006\022\021\n\014BROTHER_JO" +
      "IN\020\302\006\022\027\n\022BROTHER_FERTILIZER\020\303\006\022\"\n\035BROTHE",
      "R_FERTILIZER_FULL_LEVEL\020\304\006\022\030\n\023BROTHER_SK" +
      "ILL_RESET\020\305\006\022$\n\037BROTHER_SKILL_RESET_FAIL" +
      "_RETURN\020\306\006\022\023\n\016BROTHER_FROZEN\020\307\006\022\032\n\025BROTH" +
      "ER_BANQUET_ORDER\020\310\006\022&\n!BROTHER_BANQUET_O" +
      "RDER_FAIL_RETURN\020\311\006\022+\n&BORTHER_BANQUET_S" +
      "TART_MASTER_GET_RPIZE\020\312\006\022\034\n\027BORTHER_BANQ" +
      "UET_GET_EXP\020\313\006\022\"\n\035BORTHER_BANQUET_COLLEC" +
      "T_PRIZE\020\314\006\022\026\n\021BROTHER_SELF_EXIT\020\315\006\022\032\n\025BR" +
      "OTHER_KICK_OUT_VOTE\020\316\006\022\027\n\022BROTHER_BE_KIC" +
      "KOUT\020\317\006\022\034\n\027UP_QUALITY_DUNGEON_DONE\020\335\006\022\034\n",
      "\027UP_QUALITY_DUNGEON_HELP\020\336\006\022\035\n\030UP_QUALIT" +
      "Y_DUNGEON_MERGE\020\337\006\022\032\n\025XING_ZHEN_UPGRADE_" +
      "USE\020\347\006\022\027\n\022AMULET_NORMAL_LOOT\020\361\006\022\030\n\023AMULE" +
      "T_ADVANCE_LOOT\020\362\006\022\030\n\023AMULET_PHOTO_UPSTAR" +
      "\020\363\006\022\023\n\016AMULET_RESOLVE\020\364\006\022\036\n\031EVIL_TREASUR" +
      "Y_LOTTERY_ONE\020\372\006\022\036\n\031EVIL_TREASURY_LOTTER" +
      "Y_TEN\020\373\006\022!\n\034EVIL_TREASURY_ENABLE_LOTTERY" +
      "\020\374\006\022!\n\034KF_BROTHER_BATTLE_RANK_PRIZE\020\216\007\022 " +
      "\n\033KF_BROTHER_BATTLE_BUY_TIMES\020\217\007\022 \n\033KF_B" +
      "ROTHER_BATTLE_BOX_PRIZE\020\220\007\022\'\n\"KF_BROTHER",
      "_BATTLE_REPUTATION_PRIZE\020\221\007\022 \n\033KF_BROTHE" +
      "R_BATTLE_END_PRIZE\020\222\007\022\035\n\030KF_BOSS_MELEE_R" +
      "ANK_PRIZE\020\230\007\"\352\n\n\024DiamondOperationType\022!\n" +
      "\035D_MOKU_BUY_TIMES_COST_DIAMOND\020\001\022\037\n\033D_MO" +
      "KU_INSPIRE_COST_DIAMOND\020\002\022\036\n\032D_MOKU_MERG" +
      "ER_COST_DIAMOND\020\003\022!\n\035D_CLEAR_MO_KU_CD_CO" +
      "ST_DIAMOND\020\004\022\031\n\025D_GUARD_ELF_BUY_COUNT\020\005\022" +
      "\026\n\022D_BAO_KU_BUY_COUNT\020\006\022\034\n\030D_RUNE_LOTTER" +
      "TY_ONE_TIME\020\007\022\034\n\030D_RUNE_LOTTERTY_TEN_TIM" +
      "E\020\010\022\025\n\021D_EQUIP_LOTTERY_1\020\t\022\025\n\021D_EQUIP_LO",
      "TTERY_2\020\n\022\025\n\021D_EQUIP_LOTTERY_3\020\013\022\025\n\021D_HO" +
      "ME_BOSS_ENTER\020\020\022\031\n\025D_PERSONAL_BOSS_ENTER" +
      "\020\021\022\026\n\022D_MARRIAGE_PROPOSE\020\022\022\034\n\030D_BUY_MATE" +
      "_DUNGEON_COUNT\020\023\022\026\n\022D_HONOR_BATTLE_BUY\020\024" +
      "\022\032\n\026D_HONOR_BATTLE_INSPIRE\020\025\022\024\n\020D_WASH_S" +
      "LOT_OPEN\020\026\022\020\n\014D_WASH_EUQIP\020\027\022 \n\034D_HERALD" +
      "RY_MYSTERY_BUY_TIMES\020\030\022\"\n\036D_HERALDRY_MYS" +
      "TERY_SUMMON_BOSS\020\031\022\022\n\016D_BUY_VIP_CARD\020\032\022\035" +
      "\n\031D_MONEY_PRAY_COST_DIAMOND\020\033\022\033\n\027D_EXP_P" +
      "RAY_COST_DIAMOND\020\034\022\027\n\023D_TOU_ZI_JI_HUA_BU",
      "Y\020\037\022\020\n\014D_YUE_KA_BUY\020 \022\025\n\021D_BOSS_TOU_ZI_B" +
      "UY\020!\022\033\n\027D_XING_YUN_LUN_PAN_ROLL\020\"\022\027\n\023D_L" +
      "UCK_SHOP_REFRESH\020#\022\033\n\027D_BUY_YAN_HUA_QING" +
      "_DIAN\020$\022\020\n\014D_CLOUND_BUY\020%\022\036\n\032D_RESOUCE_B" +
      "AKC_EXP_DUNGEON\020(\022 \n\034D_RESOUCE_BAKC_EQUI" +
      "P_DUNGEON\020)\022$\n D_RESOUCE_BAKC_GUARD_ELF_" +
      "DUNGEON\020*\022 \n\034D_RESOUCE_BAKC_MONEY_DUNGEO" +
      "N\020+\022\036\n\032D_RESOUCE_BAKC_REWARD_TASK\020,\022\037\n\033D" +
      "_RESOUCE_BAKC_EXAM_DUNGEON\020-\022$\n D_RESOUC" +
      "E_BAKC_QING_YUN_ZHI_DIAN\020.\022%\n!D_RESOUCE_",
      "BAKC_SAN_JIE_ZHAN_CHANG\020/\022$\n D_RESOUCE_B" +
      "AKC_XIAN_MENG_WAN_YAN\0200\022#\n\037D_RESOUCE_BAK" +
      "C_TIAN_JIANG_MO_HE\0201\022\037\n\033D_RESOUCE_BAKC_H" +
      "ONOR_BATTLE\0202\022\036\n\032D_RESOUCE_BAKC_ESCORT_T" +
      "ASK\0203\022\036\n\032D_RESOUCE_BAKC_GUARD_GUILD\0204\022+\n" +
      "\'D_RESOUCE_BAKC_HERALDRY_MYSTERY_DUNGEON" +
      "\0205\022%\n!D_RESOUCE_BAKC_UP_QUALITY_DUNGEON\020" +
      "6\"e\n\010ShopType\022\017\n\013SHOP_NORMAL\020\001\022\031\n\025SHOP_D" +
      "ENG_JI_XIAN_GOU\020\002\022\031\n\025SHOP_SHEN_MI_XIAN_G" +
      "OU\020\003\022\022\n\016SHOP_LUCK_SHOP\020\004\"\277\002\n\rTransportTy",
      "pe\022\010\n\004GATE\020\001\022\017\n\013CHANGE_LINE\020\002\022\017\n\013CITY_RE" +
      "LIVE\020\003\022\017\n\013RETURN_CITY\020\004\022\014\n\010TP_GOODS\020\005\022\007\n" +
      "\003NPC\020\006\022\007\n\003MAP\020\007\022\013\n\007TP_TASK\020\010\022\n\n\006ASSIST\020\t" +
      "\022\021\n\rENTER_DUNGEON\020\n\022\021\n\rLEAVE_DUNGEON\020\013\022\013" +
      "\n\007OFFLINE\020\014\022\t\n\005GM_TP\020\r\022\010\n\004TEAM\020\021\022\014\n\010WANG" +
      "_ZHE\020\022\022\n\n\006SUMMON\020\023\022\t\n\005WATCH\020\024\022\023\n\017TRANSPO" +
      "RT_ARENA\020\025\022\030\n\024TRANSPORT_DOUBLE_FLY\020\026\022\007\n\003" +
      "FLY\020\027\022\023\n\017EXAM_KICK_OTHER\020\030\"\261\001\n\030ExternalL" +
      "ogOperationType\022\023\n\017USER_MEDICINE_1\020\001\022\023\n\017" +
      "USER_MEDICINE_2\020\002\022\023\n\017USER_MEDICINE_3\020\003\022\025",
      "\n\021UPLEVEL_OPERATION\020\004\022\025\n\021UPSTAGE_OPERATI" +
      "ON\020\005\022\024\n\020ACTIVE_OPERATION\020\006\022\022\n\016LOAD_OPERA" +
      "TION\020\007B#\n\023app.protobuf.serverB\nLogConten" +
      "tH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_proto_LogEnum_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_proto_LogEnum_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_LogEnum_descriptor,
        new java.lang.String[] { });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
