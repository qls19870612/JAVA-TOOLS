// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client/external_display.proto

package app.protobuf.client;

public final class ExternalDisplayClientContent {
  private ExternalDisplayClientContent() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code proto.ExternalDisplayType}
   */
  public enum ExternalDisplayType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DISPLAY_FEATHER = 1;</code>
     *
     * <pre>
     *翅膀
     * </pre>
     */
    DISPLAY_FEATHER(0, 1),
    /**
     * <code>DISPLAY_MAGIC = 2;</code>
     *
     * <pre>
     *法宝
     * </pre>
     */
    DISPLAY_MAGIC(1, 2),
    /**
     * <code>DISPLAY_GOD = 3;</code>
     *
     * <pre>
     *神兵
     * </pre>
     */
    DISPLAY_GOD(2, 3),
    /**
     * <code>DISPLAY_CLOAK = 4;</code>
     *
     * <pre>
     *披风
     * </pre>
     */
    DISPLAY_CLOAK(3, 4),
    ;

    /**
     * <code>DISPLAY_FEATHER = 1;</code>
     *
     * <pre>
     *翅膀
     * </pre>
     */
    public static final int DISPLAY_FEATHER_VALUE = 1;
    /**
     * <code>DISPLAY_MAGIC = 2;</code>
     *
     * <pre>
     *法宝
     * </pre>
     */
    public static final int DISPLAY_MAGIC_VALUE = 2;
    /**
     * <code>DISPLAY_GOD = 3;</code>
     *
     * <pre>
     *神兵
     * </pre>
     */
    public static final int DISPLAY_GOD_VALUE = 3;
    /**
     * <code>DISPLAY_CLOAK = 4;</code>
     *
     * <pre>
     *披风
     * </pre>
     */
    public static final int DISPLAY_CLOAK_VALUE = 4;


    public final int getNumber() { return value; }

    public static ExternalDisplayType valueOf(int value) {
      switch (value) {
        case 1: return DISPLAY_FEATHER;
        case 2: return DISPLAY_MAGIC;
        case 3: return DISPLAY_GOD;
        case 4: return DISPLAY_CLOAK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ExternalDisplayType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ExternalDisplayType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ExternalDisplayType>() {
            public ExternalDisplayType findValueByNumber(int number) {
              return ExternalDisplayType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return app.protobuf.client.ExternalDisplayClientContent.getDescriptor().getEnumTypes().get(0);
    }

    private static final ExternalDisplayType[] VALUES = values();

    public static ExternalDisplayType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ExternalDisplayType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:proto.ExternalDisplayType)
  }

  /**
   * Protobuf enum {@code proto.ExternalDisplayGoodSlot}
   */
  public enum ExternalDisplayGoodSlot
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FIRST_SLOT = 1;</code>
     *
     * <pre>
     *第一个物品插槽位
     * </pre>
     */
    FIRST_SLOT(0, 1),
    /**
     * <code>SECOND_SLOT = 2;</code>
     *
     * <pre>
     *第二个物品插槽位
     * </pre>
     */
    SECOND_SLOT(1, 2),
    /**
     * <code>THIRD_SLOT = 3;</code>
     *
     * <pre>
     *第三个物品插槽位
     * </pre>
     */
    THIRD_SLOT(2, 3),
    ;

    /**
     * <code>FIRST_SLOT = 1;</code>
     *
     * <pre>
     *第一个物品插槽位
     * </pre>
     */
    public static final int FIRST_SLOT_VALUE = 1;
    /**
     * <code>SECOND_SLOT = 2;</code>
     *
     * <pre>
     *第二个物品插槽位
     * </pre>
     */
    public static final int SECOND_SLOT_VALUE = 2;
    /**
     * <code>THIRD_SLOT = 3;</code>
     *
     * <pre>
     *第三个物品插槽位
     * </pre>
     */
    public static final int THIRD_SLOT_VALUE = 3;


    public final int getNumber() { return value; }

    public static ExternalDisplayGoodSlot valueOf(int value) {
      switch (value) {
        case 1: return FIRST_SLOT;
        case 2: return SECOND_SLOT;
        case 3: return THIRD_SLOT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ExternalDisplayGoodSlot>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ExternalDisplayGoodSlot>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ExternalDisplayGoodSlot>() {
            public ExternalDisplayGoodSlot findValueByNumber(int number) {
              return ExternalDisplayGoodSlot.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return app.protobuf.client.ExternalDisplayClientContent.getDescriptor().getEnumTypes().get(1);
    }

    private static final ExternalDisplayGoodSlot[] VALUES = values();

    public static ExternalDisplayGoodSlot valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ExternalDisplayGoodSlot(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:proto.ExternalDisplayGoodSlot)
  }

  public interface ExternalDisplayObjClientProtosOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.ExternalDisplayObjClientProtos)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
     *
     * <pre>
     **
     *功能未开放时，没有对应数据
     * </pre>
     */
    java.util.List<app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto> 
        getExternlDisplayObjList();
    /**
     * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
     *
     * <pre>
     **
     *功能未开放时，没有对应数据
     * </pre>
     */
    app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto getExternlDisplayObj(int index);
    /**
     * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
     *
     * <pre>
     **
     *功能未开放时，没有对应数据
     * </pre>
     */
    int getExternlDisplayObjCount();
    /**
     * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
     *
     * <pre>
     **
     *功能未开放时，没有对应数据
     * </pre>
     */
    java.util.List<? extends app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtoOrBuilder> 
        getExternlDisplayObjOrBuilderList();
    /**
     * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
     *
     * <pre>
     **
     *功能未开放时，没有对应数据
     * </pre>
     */
    app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtoOrBuilder getExternlDisplayObjOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code proto.ExternalDisplayObjClientProtos}
   */
  public static final class ExternalDisplayObjClientProtos extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.ExternalDisplayObjClientProtos)
      ExternalDisplayObjClientProtosOrBuilder {
    // Use ExternalDisplayObjClientProtos.newBuilder() to construct.
    private ExternalDisplayObjClientProtos(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ExternalDisplayObjClientProtos(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ExternalDisplayObjClientProtos defaultInstance;
    public static ExternalDisplayObjClientProtos getDefaultInstance() {
      return defaultInstance;
    }

    public ExternalDisplayObjClientProtos getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ExternalDisplayObjClientProtos(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                externlDisplayObj_ = new java.util.ArrayList<app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto>();
                mutable_bitField0_ |= 0x00000001;
              }
              externlDisplayObj_.add(input.readMessage(app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          externlDisplayObj_ = java.util.Collections.unmodifiableList(externlDisplayObj_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return app.protobuf.client.ExternalDisplayClientContent.internal_static_proto_ExternalDisplayObjClientProtos_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return app.protobuf.client.ExternalDisplayClientContent.internal_static_proto_ExternalDisplayObjClientProtos_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos.class, app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos.Builder.class);
    }

    public static com.google.protobuf.Parser<ExternalDisplayObjClientProtos> PARSER =
        new com.google.protobuf.AbstractParser<ExternalDisplayObjClientProtos>() {
      public ExternalDisplayObjClientProtos parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExternalDisplayObjClientProtos(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ExternalDisplayObjClientProtos> getParserForType() {
      return PARSER;
    }

    public static final int EXTERNLDISPLAYOBJ_FIELD_NUMBER = 1;
    private java.util.List<app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto> externlDisplayObj_;
    /**
     * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
     *
     * <pre>
     **
     *功能未开放时，没有对应数据
     * </pre>
     */
    public java.util.List<app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto> getExternlDisplayObjList() {
      return externlDisplayObj_;
    }
    /**
     * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
     *
     * <pre>
     **
     *功能未开放时，没有对应数据
     * </pre>
     */
    public java.util.List<? extends app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtoOrBuilder> 
        getExternlDisplayObjOrBuilderList() {
      return externlDisplayObj_;
    }
    /**
     * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
     *
     * <pre>
     **
     *功能未开放时，没有对应数据
     * </pre>
     */
    public int getExternlDisplayObjCount() {
      return externlDisplayObj_.size();
    }
    /**
     * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
     *
     * <pre>
     **
     *功能未开放时，没有对应数据
     * </pre>
     */
    public app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto getExternlDisplayObj(int index) {
      return externlDisplayObj_.get(index);
    }
    /**
     * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
     *
     * <pre>
     **
     *功能未开放时，没有对应数据
     * </pre>
     */
    public app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtoOrBuilder getExternlDisplayObjOrBuilder(
        int index) {
      return externlDisplayObj_.get(index);
    }

    private void initFields() {
      externlDisplayObj_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < externlDisplayObj_.size(); i++) {
        output.writeMessage(1, externlDisplayObj_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < externlDisplayObj_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, externlDisplayObj_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.ExternalDisplayObjClientProtos}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.ExternalDisplayObjClientProtos)
        app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtosOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return app.protobuf.client.ExternalDisplayClientContent.internal_static_proto_ExternalDisplayObjClientProtos_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return app.protobuf.client.ExternalDisplayClientContent.internal_static_proto_ExternalDisplayObjClientProtos_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos.class, app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos.Builder.class);
      }

      // Construct using app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getExternlDisplayObjFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (externlDisplayObjBuilder_ == null) {
          externlDisplayObj_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          externlDisplayObjBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return app.protobuf.client.ExternalDisplayClientContent.internal_static_proto_ExternalDisplayObjClientProtos_descriptor;
      }

      public app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos getDefaultInstanceForType() {
        return app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos.getDefaultInstance();
      }

      public app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos build() {
        app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos buildPartial() {
        app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos result = new app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos(this);
        int from_bitField0_ = bitField0_;
        if (externlDisplayObjBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            externlDisplayObj_ = java.util.Collections.unmodifiableList(externlDisplayObj_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.externlDisplayObj_ = externlDisplayObj_;
        } else {
          result.externlDisplayObj_ = externlDisplayObjBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos) {
          return mergeFrom((app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos other) {
        if (other == app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos.getDefaultInstance()) return this;
        if (externlDisplayObjBuilder_ == null) {
          if (!other.externlDisplayObj_.isEmpty()) {
            if (externlDisplayObj_.isEmpty()) {
              externlDisplayObj_ = other.externlDisplayObj_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureExternlDisplayObjIsMutable();
              externlDisplayObj_.addAll(other.externlDisplayObj_);
            }
            onChanged();
          }
        } else {
          if (!other.externlDisplayObj_.isEmpty()) {
            if (externlDisplayObjBuilder_.isEmpty()) {
              externlDisplayObjBuilder_.dispose();
              externlDisplayObjBuilder_ = null;
              externlDisplayObj_ = other.externlDisplayObj_;
              bitField0_ = (bitField0_ & ~0x00000001);
              externlDisplayObjBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getExternlDisplayObjFieldBuilder() : null;
            } else {
              externlDisplayObjBuilder_.addAllMessages(other.externlDisplayObj_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtos) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto> externlDisplayObj_ =
        java.util.Collections.emptyList();
      private void ensureExternlDisplayObjIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          externlDisplayObj_ = new java.util.ArrayList<app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto>(externlDisplayObj_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto, app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.Builder, app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtoOrBuilder> externlDisplayObjBuilder_;

      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public java.util.List<app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto> getExternlDisplayObjList() {
        if (externlDisplayObjBuilder_ == null) {
          return java.util.Collections.unmodifiableList(externlDisplayObj_);
        } else {
          return externlDisplayObjBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public int getExternlDisplayObjCount() {
        if (externlDisplayObjBuilder_ == null) {
          return externlDisplayObj_.size();
        } else {
          return externlDisplayObjBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto getExternlDisplayObj(int index) {
        if (externlDisplayObjBuilder_ == null) {
          return externlDisplayObj_.get(index);
        } else {
          return externlDisplayObjBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public Builder setExternlDisplayObj(
          int index, app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto value) {
        if (externlDisplayObjBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExternlDisplayObjIsMutable();
          externlDisplayObj_.set(index, value);
          onChanged();
        } else {
          externlDisplayObjBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public Builder setExternlDisplayObj(
          int index, app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.Builder builderForValue) {
        if (externlDisplayObjBuilder_ == null) {
          ensureExternlDisplayObjIsMutable();
          externlDisplayObj_.set(index, builderForValue.build());
          onChanged();
        } else {
          externlDisplayObjBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public Builder addExternlDisplayObj(app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto value) {
        if (externlDisplayObjBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExternlDisplayObjIsMutable();
          externlDisplayObj_.add(value);
          onChanged();
        } else {
          externlDisplayObjBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public Builder addExternlDisplayObj(
          int index, app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto value) {
        if (externlDisplayObjBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExternlDisplayObjIsMutable();
          externlDisplayObj_.add(index, value);
          onChanged();
        } else {
          externlDisplayObjBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public Builder addExternlDisplayObj(
          app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.Builder builderForValue) {
        if (externlDisplayObjBuilder_ == null) {
          ensureExternlDisplayObjIsMutable();
          externlDisplayObj_.add(builderForValue.build());
          onChanged();
        } else {
          externlDisplayObjBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public Builder addExternlDisplayObj(
          int index, app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.Builder builderForValue) {
        if (externlDisplayObjBuilder_ == null) {
          ensureExternlDisplayObjIsMutable();
          externlDisplayObj_.add(index, builderForValue.build());
          onChanged();
        } else {
          externlDisplayObjBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public Builder addAllExternlDisplayObj(
          java.lang.Iterable<? extends app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto> values) {
        if (externlDisplayObjBuilder_ == null) {
          ensureExternlDisplayObjIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, externlDisplayObj_);
          onChanged();
        } else {
          externlDisplayObjBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public Builder clearExternlDisplayObj() {
        if (externlDisplayObjBuilder_ == null) {
          externlDisplayObj_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          externlDisplayObjBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public Builder removeExternlDisplayObj(int index) {
        if (externlDisplayObjBuilder_ == null) {
          ensureExternlDisplayObjIsMutable();
          externlDisplayObj_.remove(index);
          onChanged();
        } else {
          externlDisplayObjBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.Builder getExternlDisplayObjBuilder(
          int index) {
        return getExternlDisplayObjFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtoOrBuilder getExternlDisplayObjOrBuilder(
          int index) {
        if (externlDisplayObjBuilder_ == null) {
          return externlDisplayObj_.get(index);  } else {
          return externlDisplayObjBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public java.util.List<? extends app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtoOrBuilder> 
           getExternlDisplayObjOrBuilderList() {
        if (externlDisplayObjBuilder_ != null) {
          return externlDisplayObjBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(externlDisplayObj_);
        }
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.Builder addExternlDisplayObjBuilder() {
        return getExternlDisplayObjFieldBuilder().addBuilder(
            app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.Builder addExternlDisplayObjBuilder(
          int index) {
        return getExternlDisplayObjFieldBuilder().addBuilder(
            index, app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.ExternalDisplayObjClientProto externlDisplayObj = 1;</code>
       *
       * <pre>
       **
       *功能未开放时，没有对应数据
       * </pre>
       */
      public java.util.List<app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.Builder> 
           getExternlDisplayObjBuilderList() {
        return getExternlDisplayObjFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto, app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.Builder, app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtoOrBuilder> 
          getExternlDisplayObjFieldBuilder() {
        if (externlDisplayObjBuilder_ == null) {
          externlDisplayObjBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto, app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.Builder, app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtoOrBuilder>(
                  externlDisplayObj_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          externlDisplayObj_ = null;
        }
        return externlDisplayObjBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:proto.ExternalDisplayObjClientProtos)
    }

    static {
      defaultInstance = new ExternalDisplayObjClientProtos(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.ExternalDisplayObjClientProtos)
  }

  public interface ExternalDisplayObjClientProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.ExternalDisplayObjClientProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 level = 1;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>optional int32 level = 1;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    int getLevel();

    /**
     * <code>optional int32 exp = 2;</code>
     *
     * <pre>
     * 经验
     * </pre>
     */
    boolean hasExp();
    /**
     * <code>optional int32 exp = 2;</code>
     *
     * <pre>
     * 经验
     * </pre>
     */
    int getExp();

    /**
     * <code>optional .proto.SpriteStatProto totalStat = 3;</code>
     *
     * <pre>
     * 属性值
     * </pre>
     */
    boolean hasTotalStat();
    /**
     * <code>optional .proto.SpriteStatProto totalStat = 3;</code>
     *
     * <pre>
     * 属性值
     * </pre>
     */
    app.protobuf.client.SpriteStatContent.SpriteStatProto getTotalStat();
    /**
     * <code>optional .proto.SpriteStatProto totalStat = 3;</code>
     *
     * <pre>
     * 属性值
     * </pre>
     */
    app.protobuf.client.SpriteStatContent.SpriteStatProtoOrBuilder getTotalStatOrBuilder();

    /**
     * <code>repeated int32 spells = 4;</code>
     *
     * <pre>
     * 学会的技能id
     * </pre>
     */
    java.util.List<java.lang.Integer> getSpellsList();
    /**
     * <code>repeated int32 spells = 4;</code>
     *
     * <pre>
     * 学会的技能id
     * </pre>
     */
    int getSpellsCount();
    /**
     * <code>repeated int32 spells = 4;</code>
     *
     * <pre>
     * 学会的技能id
     * </pre>
     */
    int getSpells(int index);

    /**
     * <code>optional int32 qianNengCount = 5;</code>
     *
     * <pre>
     * 第一格物品最大使用个数
     * </pre>
     */
    boolean hasQianNengCount();
    /**
     * <code>optional int32 qianNengCount = 5;</code>
     *
     * <pre>
     * 第一格物品最大使用个数
     * </pre>
     */
    int getQianNengCount();

    /**
     * <code>optional int32 feiShengCount = 6;</code>
     *
     * <pre>
     * 第二格物品最大使用个数
     * </pre>
     */
    boolean hasFeiShengCount();
    /**
     * <code>optional int32 feiShengCount = 6;</code>
     *
     * <pre>
     * 第二格物品最大使用个数
     * </pre>
     */
    int getFeiShengCount();

    /**
     * <code>optional int32 wuXingCount = 7;</code>
     *
     * <pre>
     * 第三格物品最大使用个数
     * </pre>
     */
    boolean hasWuXingCount();
    /**
     * <code>optional int32 wuXingCount = 7;</code>
     *
     * <pre>
     * 第三格物品最大使用个数
     * </pre>
     */
    int getWuXingCount();

    /**
     * <code>optional int32 resource = 8;</code>
     *
     * <pre>
     * 外显模型ID,暂时只有一个
     * </pre>
     */
    boolean hasResource();
    /**
     * <code>optional int32 resource = 8;</code>
     *
     * <pre>
     * 外显模型ID,暂时只有一个
     * </pre>
     */
    int getResource();

    /**
     * <code>optional bool isHide = 9;</code>
     *
     * <pre>
     *是否显示模型
     * </pre>
     */
    boolean hasIsHide();
    /**
     * <code>optional bool isHide = 9;</code>
     *
     * <pre>
     *是否显示模型
     * </pre>
     */
    boolean getIsHide();

    /**
     * <code>optional .proto.ExternalDisplayType type = 10;</code>
     *
     * <pre>
     *外显类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional .proto.ExternalDisplayType type = 10;</code>
     *
     * <pre>
     *外显类型
     * </pre>
     */
    app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayType getType();
  }
  /**
   * Protobuf type {@code proto.ExternalDisplayObjClientProto}
   */
  public static final class ExternalDisplayObjClientProto extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.ExternalDisplayObjClientProto)
      ExternalDisplayObjClientProtoOrBuilder {
    // Use ExternalDisplayObjClientProto.newBuilder() to construct.
    private ExternalDisplayObjClientProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ExternalDisplayObjClientProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ExternalDisplayObjClientProto defaultInstance;
    public static ExternalDisplayObjClientProto getDefaultInstance() {
      return defaultInstance;
    }

    public ExternalDisplayObjClientProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ExternalDisplayObjClientProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              level_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              exp_ = input.readInt32();
              break;
            }
            case 26: {
              app.protobuf.client.SpriteStatContent.SpriteStatProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = totalStat_.toBuilder();
              }
              totalStat_ = input.readMessage(app.protobuf.client.SpriteStatContent.SpriteStatProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(totalStat_);
                totalStat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                spells_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              spells_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                spells_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                spells_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              qianNengCount_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              feiShengCount_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              wuXingCount_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              resource_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              isHide_ = input.readBool();
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayType value = app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          spells_ = java.util.Collections.unmodifiableList(spells_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return app.protobuf.client.ExternalDisplayClientContent.internal_static_proto_ExternalDisplayObjClientProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return app.protobuf.client.ExternalDisplayClientContent.internal_static_proto_ExternalDisplayObjClientProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.class, app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.Builder.class);
    }

    public static com.google.protobuf.Parser<ExternalDisplayObjClientProto> PARSER =
        new com.google.protobuf.AbstractParser<ExternalDisplayObjClientProto>() {
      public ExternalDisplayObjClientProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExternalDisplayObjClientProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ExternalDisplayObjClientProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LEVEL_FIELD_NUMBER = 1;
    private int level_;
    /**
     * <code>optional int32 level = 1;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 level = 1;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    public static final int EXP_FIELD_NUMBER = 2;
    private int exp_;
    /**
     * <code>optional int32 exp = 2;</code>
     *
     * <pre>
     * 经验
     * </pre>
     */
    public boolean hasExp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 exp = 2;</code>
     *
     * <pre>
     * 经验
     * </pre>
     */
    public int getExp() {
      return exp_;
    }

    public static final int TOTALSTAT_FIELD_NUMBER = 3;
    private app.protobuf.client.SpriteStatContent.SpriteStatProto totalStat_;
    /**
     * <code>optional .proto.SpriteStatProto totalStat = 3;</code>
     *
     * <pre>
     * 属性值
     * </pre>
     */
    public boolean hasTotalStat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .proto.SpriteStatProto totalStat = 3;</code>
     *
     * <pre>
     * 属性值
     * </pre>
     */
    public app.protobuf.client.SpriteStatContent.SpriteStatProto getTotalStat() {
      return totalStat_;
    }
    /**
     * <code>optional .proto.SpriteStatProto totalStat = 3;</code>
     *
     * <pre>
     * 属性值
     * </pre>
     */
    public app.protobuf.client.SpriteStatContent.SpriteStatProtoOrBuilder getTotalStatOrBuilder() {
      return totalStat_;
    }

    public static final int SPELLS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> spells_;
    /**
     * <code>repeated int32 spells = 4;</code>
     *
     * <pre>
     * 学会的技能id
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSpellsList() {
      return spells_;
    }
    /**
     * <code>repeated int32 spells = 4;</code>
     *
     * <pre>
     * 学会的技能id
     * </pre>
     */
    public int getSpellsCount() {
      return spells_.size();
    }
    /**
     * <code>repeated int32 spells = 4;</code>
     *
     * <pre>
     * 学会的技能id
     * </pre>
     */
    public int getSpells(int index) {
      return spells_.get(index);
    }

    public static final int QIANNENGCOUNT_FIELD_NUMBER = 5;
    private int qianNengCount_;
    /**
     * <code>optional int32 qianNengCount = 5;</code>
     *
     * <pre>
     * 第一格物品最大使用个数
     * </pre>
     */
    public boolean hasQianNengCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 qianNengCount = 5;</code>
     *
     * <pre>
     * 第一格物品最大使用个数
     * </pre>
     */
    public int getQianNengCount() {
      return qianNengCount_;
    }

    public static final int FEISHENGCOUNT_FIELD_NUMBER = 6;
    private int feiShengCount_;
    /**
     * <code>optional int32 feiShengCount = 6;</code>
     *
     * <pre>
     * 第二格物品最大使用个数
     * </pre>
     */
    public boolean hasFeiShengCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 feiShengCount = 6;</code>
     *
     * <pre>
     * 第二格物品最大使用个数
     * </pre>
     */
    public int getFeiShengCount() {
      return feiShengCount_;
    }

    public static final int WUXINGCOUNT_FIELD_NUMBER = 7;
    private int wuXingCount_;
    /**
     * <code>optional int32 wuXingCount = 7;</code>
     *
     * <pre>
     * 第三格物品最大使用个数
     * </pre>
     */
    public boolean hasWuXingCount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 wuXingCount = 7;</code>
     *
     * <pre>
     * 第三格物品最大使用个数
     * </pre>
     */
    public int getWuXingCount() {
      return wuXingCount_;
    }

    public static final int RESOURCE_FIELD_NUMBER = 8;
    private int resource_;
    /**
     * <code>optional int32 resource = 8;</code>
     *
     * <pre>
     * 外显模型ID,暂时只有一个
     * </pre>
     */
    public boolean hasResource() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 resource = 8;</code>
     *
     * <pre>
     * 外显模型ID,暂时只有一个
     * </pre>
     */
    public int getResource() {
      return resource_;
    }

    public static final int ISHIDE_FIELD_NUMBER = 9;
    private boolean isHide_;
    /**
     * <code>optional bool isHide = 9;</code>
     *
     * <pre>
     *是否显示模型
     * </pre>
     */
    public boolean hasIsHide() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool isHide = 9;</code>
     *
     * <pre>
     *是否显示模型
     * </pre>
     */
    public boolean getIsHide() {
      return isHide_;
    }

    public static final int TYPE_FIELD_NUMBER = 10;
    private app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayType type_;
    /**
     * <code>optional .proto.ExternalDisplayType type = 10;</code>
     *
     * <pre>
     *外显类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .proto.ExternalDisplayType type = 10;</code>
     *
     * <pre>
     *外显类型
     * </pre>
     */
    public app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayType getType() {
      return type_;
    }

    private void initFields() {
      level_ = 0;
      exp_ = 0;
      totalStat_ = app.protobuf.client.SpriteStatContent.SpriteStatProto.getDefaultInstance();
      spells_ = java.util.Collections.emptyList();
      qianNengCount_ = 0;
      feiShengCount_ = 0;
      wuXingCount_ = 0;
      resource_ = 0;
      isHide_ = false;
      type_ = app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayType.DISPLAY_FEATHER;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, level_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, exp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, totalStat_);
      }
      for (int i = 0; i < spells_.size(); i++) {
        output.writeInt32(4, spells_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, qianNengCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, feiShengCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, wuXingCount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, resource_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(9, isHide_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(10, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, level_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, exp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, totalStat_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < spells_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(spells_.get(i));
        }
        size += dataSize;
        size += 1 * getSpellsList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, qianNengCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, feiShengCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, wuXingCount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, resource_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isHide_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.ExternalDisplayObjClientProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.ExternalDisplayObjClientProto)
        app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return app.protobuf.client.ExternalDisplayClientContent.internal_static_proto_ExternalDisplayObjClientProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return app.protobuf.client.ExternalDisplayClientContent.internal_static_proto_ExternalDisplayObjClientProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.class, app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.Builder.class);
      }

      // Construct using app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTotalStatFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        exp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (totalStatBuilder_ == null) {
          totalStat_ = app.protobuf.client.SpriteStatContent.SpriteStatProto.getDefaultInstance();
        } else {
          totalStatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        spells_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        qianNengCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        feiShengCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        wuXingCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        resource_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        isHide_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        type_ = app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayType.DISPLAY_FEATHER;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return app.protobuf.client.ExternalDisplayClientContent.internal_static_proto_ExternalDisplayObjClientProto_descriptor;
      }

      public app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto getDefaultInstanceForType() {
        return app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.getDefaultInstance();
      }

      public app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto build() {
        app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto buildPartial() {
        app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto result = new app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.exp_ = exp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (totalStatBuilder_ == null) {
          result.totalStat_ = totalStat_;
        } else {
          result.totalStat_ = totalStatBuilder_.build();
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          spells_ = java.util.Collections.unmodifiableList(spells_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.spells_ = spells_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.qianNengCount_ = qianNengCount_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.feiShengCount_ = feiShengCount_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.wuXingCount_ = wuXingCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.resource_ = resource_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isHide_ = isHide_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto) {
          return mergeFrom((app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto other) {
        if (other == app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto.getDefaultInstance()) return this;
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasExp()) {
          setExp(other.getExp());
        }
        if (other.hasTotalStat()) {
          mergeTotalStat(other.getTotalStat());
        }
        if (!other.spells_.isEmpty()) {
          if (spells_.isEmpty()) {
            spells_ = other.spells_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSpellsIsMutable();
            spells_.addAll(other.spells_);
          }
          onChanged();
        }
        if (other.hasQianNengCount()) {
          setQianNengCount(other.getQianNengCount());
        }
        if (other.hasFeiShengCount()) {
          setFeiShengCount(other.getFeiShengCount());
        }
        if (other.hasWuXingCount()) {
          setWuXingCount(other.getWuXingCount());
        }
        if (other.hasResource()) {
          setResource(other.getResource());
        }
        if (other.hasIsHide()) {
          setIsHide(other.getIsHide());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayObjClientProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int level_ ;
      /**
       * <code>optional int32 level = 1;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 level = 1;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>optional int32 level = 1;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000001;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 level = 1;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        level_ = 0;
        onChanged();
        return this;
      }

      private int exp_ ;
      /**
       * <code>optional int32 exp = 2;</code>
       *
       * <pre>
       * 经验
       * </pre>
       */
      public boolean hasExp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 exp = 2;</code>
       *
       * <pre>
       * 经验
       * </pre>
       */
      public int getExp() {
        return exp_;
      }
      /**
       * <code>optional int32 exp = 2;</code>
       *
       * <pre>
       * 经验
       * </pre>
       */
      public Builder setExp(int value) {
        bitField0_ |= 0x00000002;
        exp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 exp = 2;</code>
       *
       * <pre>
       * 经验
       * </pre>
       */
      public Builder clearExp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        exp_ = 0;
        onChanged();
        return this;
      }

      private app.protobuf.client.SpriteStatContent.SpriteStatProto totalStat_ = app.protobuf.client.SpriteStatContent.SpriteStatProto.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          app.protobuf.client.SpriteStatContent.SpriteStatProto, app.protobuf.client.SpriteStatContent.SpriteStatProto.Builder, app.protobuf.client.SpriteStatContent.SpriteStatProtoOrBuilder> totalStatBuilder_;
      /**
       * <code>optional .proto.SpriteStatProto totalStat = 3;</code>
       *
       * <pre>
       * 属性值
       * </pre>
       */
      public boolean hasTotalStat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .proto.SpriteStatProto totalStat = 3;</code>
       *
       * <pre>
       * 属性值
       * </pre>
       */
      public app.protobuf.client.SpriteStatContent.SpriteStatProto getTotalStat() {
        if (totalStatBuilder_ == null) {
          return totalStat_;
        } else {
          return totalStatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .proto.SpriteStatProto totalStat = 3;</code>
       *
       * <pre>
       * 属性值
       * </pre>
       */
      public Builder setTotalStat(app.protobuf.client.SpriteStatContent.SpriteStatProto value) {
        if (totalStatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          totalStat_ = value;
          onChanged();
        } else {
          totalStatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .proto.SpriteStatProto totalStat = 3;</code>
       *
       * <pre>
       * 属性值
       * </pre>
       */
      public Builder setTotalStat(
          app.protobuf.client.SpriteStatContent.SpriteStatProto.Builder builderForValue) {
        if (totalStatBuilder_ == null) {
          totalStat_ = builderForValue.build();
          onChanged();
        } else {
          totalStatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .proto.SpriteStatProto totalStat = 3;</code>
       *
       * <pre>
       * 属性值
       * </pre>
       */
      public Builder mergeTotalStat(app.protobuf.client.SpriteStatContent.SpriteStatProto value) {
        if (totalStatBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              totalStat_ != app.protobuf.client.SpriteStatContent.SpriteStatProto.getDefaultInstance()) {
            totalStat_ =
              app.protobuf.client.SpriteStatContent.SpriteStatProto.newBuilder(totalStat_).mergeFrom(value).buildPartial();
          } else {
            totalStat_ = value;
          }
          onChanged();
        } else {
          totalStatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .proto.SpriteStatProto totalStat = 3;</code>
       *
       * <pre>
       * 属性值
       * </pre>
       */
      public Builder clearTotalStat() {
        if (totalStatBuilder_ == null) {
          totalStat_ = app.protobuf.client.SpriteStatContent.SpriteStatProto.getDefaultInstance();
          onChanged();
        } else {
          totalStatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .proto.SpriteStatProto totalStat = 3;</code>
       *
       * <pre>
       * 属性值
       * </pre>
       */
      public app.protobuf.client.SpriteStatContent.SpriteStatProto.Builder getTotalStatBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTotalStatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .proto.SpriteStatProto totalStat = 3;</code>
       *
       * <pre>
       * 属性值
       * </pre>
       */
      public app.protobuf.client.SpriteStatContent.SpriteStatProtoOrBuilder getTotalStatOrBuilder() {
        if (totalStatBuilder_ != null) {
          return totalStatBuilder_.getMessageOrBuilder();
        } else {
          return totalStat_;
        }
      }
      /**
       * <code>optional .proto.SpriteStatProto totalStat = 3;</code>
       *
       * <pre>
       * 属性值
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          app.protobuf.client.SpriteStatContent.SpriteStatProto, app.protobuf.client.SpriteStatContent.SpriteStatProto.Builder, app.protobuf.client.SpriteStatContent.SpriteStatProtoOrBuilder> 
          getTotalStatFieldBuilder() {
        if (totalStatBuilder_ == null) {
          totalStatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              app.protobuf.client.SpriteStatContent.SpriteStatProto, app.protobuf.client.SpriteStatContent.SpriteStatProto.Builder, app.protobuf.client.SpriteStatContent.SpriteStatProtoOrBuilder>(
                  getTotalStat(),
                  getParentForChildren(),
                  isClean());
          totalStat_ = null;
        }
        return totalStatBuilder_;
      }

      private java.util.List<java.lang.Integer> spells_ = java.util.Collections.emptyList();
      private void ensureSpellsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          spells_ = new java.util.ArrayList<java.lang.Integer>(spells_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 spells = 4;</code>
       *
       * <pre>
       * 学会的技能id
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSpellsList() {
        return java.util.Collections.unmodifiableList(spells_);
      }
      /**
       * <code>repeated int32 spells = 4;</code>
       *
       * <pre>
       * 学会的技能id
       * </pre>
       */
      public int getSpellsCount() {
        return spells_.size();
      }
      /**
       * <code>repeated int32 spells = 4;</code>
       *
       * <pre>
       * 学会的技能id
       * </pre>
       */
      public int getSpells(int index) {
        return spells_.get(index);
      }
      /**
       * <code>repeated int32 spells = 4;</code>
       *
       * <pre>
       * 学会的技能id
       * </pre>
       */
      public Builder setSpells(
          int index, int value) {
        ensureSpellsIsMutable();
        spells_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 spells = 4;</code>
       *
       * <pre>
       * 学会的技能id
       * </pre>
       */
      public Builder addSpells(int value) {
        ensureSpellsIsMutable();
        spells_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 spells = 4;</code>
       *
       * <pre>
       * 学会的技能id
       * </pre>
       */
      public Builder addAllSpells(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSpellsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, spells_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 spells = 4;</code>
       *
       * <pre>
       * 学会的技能id
       * </pre>
       */
      public Builder clearSpells() {
        spells_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private int qianNengCount_ ;
      /**
       * <code>optional int32 qianNengCount = 5;</code>
       *
       * <pre>
       * 第一格物品最大使用个数
       * </pre>
       */
      public boolean hasQianNengCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 qianNengCount = 5;</code>
       *
       * <pre>
       * 第一格物品最大使用个数
       * </pre>
       */
      public int getQianNengCount() {
        return qianNengCount_;
      }
      /**
       * <code>optional int32 qianNengCount = 5;</code>
       *
       * <pre>
       * 第一格物品最大使用个数
       * </pre>
       */
      public Builder setQianNengCount(int value) {
        bitField0_ |= 0x00000010;
        qianNengCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 qianNengCount = 5;</code>
       *
       * <pre>
       * 第一格物品最大使用个数
       * </pre>
       */
      public Builder clearQianNengCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        qianNengCount_ = 0;
        onChanged();
        return this;
      }

      private int feiShengCount_ ;
      /**
       * <code>optional int32 feiShengCount = 6;</code>
       *
       * <pre>
       * 第二格物品最大使用个数
       * </pre>
       */
      public boolean hasFeiShengCount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 feiShengCount = 6;</code>
       *
       * <pre>
       * 第二格物品最大使用个数
       * </pre>
       */
      public int getFeiShengCount() {
        return feiShengCount_;
      }
      /**
       * <code>optional int32 feiShengCount = 6;</code>
       *
       * <pre>
       * 第二格物品最大使用个数
       * </pre>
       */
      public Builder setFeiShengCount(int value) {
        bitField0_ |= 0x00000020;
        feiShengCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 feiShengCount = 6;</code>
       *
       * <pre>
       * 第二格物品最大使用个数
       * </pre>
       */
      public Builder clearFeiShengCount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        feiShengCount_ = 0;
        onChanged();
        return this;
      }

      private int wuXingCount_ ;
      /**
       * <code>optional int32 wuXingCount = 7;</code>
       *
       * <pre>
       * 第三格物品最大使用个数
       * </pre>
       */
      public boolean hasWuXingCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 wuXingCount = 7;</code>
       *
       * <pre>
       * 第三格物品最大使用个数
       * </pre>
       */
      public int getWuXingCount() {
        return wuXingCount_;
      }
      /**
       * <code>optional int32 wuXingCount = 7;</code>
       *
       * <pre>
       * 第三格物品最大使用个数
       * </pre>
       */
      public Builder setWuXingCount(int value) {
        bitField0_ |= 0x00000040;
        wuXingCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 wuXingCount = 7;</code>
       *
       * <pre>
       * 第三格物品最大使用个数
       * </pre>
       */
      public Builder clearWuXingCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        wuXingCount_ = 0;
        onChanged();
        return this;
      }

      private int resource_ ;
      /**
       * <code>optional int32 resource = 8;</code>
       *
       * <pre>
       * 外显模型ID,暂时只有一个
       * </pre>
       */
      public boolean hasResource() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 resource = 8;</code>
       *
       * <pre>
       * 外显模型ID,暂时只有一个
       * </pre>
       */
      public int getResource() {
        return resource_;
      }
      /**
       * <code>optional int32 resource = 8;</code>
       *
       * <pre>
       * 外显模型ID,暂时只有一个
       * </pre>
       */
      public Builder setResource(int value) {
        bitField0_ |= 0x00000080;
        resource_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 resource = 8;</code>
       *
       * <pre>
       * 外显模型ID,暂时只有一个
       * </pre>
       */
      public Builder clearResource() {
        bitField0_ = (bitField0_ & ~0x00000080);
        resource_ = 0;
        onChanged();
        return this;
      }

      private boolean isHide_ ;
      /**
       * <code>optional bool isHide = 9;</code>
       *
       * <pre>
       *是否显示模型
       * </pre>
       */
      public boolean hasIsHide() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool isHide = 9;</code>
       *
       * <pre>
       *是否显示模型
       * </pre>
       */
      public boolean getIsHide() {
        return isHide_;
      }
      /**
       * <code>optional bool isHide = 9;</code>
       *
       * <pre>
       *是否显示模型
       * </pre>
       */
      public Builder setIsHide(boolean value) {
        bitField0_ |= 0x00000100;
        isHide_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isHide = 9;</code>
       *
       * <pre>
       *是否显示模型
       * </pre>
       */
      public Builder clearIsHide() {
        bitField0_ = (bitField0_ & ~0x00000100);
        isHide_ = false;
        onChanged();
        return this;
      }

      private app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayType type_ = app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayType.DISPLAY_FEATHER;
      /**
       * <code>optional .proto.ExternalDisplayType type = 10;</code>
       *
       * <pre>
       *外显类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .proto.ExternalDisplayType type = 10;</code>
       *
       * <pre>
       *外显类型
       * </pre>
       */
      public app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayType getType() {
        return type_;
      }
      /**
       * <code>optional .proto.ExternalDisplayType type = 10;</code>
       *
       * <pre>
       *外显类型
       * </pre>
       */
      public Builder setType(app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .proto.ExternalDisplayType type = 10;</code>
       *
       * <pre>
       *外显类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        type_ = app.protobuf.client.ExternalDisplayClientContent.ExternalDisplayType.DISPLAY_FEATHER;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.ExternalDisplayObjClientProto)
    }

    static {
      defaultInstance = new ExternalDisplayObjClientProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.ExternalDisplayObjClientProto)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ExternalDisplayObjClientProtos_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ExternalDisplayObjClientProtos_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ExternalDisplayObjClientProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ExternalDisplayObjClientProto_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035client/external_display.proto\022\005proto\032\027" +
      "client/spritestat.proto\"a\n\036ExternalDispl" +
      "ayObjClientProtos\022?\n\021externlDisplayObj\030\001" +
      " \003(\0132$.proto.ExternalDisplayObjClientPro" +
      "to\"\205\002\n\035ExternalDisplayObjClientProto\022\r\n\005" +
      "level\030\001 \001(\005\022\013\n\003exp\030\002 \001(\005\022)\n\ttotalStat\030\003 " +
      "\001(\0132\026.proto.SpriteStatProto\022\016\n\006spells\030\004 " +
      "\003(\005\022\025\n\rqianNengCount\030\005 \001(\005\022\025\n\rfeiShengCo" +
      "unt\030\006 \001(\005\022\023\n\013wuXingCount\030\007 \001(\005\022\020\n\010resour" +
      "ce\030\010 \001(\005\022\016\n\006isHide\030\t \001(\010\022(\n\004type\030\n \001(\0162\032",
      ".proto.ExternalDisplayType*a\n\023ExternalDi" +
      "splayType\022\023\n\017DISPLAY_FEATHER\020\001\022\021\n\rDISPLA" +
      "Y_MAGIC\020\002\022\017\n\013DISPLAY_GOD\020\003\022\021\n\rDISPLAY_CL" +
      "OAK\020\004*J\n\027ExternalDisplayGoodSlot\022\016\n\nFIRS" +
      "T_SLOT\020\001\022\017\n\013SECOND_SLOT\020\002\022\016\n\nTHIRD_SLOT\020" +
      "\003B5\n\023app.protobuf.clientB\034ExternalDispla" +
      "yClientContentH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          app.protobuf.client.SpriteStatContent.getDescriptor(),
        }, assigner);
    internal_static_proto_ExternalDisplayObjClientProtos_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_proto_ExternalDisplayObjClientProtos_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ExternalDisplayObjClientProtos_descriptor,
        new java.lang.String[] { "ExternlDisplayObj", });
    internal_static_proto_ExternalDisplayObjClientProto_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_proto_ExternalDisplayObjClientProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ExternalDisplayObjClientProto_descriptor,
        new java.lang.String[] { "Level", "Exp", "TotalStat", "Spells", "QianNengCount", "FeiShengCount", "WuXingCount", "Resource", "IsHide", "Type", });
    app.protobuf.client.SpriteStatContent.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
