// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server/hero_misc_server.proto

package app.protobuf.server;

public final class HeroMiscServerContent {
  private HeroMiscServerContent() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface HeroMiscModuleObjServerProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.HeroMiscModuleObjServerProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool has_recharged_diamond = 1;</code>
     *
     * <pre>
     * 是否充值过
     * </pre>
     */
    boolean hasHasRechargedDiamond();
    /**
     * <code>optional bool has_recharged_diamond = 1;</code>
     *
     * <pre>
     * 是否充值过
     * </pre>
     */
    boolean getHasRechargedDiamond();
  }
  /**
   * Protobuf type {@code proto.HeroMiscModuleObjServerProto}
   */
  public static final class HeroMiscModuleObjServerProto extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.HeroMiscModuleObjServerProto)
      HeroMiscModuleObjServerProtoOrBuilder {
    // Use HeroMiscModuleObjServerProto.newBuilder() to construct.
    private HeroMiscModuleObjServerProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HeroMiscModuleObjServerProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HeroMiscModuleObjServerProto defaultInstance;
    public static HeroMiscModuleObjServerProto getDefaultInstance() {
      return defaultInstance;
    }

    public HeroMiscModuleObjServerProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HeroMiscModuleObjServerProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              hasRechargedDiamond_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return app.protobuf.server.HeroMiscServerContent.internal_static_proto_HeroMiscModuleObjServerProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return app.protobuf.server.HeroMiscServerContent.internal_static_proto_HeroMiscModuleObjServerProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto.class, app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto.Builder.class);
    }

    public static com.google.protobuf.Parser<HeroMiscModuleObjServerProto> PARSER =
        new com.google.protobuf.AbstractParser<HeroMiscModuleObjServerProto>() {
      public HeroMiscModuleObjServerProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeroMiscModuleObjServerProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HeroMiscModuleObjServerProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int HAS_RECHARGED_DIAMOND_FIELD_NUMBER = 1;
    private boolean hasRechargedDiamond_;
    /**
     * <code>optional bool has_recharged_diamond = 1;</code>
     *
     * <pre>
     * 是否充值过
     * </pre>
     */
    public boolean hasHasRechargedDiamond() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool has_recharged_diamond = 1;</code>
     *
     * <pre>
     * 是否充值过
     * </pre>
     */
    public boolean getHasRechargedDiamond() {
      return hasRechargedDiamond_;
    }

    private void initFields() {
      hasRechargedDiamond_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, hasRechargedDiamond_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, hasRechargedDiamond_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.HeroMiscModuleObjServerProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.HeroMiscModuleObjServerProto)
        app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return app.protobuf.server.HeroMiscServerContent.internal_static_proto_HeroMiscModuleObjServerProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return app.protobuf.server.HeroMiscServerContent.internal_static_proto_HeroMiscModuleObjServerProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto.class, app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto.Builder.class);
      }

      // Construct using app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        hasRechargedDiamond_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return app.protobuf.server.HeroMiscServerContent.internal_static_proto_HeroMiscModuleObjServerProto_descriptor;
      }

      public app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto getDefaultInstanceForType() {
        return app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto.getDefaultInstance();
      }

      public app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto build() {
        app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto buildPartial() {
        app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto result = new app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hasRechargedDiamond_ = hasRechargedDiamond_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto) {
          return mergeFrom((app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto other) {
        if (other == app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto.getDefaultInstance()) return this;
        if (other.hasHasRechargedDiamond()) {
          setHasRechargedDiamond(other.getHasRechargedDiamond());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjServerProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean hasRechargedDiamond_ ;
      /**
       * <code>optional bool has_recharged_diamond = 1;</code>
       *
       * <pre>
       * 是否充值过
       * </pre>
       */
      public boolean hasHasRechargedDiamond() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool has_recharged_diamond = 1;</code>
       *
       * <pre>
       * 是否充值过
       * </pre>
       */
      public boolean getHasRechargedDiamond() {
        return hasRechargedDiamond_;
      }
      /**
       * <code>optional bool has_recharged_diamond = 1;</code>
       *
       * <pre>
       * 是否充值过
       * </pre>
       */
      public Builder setHasRechargedDiamond(boolean value) {
        bitField0_ |= 0x00000001;
        hasRechargedDiamond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool has_recharged_diamond = 1;</code>
       *
       * <pre>
       * 是否充值过
       * </pre>
       */
      public Builder clearHasRechargedDiamond() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hasRechargedDiamond_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.HeroMiscModuleObjServerProto)
    }

    static {
      defaultInstance = new HeroMiscModuleObjServerProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.HeroMiscModuleObjServerProto)
  }

  public interface HeroMiscModuleObjMinorProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.HeroMiscModuleObjMinorProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 diamond = 1;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    boolean hasDiamond();
    /**
     * <code>optional int64 diamond = 1;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    long getDiamond();

    /**
     * <code>optional int64 systemDiamond = 2;</code>
     *
     * <pre>
     * 系统钻石
     * </pre>
     */
    boolean hasSystemDiamond();
    /**
     * <code>optional int64 systemDiamond = 2;</code>
     *
     * <pre>
     * 系统钻石
     * </pre>
     */
    long getSystemDiamond();

    /**
     * <code>optional int64 bindDiamond = 3;</code>
     *
     * <pre>
     * 绑定钻石
     * </pre>
     */
    boolean hasBindDiamond();
    /**
     * <code>optional int64 bindDiamond = 3;</code>
     *
     * <pre>
     * 绑定钻石
     * </pre>
     */
    long getBindDiamond();

    /**
     * <code>optional int64 money = 4;</code>
     *
     * <pre>
     * 金币
     * </pre>
     */
    boolean hasMoney();
    /**
     * <code>optional int64 money = 4;</code>
     *
     * <pre>
     * 金币
     * </pre>
     */
    long getMoney();

    /**
     * <code>optional int64 rune_exp = 5;</code>
     *
     * <pre>
     * 符文经验
     * </pre>
     */
    boolean hasRuneExp();
    /**
     * <code>optional int64 rune_exp = 5;</code>
     *
     * <pre>
     * 符文经验
     * </pre>
     */
    long getRuneExp();

    /**
     * <code>optional int64 rune_slice = 6;</code>
     *
     * <pre>
     * 符文碎片
     * </pre>
     */
    boolean hasRuneSlice();
    /**
     * <code>optional int64 rune_slice = 6;</code>
     *
     * <pre>
     * 符文碎片
     * </pre>
     */
    long getRuneSlice();

    /**
     * <code>optional int64 honor = 7;</code>
     *
     * <pre>
     * 荣誉值
     * </pre>
     */
    boolean hasHonor();
    /**
     * <code>optional int64 honor = 7;</code>
     *
     * <pre>
     * 荣誉值
     * </pre>
     */
    long getHonor();

    /**
     * <code>optional int64 guild_contribution = 8;</code>
     *
     * <pre>
     * 仙盟贡献
     * </pre>
     */
    boolean hasGuildContribution();
    /**
     * <code>optional int64 guild_contribution = 8;</code>
     *
     * <pre>
     * 仙盟贡献
     * </pre>
     */
    long getGuildContribution();

    /**
     * <code>optional int64 guild_storage_point = 9;</code>
     *
     * <pre>
     * 仙盟仓库积分
     * </pre>
     */
    boolean hasGuildStoragePoint();
    /**
     * <code>optional int64 guild_storage_point = 9;</code>
     *
     * <pre>
     * 仙盟仓库积分
     * </pre>
     */
    long getGuildStoragePoint();

    /**
     * <code>optional int64 last_reset_monthly_time = 10;</code>
     *
     * <pre>
     * 最后一次清理每月状态的时间
     * </pre>
     */
    boolean hasLastResetMonthlyTime();
    /**
     * <code>optional int64 last_reset_monthly_time = 10;</code>
     *
     * <pre>
     * 最后一次清理每月状态的时间
     * </pre>
     */
    long getLastResetMonthlyTime();

    /**
     * <code>optional int64 last_reset_daily_time = 11;</code>
     *
     * <pre>
     * 最后一次清理每日状态的时间
     * </pre>
     */
    boolean hasLastResetDailyTime();
    /**
     * <code>optional int64 last_reset_daily_time = 11;</code>
     *
     * <pre>
     * 最后一次清理每日状态的时间
     * </pre>
     */
    long getLastResetDailyTime();

    /**
     * <code>optional int64 last_reset_weekly_time = 12;</code>
     *
     * <pre>
     * 最后一次清理每周状态的时间
     * </pre>
     */
    boolean hasLastResetWeeklyTime();
    /**
     * <code>optional int64 last_reset_weekly_time = 12;</code>
     *
     * <pre>
     * 最后一次清理每周状态的时间
     * </pre>
     */
    long getLastResetWeeklyTime();

    /**
     * <code>optional int64 guild_money = 13;</code>
     *
     * <pre>
     * 公会资金
     * </pre>
     */
    boolean hasGuildMoney();
    /**
     * <code>optional int64 guild_money = 13;</code>
     *
     * <pre>
     * 公会资金
     * </pre>
     */
    long getGuildMoney();

    /**
     * <code>optional int64 equip_lottery_score = 14;</code>
     *
     * <pre>
     * 装备寻宝积分
     * </pre>
     */
    boolean hasEquipLotteryScore();
    /**
     * <code>optional int64 equip_lottery_score = 14;</code>
     *
     * <pre>
     * 装备寻宝积分
     * </pre>
     */
    long getEquipLotteryScore();

    /**
     * <code>optional int64 luck_shop_score = 15;</code>
     *
     * <pre>
     * 幸运商店积分
     * </pre>
     */
    boolean hasLuckShopScore();
    /**
     * <code>optional int64 luck_shop_score = 15;</code>
     *
     * <pre>
     * 幸运商店积分
     * </pre>
     */
    long getLuckShopScore();

    /**
     * <code>optional int64 heraldry_exp = 16;</code>
     *
     * <pre>
     * 纹章经验(用来升级)
     * </pre>
     */
    boolean hasHeraldryExp();
    /**
     * <code>optional int64 heraldry_exp = 16;</code>
     *
     * <pre>
     * 纹章经验(用来升级)
     * </pre>
     */
    long getHeraldryExp();

    /**
     * <code>optional int64 heraldry_stone_one = 17;</code>
     *
     * <pre>
     * 纹章合成材料1(用来合成纹章，神魔石)
     * </pre>
     */
    boolean hasHeraldryStoneOne();
    /**
     * <code>optional int64 heraldry_stone_one = 17;</code>
     *
     * <pre>
     * 纹章合成材料1(用来合成纹章，神魔石)
     * </pre>
     */
    long getHeraldryStoneOne();

    /**
     * <code>optional int64 heraldry_stone_two = 18;</code>
     *
     * <pre>
     * 纹章合成材料2(用来合成纹章，圣魔石)
     * </pre>
     */
    boolean hasHeraldryStoneTwo();
    /**
     * <code>optional int64 heraldry_stone_two = 18;</code>
     *
     * <pre>
     * 纹章合成材料2(用来合成纹章，圣魔石)
     * </pre>
     */
    long getHeraldryStoneTwo();

    /**
     * <code>optional int64 totalRechargeDiamond = 20;</code>
     *
     * <pre>
     * 总累计充值钻石数，大于0表示充值过
     * </pre>
     */
    boolean hasTotalRechargeDiamond();
    /**
     * <code>optional int64 totalRechargeDiamond = 20;</code>
     *
     * <pre>
     * 总累计充值钻石数，大于0表示充值过
     * </pre>
     */
    long getTotalRechargeDiamond();

    /**
     * <code>optional int64 totalGMRechargeDiamond = 25;</code>
     *
     * <pre>
     * 累计gm发的钻石，大于0表示gm发过
     * </pre>
     */
    boolean hasTotalGMRechargeDiamond();
    /**
     * <code>optional int64 totalGMRechargeDiamond = 25;</code>
     *
     * <pre>
     * 累计gm发的钻石，大于0表示gm发过
     * </pre>
     */
    long getTotalGMRechargeDiamond();

    /**
     * <code>optional int64 totalConsumeDiamond = 21;</code>
     *
     * <pre>
     * 累积消费钻石
     * </pre>
     */
    boolean hasTotalConsumeDiamond();
    /**
     * <code>optional int64 totalConsumeDiamond = 21;</code>
     *
     * <pre>
     * 累积消费钻石
     * </pre>
     */
    long getTotalConsumeDiamond();

    /**
     * <code>optional int32 totalRechargeRmb = 22;</code>
     *
     * <pre>
     * 总充值rmb
     * </pre>
     */
    boolean hasTotalRechargeRmb();
    /**
     * <code>optional int32 totalRechargeRmb = 22;</code>
     *
     * <pre>
     * 总充值rmb
     * </pre>
     */
    int getTotalRechargeRmb();

    /**
     * <code>optional int64 lastAuctionPwdErrTime = 23;</code>
     *
     * <pre>
     * 上一次市场密码错误时间
     * </pre>
     */
    boolean hasLastAuctionPwdErrTime();
    /**
     * <code>optional int64 lastAuctionPwdErrTime = 23;</code>
     *
     * <pre>
     * 上一次市场密码错误时间
     * </pre>
     */
    long getLastAuctionPwdErrTime();

    /**
     * <code>optional int32 auctionPwdErrCount = 24;</code>
     *
     * <pre>
     * 市场密码连续错误次数
     * </pre>
     */
    boolean hasAuctionPwdErrCount();
    /**
     * <code>optional int32 auctionPwdErrCount = 24;</code>
     *
     * <pre>
     * 市场密码连续错误次数
     * </pre>
     */
    int getAuctionPwdErrCount();

    /**
     * <code>optional .proto.ClientConfigsProto client_configs = 28;</code>
     *
     * <pre>
     * 客户端配置
     * </pre>
     */
    boolean hasClientConfigs();
    /**
     * <code>optional .proto.ClientConfigsProto client_configs = 28;</code>
     *
     * <pre>
     * 客户端配置
     * </pre>
     */
    app.protobuf.client.HeroMiscClientContent.ClientConfigsProto getClientConfigs();
    /**
     * <code>optional .proto.ClientConfigsProto client_configs = 28;</code>
     *
     * <pre>
     * 客户端配置
     * </pre>
     */
    app.protobuf.client.HeroMiscClientContent.ClientConfigsProtoOrBuilder getClientConfigsOrBuilder();

    /**
     * <code>optional int32 login_day = 30;</code>
     *
     * <pre>
     * 登陆天数
     * </pre>
     */
    boolean hasLoginDay();
    /**
     * <code>optional int32 login_day = 30;</code>
     *
     * <pre>
     * 登陆天数
     * </pre>
     */
    int getLoginDay();

    /**
     * <code>optional int64 last_login_time = 35;</code>
     *
     * <pre>
     * 最后一次下线时间
     * </pre>
     */
    boolean hasLastLoginTime();
    /**
     * <code>optional int64 last_login_time = 35;</code>
     *
     * <pre>
     * 最后一次下线时间
     * </pre>
     */
    long getLastLoginTime();

    /**
     * <code>optional int64 last_logout_time = 36;</code>
     *
     * <pre>
     * 最后一次下线时间
     * </pre>
     */
    boolean hasLastLogoutTime();
    /**
     * <code>optional int64 last_logout_time = 36;</code>
     *
     * <pre>
     * 最后一次下线时间
     * </pre>
     */
    long getLastLogoutTime();

    /**
     * <code>optional int64 total_online_time = 37;</code>
     *
     * <pre>
     * 累计在线时间
     * </pre>
     */
    boolean hasTotalOnlineTime();
    /**
     * <code>optional int64 total_online_time = 37;</code>
     *
     * <pre>
     * 累计在线时间
     * </pre>
     */
    long getTotalOnlineTime();

    /**
     * <code>optional int64 daily_online_acc_time = 38;</code>
     *
     * <pre>
     * 今日在线累计时间
     * </pre>
     */
    boolean hasDailyOnlineAccTime();
    /**
     * <code>optional int64 daily_online_acc_time = 38;</code>
     *
     * <pre>
     * 今日在线累计时间
     * </pre>
     */
    long getDailyOnlineAccTime();

    /**
     * <code>optional int64 accumulated_online_time = 39;</code>
     *
     * <pre>
     * 防沉迷累积的在线时间
     * </pre>
     */
    boolean hasAccumulatedOnlineTime();
    /**
     * <code>optional int64 accumulated_online_time = 39;</code>
     *
     * <pre>
     * 防沉迷累积的在线时间
     * </pre>
     */
    long getAccumulatedOnlineTime();

    /**
     * <code>optional int64 accumulated_offline_time = 40;</code>
     *
     * <pre>
     * 累积离线经验时间
     * </pre>
     */
    boolean hasAccumulatedOfflineTime();
    /**
     * <code>optional int64 accumulated_offline_time = 40;</code>
     *
     * <pre>
     * 累积离线经验时间
     * </pre>
     */
    long getAccumulatedOfflineTime();

    /**
     * <code>optional int64 last_add_accumulated_offline_time = 41;</code>
     *
     * <pre>
     * 上次增加离线经验的时间, 检测bug用. 一定 &lt;= lastLogoutTime
     * </pre>
     */
    boolean hasLastAddAccumulatedOfflineTime();
    /**
     * <code>optional int64 last_add_accumulated_offline_time = 41;</code>
     *
     * <pre>
     * 上次增加离线经验的时间, 检测bug用. 一定 &lt;= lastLogoutTime
     * </pre>
     */
    long getLastAddAccumulatedOfflineTime();

    /**
     * <code>optional int32 glamour = 42;</code>
     *
     * <pre>
     * 魅力值
     * </pre>
     */
    boolean hasGlamour();
    /**
     * <code>optional int32 glamour = 42;</code>
     *
     * <pre>
     * 魅力值
     * </pre>
     */
    int getGlamour();

    /**
     * <code>optional bool hasGottenFirstRechargePrize = 43;</code>
     *
     * <pre>
     * 是否已领取首充奖励
     * </pre>
     */
    boolean hasHasGottenFirstRechargePrize();
    /**
     * <code>optional bool hasGottenFirstRechargePrize = 43;</code>
     *
     * <pre>
     * 是否已领取首充奖励
     * </pre>
     */
    boolean getHasGottenFirstRechargePrize();

    /**
     * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
     *
     * <pre>
     * 充值项对应的个数，只记录已充值项
     * </pre>
     */
    java.util.List<app.protobuf.client.UtilContent.Int32PairProto> 
        getRechargeItemCountsList();
    /**
     * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
     *
     * <pre>
     * 充值项对应的个数，只记录已充值项
     * </pre>
     */
    app.protobuf.client.UtilContent.Int32PairProto getRechargeItemCounts(int index);
    /**
     * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
     *
     * <pre>
     * 充值项对应的个数，只记录已充值项
     * </pre>
     */
    int getRechargeItemCountsCount();
    /**
     * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
     *
     * <pre>
     * 充值项对应的个数，只记录已充值项
     * </pre>
     */
    java.util.List<? extends app.protobuf.client.UtilContent.Int32PairProtoOrBuilder> 
        getRechargeItemCountsOrBuilderList();
    /**
     * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
     *
     * <pre>
     * 充值项对应的个数，只记录已充值项
     * </pre>
     */
    app.protobuf.client.UtilContent.Int32PairProtoOrBuilder getRechargeItemCountsOrBuilder(
        int index);

    /**
     * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
     *
     * <pre>
     * 已充值的每日领取钻石
     * </pre>
     */
    java.util.List<app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto> 
        getDailyDiamondItemsList();
    /**
     * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
     *
     * <pre>
     * 已充值的每日领取钻石
     * </pre>
     */
    app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto getDailyDiamondItems(int index);
    /**
     * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
     *
     * <pre>
     * 已充值的每日领取钻石
     * </pre>
     */
    int getDailyDiamondItemsCount();
    /**
     * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
     *
     * <pre>
     * 已充值的每日领取钻石
     * </pre>
     */
    java.util.List<? extends app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProtoOrBuilder> 
        getDailyDiamondItemsOrBuilderList();
    /**
     * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
     *
     * <pre>
     * 已充值的每日领取钻石
     * </pre>
     */
    app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProtoOrBuilder getDailyDiamondItemsOrBuilder(
        int index);

    /**
     * <code>optional int32 dailyRechargeDiamond = 46;</code>
     *
     * <pre>
     * 每日参与运营活动的充值额
     * </pre>
     */
    boolean hasDailyRechargeDiamond();
    /**
     * <code>optional int32 dailyRechargeDiamond = 46;</code>
     *
     * <pre>
     * 每日参与运营活动的充值额
     * </pre>
     */
    int getDailyRechargeDiamond();

    /**
     * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
     *
     * <pre>
     * 每日累充的挡位信息，只记录可领取和已领取的挡位
     * </pre>
     */
    java.util.List<app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto> 
        getDailyRechargeColletionsList();
    /**
     * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
     *
     * <pre>
     * 每日累充的挡位信息，只记录可领取和已领取的挡位
     * </pre>
     */
    app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto getDailyRechargeColletions(int index);
    /**
     * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
     *
     * <pre>
     * 每日累充的挡位信息，只记录可领取和已领取的挡位
     * </pre>
     */
    int getDailyRechargeColletionsCount();
    /**
     * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
     *
     * <pre>
     * 每日累充的挡位信息，只记录可领取和已领取的挡位
     * </pre>
     */
    java.util.List<? extends app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProtoOrBuilder> 
        getDailyRechargeColletionsOrBuilderList();
    /**
     * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
     *
     * <pre>
     * 每日累充的挡位信息，只记录可领取和已领取的挡位
     * </pre>
     */
    app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProtoOrBuilder getDailyRechargeColletionsOrBuilder(
        int index);

    /**
     * <code>optional int32 rechargeDays = 48;</code>
     *
     * <pre>
     * 可以领取的满足充值额的累计充值天数
     * </pre>
     */
    boolean hasRechargeDays();
    /**
     * <code>optional int32 rechargeDays = 48;</code>
     *
     * <pre>
     * 可以领取的满足充值额的累计充值天数
     * </pre>
     */
    int getRechargeDays();

    /**
     * <code>optional int32 rechargeDaysCollection = 49;</code>
     *
     * <pre>
     * 已领取的累计充值额对应项
     * </pre>
     */
    boolean hasRechargeDaysCollection();
    /**
     * <code>optional int32 rechargeDaysCollection = 49;</code>
     *
     * <pre>
     * 已领取的累计充值额对应项
     * </pre>
     */
    int getRechargeDaysCollection();

    /**
     * <code>optional int64 maxFightAmount = 50;</code>
     *
     * <pre>
     * 角色达到的最高战力
     * </pre>
     */
    boolean hasMaxFightAmount();
    /**
     * <code>optional int64 maxFightAmount = 50;</code>
     *
     * <pre>
     * 角色达到的最高战力
     * </pre>
     */
    long getMaxFightAmount();
  }
  /**
   * Protobuf type {@code proto.HeroMiscModuleObjMinorProto}
   */
  public static final class HeroMiscModuleObjMinorProto extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.HeroMiscModuleObjMinorProto)
      HeroMiscModuleObjMinorProtoOrBuilder {
    // Use HeroMiscModuleObjMinorProto.newBuilder() to construct.
    private HeroMiscModuleObjMinorProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HeroMiscModuleObjMinorProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HeroMiscModuleObjMinorProto defaultInstance;
    public static HeroMiscModuleObjMinorProto getDefaultInstance() {
      return defaultInstance;
    }

    public HeroMiscModuleObjMinorProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HeroMiscModuleObjMinorProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              diamond_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              systemDiamond_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              bindDiamond_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              money_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              runeExp_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              runeSlice_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              honor_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              guildContribution_ = input.readInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              guildStoragePoint_ = input.readInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              lastResetMonthlyTime_ = input.readInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              lastResetDailyTime_ = input.readInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              lastResetWeeklyTime_ = input.readInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              guildMoney_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              equipLotteryScore_ = input.readInt64();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              luckShopScore_ = input.readInt64();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              heraldryExp_ = input.readInt64();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              heraldryStoneOne_ = input.readInt64();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              heraldryStoneTwo_ = input.readInt64();
              break;
            }
            case 160: {
              bitField0_ |= 0x00040000;
              totalRechargeDiamond_ = input.readInt64();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              totalConsumeDiamond_ = input.readInt64();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              totalRechargeRmb_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              lastAuctionPwdErrTime_ = input.readInt64();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              auctionPwdErrCount_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x00080000;
              totalGMRechargeDiamond_ = input.readInt64();
              break;
            }
            case 226: {
              app.protobuf.client.HeroMiscClientContent.ClientConfigsProto.Builder subBuilder = null;
              if (((bitField0_ & 0x01000000) == 0x01000000)) {
                subBuilder = clientConfigs_.toBuilder();
              }
              clientConfigs_ = input.readMessage(app.protobuf.client.HeroMiscClientContent.ClientConfigsProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientConfigs_);
                clientConfigs_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x01000000;
              break;
            }
            case 240: {
              bitField0_ |= 0x02000000;
              loginDay_ = input.readInt32();
              break;
            }
            case 280: {
              bitField0_ |= 0x04000000;
              lastLoginTime_ = input.readInt64();
              break;
            }
            case 288: {
              bitField0_ |= 0x08000000;
              lastLogoutTime_ = input.readInt64();
              break;
            }
            case 296: {
              bitField0_ |= 0x10000000;
              totalOnlineTime_ = input.readInt64();
              break;
            }
            case 304: {
              bitField0_ |= 0x20000000;
              dailyOnlineAccTime_ = input.readInt64();
              break;
            }
            case 312: {
              bitField0_ |= 0x40000000;
              accumulatedOnlineTime_ = input.readInt64();
              break;
            }
            case 320: {
              bitField0_ |= 0x80000000;
              accumulatedOfflineTime_ = input.readInt64();
              break;
            }
            case 328: {
              bitField1_ |= 0x00000001;
              lastAddAccumulatedOfflineTime_ = input.readInt64();
              break;
            }
            case 336: {
              bitField1_ |= 0x00000002;
              glamour_ = input.readInt32();
              break;
            }
            case 344: {
              bitField1_ |= 0x00000004;
              hasGottenFirstRechargePrize_ = input.readBool();
              break;
            }
            case 354: {
              if (!((mutable_bitField1_ & 0x00000008) == 0x00000008)) {
                rechargeItemCounts_ = new java.util.ArrayList<app.protobuf.client.UtilContent.Int32PairProto>();
                mutable_bitField1_ |= 0x00000008;
              }
              rechargeItemCounts_.add(input.readMessage(app.protobuf.client.UtilContent.Int32PairProto.PARSER, extensionRegistry));
              break;
            }
            case 362: {
              if (!((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
                dailyDiamondItems_ = new java.util.ArrayList<app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto>();
                mutable_bitField1_ |= 0x00000010;
              }
              dailyDiamondItems_.add(input.readMessage(app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.PARSER, extensionRegistry));
              break;
            }
            case 368: {
              bitField1_ |= 0x00000008;
              dailyRechargeDiamond_ = input.readInt32();
              break;
            }
            case 378: {
              if (!((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
                dailyRechargeColletions_ = new java.util.ArrayList<app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto>();
                mutable_bitField1_ |= 0x00000040;
              }
              dailyRechargeColletions_.add(input.readMessage(app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto.PARSER, extensionRegistry));
              break;
            }
            case 384: {
              bitField1_ |= 0x00000010;
              rechargeDays_ = input.readInt32();
              break;
            }
            case 392: {
              bitField1_ |= 0x00000020;
              rechargeDaysCollection_ = input.readInt32();
              break;
            }
            case 400: {
              bitField1_ |= 0x00000040;
              maxFightAmount_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField1_ & 0x00000008) == 0x00000008)) {
          rechargeItemCounts_ = java.util.Collections.unmodifiableList(rechargeItemCounts_);
        }
        if (((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
          dailyDiamondItems_ = java.util.Collections.unmodifiableList(dailyDiamondItems_);
        }
        if (((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
          dailyRechargeColletions_ = java.util.Collections.unmodifiableList(dailyRechargeColletions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return app.protobuf.server.HeroMiscServerContent.internal_static_proto_HeroMiscModuleObjMinorProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return app.protobuf.server.HeroMiscServerContent.internal_static_proto_HeroMiscModuleObjMinorProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto.class, app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto.Builder.class);
    }

    public static com.google.protobuf.Parser<HeroMiscModuleObjMinorProto> PARSER =
        new com.google.protobuf.AbstractParser<HeroMiscModuleObjMinorProto>() {
      public HeroMiscModuleObjMinorProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeroMiscModuleObjMinorProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HeroMiscModuleObjMinorProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    public static final int DIAMOND_FIELD_NUMBER = 1;
    private long diamond_;
    /**
     * <code>optional int64 diamond = 1;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    public boolean hasDiamond() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 diamond = 1;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    public long getDiamond() {
      return diamond_;
    }

    public static final int SYSTEMDIAMOND_FIELD_NUMBER = 2;
    private long systemDiamond_;
    /**
     * <code>optional int64 systemDiamond = 2;</code>
     *
     * <pre>
     * 系统钻石
     * </pre>
     */
    public boolean hasSystemDiamond() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 systemDiamond = 2;</code>
     *
     * <pre>
     * 系统钻石
     * </pre>
     */
    public long getSystemDiamond() {
      return systemDiamond_;
    }

    public static final int BINDDIAMOND_FIELD_NUMBER = 3;
    private long bindDiamond_;
    /**
     * <code>optional int64 bindDiamond = 3;</code>
     *
     * <pre>
     * 绑定钻石
     * </pre>
     */
    public boolean hasBindDiamond() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 bindDiamond = 3;</code>
     *
     * <pre>
     * 绑定钻石
     * </pre>
     */
    public long getBindDiamond() {
      return bindDiamond_;
    }

    public static final int MONEY_FIELD_NUMBER = 4;
    private long money_;
    /**
     * <code>optional int64 money = 4;</code>
     *
     * <pre>
     * 金币
     * </pre>
     */
    public boolean hasMoney() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 money = 4;</code>
     *
     * <pre>
     * 金币
     * </pre>
     */
    public long getMoney() {
      return money_;
    }

    public static final int RUNE_EXP_FIELD_NUMBER = 5;
    private long runeExp_;
    /**
     * <code>optional int64 rune_exp = 5;</code>
     *
     * <pre>
     * 符文经验
     * </pre>
     */
    public boolean hasRuneExp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 rune_exp = 5;</code>
     *
     * <pre>
     * 符文经验
     * </pre>
     */
    public long getRuneExp() {
      return runeExp_;
    }

    public static final int RUNE_SLICE_FIELD_NUMBER = 6;
    private long runeSlice_;
    /**
     * <code>optional int64 rune_slice = 6;</code>
     *
     * <pre>
     * 符文碎片
     * </pre>
     */
    public boolean hasRuneSlice() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 rune_slice = 6;</code>
     *
     * <pre>
     * 符文碎片
     * </pre>
     */
    public long getRuneSlice() {
      return runeSlice_;
    }

    public static final int HONOR_FIELD_NUMBER = 7;
    private long honor_;
    /**
     * <code>optional int64 honor = 7;</code>
     *
     * <pre>
     * 荣誉值
     * </pre>
     */
    public boolean hasHonor() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 honor = 7;</code>
     *
     * <pre>
     * 荣誉值
     * </pre>
     */
    public long getHonor() {
      return honor_;
    }

    public static final int GUILD_CONTRIBUTION_FIELD_NUMBER = 8;
    private long guildContribution_;
    /**
     * <code>optional int64 guild_contribution = 8;</code>
     *
     * <pre>
     * 仙盟贡献
     * </pre>
     */
    public boolean hasGuildContribution() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 guild_contribution = 8;</code>
     *
     * <pre>
     * 仙盟贡献
     * </pre>
     */
    public long getGuildContribution() {
      return guildContribution_;
    }

    public static final int GUILD_STORAGE_POINT_FIELD_NUMBER = 9;
    private long guildStoragePoint_;
    /**
     * <code>optional int64 guild_storage_point = 9;</code>
     *
     * <pre>
     * 仙盟仓库积分
     * </pre>
     */
    public boolean hasGuildStoragePoint() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 guild_storage_point = 9;</code>
     *
     * <pre>
     * 仙盟仓库积分
     * </pre>
     */
    public long getGuildStoragePoint() {
      return guildStoragePoint_;
    }

    public static final int LAST_RESET_MONTHLY_TIME_FIELD_NUMBER = 10;
    private long lastResetMonthlyTime_;
    /**
     * <code>optional int64 last_reset_monthly_time = 10;</code>
     *
     * <pre>
     * 最后一次清理每月状态的时间
     * </pre>
     */
    public boolean hasLastResetMonthlyTime() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 last_reset_monthly_time = 10;</code>
     *
     * <pre>
     * 最后一次清理每月状态的时间
     * </pre>
     */
    public long getLastResetMonthlyTime() {
      return lastResetMonthlyTime_;
    }

    public static final int LAST_RESET_DAILY_TIME_FIELD_NUMBER = 11;
    private long lastResetDailyTime_;
    /**
     * <code>optional int64 last_reset_daily_time = 11;</code>
     *
     * <pre>
     * 最后一次清理每日状态的时间
     * </pre>
     */
    public boolean hasLastResetDailyTime() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 last_reset_daily_time = 11;</code>
     *
     * <pre>
     * 最后一次清理每日状态的时间
     * </pre>
     */
    public long getLastResetDailyTime() {
      return lastResetDailyTime_;
    }

    public static final int LAST_RESET_WEEKLY_TIME_FIELD_NUMBER = 12;
    private long lastResetWeeklyTime_;
    /**
     * <code>optional int64 last_reset_weekly_time = 12;</code>
     *
     * <pre>
     * 最后一次清理每周状态的时间
     * </pre>
     */
    public boolean hasLastResetWeeklyTime() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 last_reset_weekly_time = 12;</code>
     *
     * <pre>
     * 最后一次清理每周状态的时间
     * </pre>
     */
    public long getLastResetWeeklyTime() {
      return lastResetWeeklyTime_;
    }

    public static final int GUILD_MONEY_FIELD_NUMBER = 13;
    private long guildMoney_;
    /**
     * <code>optional int64 guild_money = 13;</code>
     *
     * <pre>
     * 公会资金
     * </pre>
     */
    public boolean hasGuildMoney() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 guild_money = 13;</code>
     *
     * <pre>
     * 公会资金
     * </pre>
     */
    public long getGuildMoney() {
      return guildMoney_;
    }

    public static final int EQUIP_LOTTERY_SCORE_FIELD_NUMBER = 14;
    private long equipLotteryScore_;
    /**
     * <code>optional int64 equip_lottery_score = 14;</code>
     *
     * <pre>
     * 装备寻宝积分
     * </pre>
     */
    public boolean hasEquipLotteryScore() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 equip_lottery_score = 14;</code>
     *
     * <pre>
     * 装备寻宝积分
     * </pre>
     */
    public long getEquipLotteryScore() {
      return equipLotteryScore_;
    }

    public static final int LUCK_SHOP_SCORE_FIELD_NUMBER = 15;
    private long luckShopScore_;
    /**
     * <code>optional int64 luck_shop_score = 15;</code>
     *
     * <pre>
     * 幸运商店积分
     * </pre>
     */
    public boolean hasLuckShopScore() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 luck_shop_score = 15;</code>
     *
     * <pre>
     * 幸运商店积分
     * </pre>
     */
    public long getLuckShopScore() {
      return luckShopScore_;
    }

    public static final int HERALDRY_EXP_FIELD_NUMBER = 16;
    private long heraldryExp_;
    /**
     * <code>optional int64 heraldry_exp = 16;</code>
     *
     * <pre>
     * 纹章经验(用来升级)
     * </pre>
     */
    public boolean hasHeraldryExp() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 heraldry_exp = 16;</code>
     *
     * <pre>
     * 纹章经验(用来升级)
     * </pre>
     */
    public long getHeraldryExp() {
      return heraldryExp_;
    }

    public static final int HERALDRY_STONE_ONE_FIELD_NUMBER = 17;
    private long heraldryStoneOne_;
    /**
     * <code>optional int64 heraldry_stone_one = 17;</code>
     *
     * <pre>
     * 纹章合成材料1(用来合成纹章，神魔石)
     * </pre>
     */
    public boolean hasHeraldryStoneOne() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 heraldry_stone_one = 17;</code>
     *
     * <pre>
     * 纹章合成材料1(用来合成纹章，神魔石)
     * </pre>
     */
    public long getHeraldryStoneOne() {
      return heraldryStoneOne_;
    }

    public static final int HERALDRY_STONE_TWO_FIELD_NUMBER = 18;
    private long heraldryStoneTwo_;
    /**
     * <code>optional int64 heraldry_stone_two = 18;</code>
     *
     * <pre>
     * 纹章合成材料2(用来合成纹章，圣魔石)
     * </pre>
     */
    public boolean hasHeraldryStoneTwo() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 heraldry_stone_two = 18;</code>
     *
     * <pre>
     * 纹章合成材料2(用来合成纹章，圣魔石)
     * </pre>
     */
    public long getHeraldryStoneTwo() {
      return heraldryStoneTwo_;
    }

    public static final int TOTALRECHARGEDIAMOND_FIELD_NUMBER = 20;
    private long totalRechargeDiamond_;
    /**
     * <code>optional int64 totalRechargeDiamond = 20;</code>
     *
     * <pre>
     * 总累计充值钻石数，大于0表示充值过
     * </pre>
     */
    public boolean hasTotalRechargeDiamond() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 totalRechargeDiamond = 20;</code>
     *
     * <pre>
     * 总累计充值钻石数，大于0表示充值过
     * </pre>
     */
    public long getTotalRechargeDiamond() {
      return totalRechargeDiamond_;
    }

    public static final int TOTALGMRECHARGEDIAMOND_FIELD_NUMBER = 25;
    private long totalGMRechargeDiamond_;
    /**
     * <code>optional int64 totalGMRechargeDiamond = 25;</code>
     *
     * <pre>
     * 累计gm发的钻石，大于0表示gm发过
     * </pre>
     */
    public boolean hasTotalGMRechargeDiamond() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 totalGMRechargeDiamond = 25;</code>
     *
     * <pre>
     * 累计gm发的钻石，大于0表示gm发过
     * </pre>
     */
    public long getTotalGMRechargeDiamond() {
      return totalGMRechargeDiamond_;
    }

    public static final int TOTALCONSUMEDIAMOND_FIELD_NUMBER = 21;
    private long totalConsumeDiamond_;
    /**
     * <code>optional int64 totalConsumeDiamond = 21;</code>
     *
     * <pre>
     * 累积消费钻石
     * </pre>
     */
    public boolean hasTotalConsumeDiamond() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int64 totalConsumeDiamond = 21;</code>
     *
     * <pre>
     * 累积消费钻石
     * </pre>
     */
    public long getTotalConsumeDiamond() {
      return totalConsumeDiamond_;
    }

    public static final int TOTALRECHARGERMB_FIELD_NUMBER = 22;
    private int totalRechargeRmb_;
    /**
     * <code>optional int32 totalRechargeRmb = 22;</code>
     *
     * <pre>
     * 总充值rmb
     * </pre>
     */
    public boolean hasTotalRechargeRmb() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 totalRechargeRmb = 22;</code>
     *
     * <pre>
     * 总充值rmb
     * </pre>
     */
    public int getTotalRechargeRmb() {
      return totalRechargeRmb_;
    }

    public static final int LASTAUCTIONPWDERRTIME_FIELD_NUMBER = 23;
    private long lastAuctionPwdErrTime_;
    /**
     * <code>optional int64 lastAuctionPwdErrTime = 23;</code>
     *
     * <pre>
     * 上一次市场密码错误时间
     * </pre>
     */
    public boolean hasLastAuctionPwdErrTime() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int64 lastAuctionPwdErrTime = 23;</code>
     *
     * <pre>
     * 上一次市场密码错误时间
     * </pre>
     */
    public long getLastAuctionPwdErrTime() {
      return lastAuctionPwdErrTime_;
    }

    public static final int AUCTIONPWDERRCOUNT_FIELD_NUMBER = 24;
    private int auctionPwdErrCount_;
    /**
     * <code>optional int32 auctionPwdErrCount = 24;</code>
     *
     * <pre>
     * 市场密码连续错误次数
     * </pre>
     */
    public boolean hasAuctionPwdErrCount() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 auctionPwdErrCount = 24;</code>
     *
     * <pre>
     * 市场密码连续错误次数
     * </pre>
     */
    public int getAuctionPwdErrCount() {
      return auctionPwdErrCount_;
    }

    public static final int CLIENT_CONFIGS_FIELD_NUMBER = 28;
    private app.protobuf.client.HeroMiscClientContent.ClientConfigsProto clientConfigs_;
    /**
     * <code>optional .proto.ClientConfigsProto client_configs = 28;</code>
     *
     * <pre>
     * 客户端配置
     * </pre>
     */
    public boolean hasClientConfigs() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional .proto.ClientConfigsProto client_configs = 28;</code>
     *
     * <pre>
     * 客户端配置
     * </pre>
     */
    public app.protobuf.client.HeroMiscClientContent.ClientConfigsProto getClientConfigs() {
      return clientConfigs_;
    }
    /**
     * <code>optional .proto.ClientConfigsProto client_configs = 28;</code>
     *
     * <pre>
     * 客户端配置
     * </pre>
     */
    public app.protobuf.client.HeroMiscClientContent.ClientConfigsProtoOrBuilder getClientConfigsOrBuilder() {
      return clientConfigs_;
    }

    public static final int LOGIN_DAY_FIELD_NUMBER = 30;
    private int loginDay_;
    /**
     * <code>optional int32 login_day = 30;</code>
     *
     * <pre>
     * 登陆天数
     * </pre>
     */
    public boolean hasLoginDay() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 login_day = 30;</code>
     *
     * <pre>
     * 登陆天数
     * </pre>
     */
    public int getLoginDay() {
      return loginDay_;
    }

    public static final int LAST_LOGIN_TIME_FIELD_NUMBER = 35;
    private long lastLoginTime_;
    /**
     * <code>optional int64 last_login_time = 35;</code>
     *
     * <pre>
     * 最后一次下线时间
     * </pre>
     */
    public boolean hasLastLoginTime() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int64 last_login_time = 35;</code>
     *
     * <pre>
     * 最后一次下线时间
     * </pre>
     */
    public long getLastLoginTime() {
      return lastLoginTime_;
    }

    public static final int LAST_LOGOUT_TIME_FIELD_NUMBER = 36;
    private long lastLogoutTime_;
    /**
     * <code>optional int64 last_logout_time = 36;</code>
     *
     * <pre>
     * 最后一次下线时间
     * </pre>
     */
    public boolean hasLastLogoutTime() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int64 last_logout_time = 36;</code>
     *
     * <pre>
     * 最后一次下线时间
     * </pre>
     */
    public long getLastLogoutTime() {
      return lastLogoutTime_;
    }

    public static final int TOTAL_ONLINE_TIME_FIELD_NUMBER = 37;
    private long totalOnlineTime_;
    /**
     * <code>optional int64 total_online_time = 37;</code>
     *
     * <pre>
     * 累计在线时间
     * </pre>
     */
    public boolean hasTotalOnlineTime() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int64 total_online_time = 37;</code>
     *
     * <pre>
     * 累计在线时间
     * </pre>
     */
    public long getTotalOnlineTime() {
      return totalOnlineTime_;
    }

    public static final int DAILY_ONLINE_ACC_TIME_FIELD_NUMBER = 38;
    private long dailyOnlineAccTime_;
    /**
     * <code>optional int64 daily_online_acc_time = 38;</code>
     *
     * <pre>
     * 今日在线累计时间
     * </pre>
     */
    public boolean hasDailyOnlineAccTime() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int64 daily_online_acc_time = 38;</code>
     *
     * <pre>
     * 今日在线累计时间
     * </pre>
     */
    public long getDailyOnlineAccTime() {
      return dailyOnlineAccTime_;
    }

    public static final int ACCUMULATED_ONLINE_TIME_FIELD_NUMBER = 39;
    private long accumulatedOnlineTime_;
    /**
     * <code>optional int64 accumulated_online_time = 39;</code>
     *
     * <pre>
     * 防沉迷累积的在线时间
     * </pre>
     */
    public boolean hasAccumulatedOnlineTime() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int64 accumulated_online_time = 39;</code>
     *
     * <pre>
     * 防沉迷累积的在线时间
     * </pre>
     */
    public long getAccumulatedOnlineTime() {
      return accumulatedOnlineTime_;
    }

    public static final int ACCUMULATED_OFFLINE_TIME_FIELD_NUMBER = 40;
    private long accumulatedOfflineTime_;
    /**
     * <code>optional int64 accumulated_offline_time = 40;</code>
     *
     * <pre>
     * 累积离线经验时间
     * </pre>
     */
    public boolean hasAccumulatedOfflineTime() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int64 accumulated_offline_time = 40;</code>
     *
     * <pre>
     * 累积离线经验时间
     * </pre>
     */
    public long getAccumulatedOfflineTime() {
      return accumulatedOfflineTime_;
    }

    public static final int LAST_ADD_ACCUMULATED_OFFLINE_TIME_FIELD_NUMBER = 41;
    private long lastAddAccumulatedOfflineTime_;
    /**
     * <code>optional int64 last_add_accumulated_offline_time = 41;</code>
     *
     * <pre>
     * 上次增加离线经验的时间, 检测bug用. 一定 &lt;= lastLogoutTime
     * </pre>
     */
    public boolean hasLastAddAccumulatedOfflineTime() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 last_add_accumulated_offline_time = 41;</code>
     *
     * <pre>
     * 上次增加离线经验的时间, 检测bug用. 一定 &lt;= lastLogoutTime
     * </pre>
     */
    public long getLastAddAccumulatedOfflineTime() {
      return lastAddAccumulatedOfflineTime_;
    }

    public static final int GLAMOUR_FIELD_NUMBER = 42;
    private int glamour_;
    /**
     * <code>optional int32 glamour = 42;</code>
     *
     * <pre>
     * 魅力值
     * </pre>
     */
    public boolean hasGlamour() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 glamour = 42;</code>
     *
     * <pre>
     * 魅力值
     * </pre>
     */
    public int getGlamour() {
      return glamour_;
    }

    public static final int HASGOTTENFIRSTRECHARGEPRIZE_FIELD_NUMBER = 43;
    private boolean hasGottenFirstRechargePrize_;
    /**
     * <code>optional bool hasGottenFirstRechargePrize = 43;</code>
     *
     * <pre>
     * 是否已领取首充奖励
     * </pre>
     */
    public boolean hasHasGottenFirstRechargePrize() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool hasGottenFirstRechargePrize = 43;</code>
     *
     * <pre>
     * 是否已领取首充奖励
     * </pre>
     */
    public boolean getHasGottenFirstRechargePrize() {
      return hasGottenFirstRechargePrize_;
    }

    public static final int RECHARGEITEMCOUNTS_FIELD_NUMBER = 44;
    private java.util.List<app.protobuf.client.UtilContent.Int32PairProto> rechargeItemCounts_;
    /**
     * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
     *
     * <pre>
     * 充值项对应的个数，只记录已充值项
     * </pre>
     */
    public java.util.List<app.protobuf.client.UtilContent.Int32PairProto> getRechargeItemCountsList() {
      return rechargeItemCounts_;
    }
    /**
     * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
     *
     * <pre>
     * 充值项对应的个数，只记录已充值项
     * </pre>
     */
    public java.util.List<? extends app.protobuf.client.UtilContent.Int32PairProtoOrBuilder> 
        getRechargeItemCountsOrBuilderList() {
      return rechargeItemCounts_;
    }
    /**
     * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
     *
     * <pre>
     * 充值项对应的个数，只记录已充值项
     * </pre>
     */
    public int getRechargeItemCountsCount() {
      return rechargeItemCounts_.size();
    }
    /**
     * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
     *
     * <pre>
     * 充值项对应的个数，只记录已充值项
     * </pre>
     */
    public app.protobuf.client.UtilContent.Int32PairProto getRechargeItemCounts(int index) {
      return rechargeItemCounts_.get(index);
    }
    /**
     * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
     *
     * <pre>
     * 充值项对应的个数，只记录已充值项
     * </pre>
     */
    public app.protobuf.client.UtilContent.Int32PairProtoOrBuilder getRechargeItemCountsOrBuilder(
        int index) {
      return rechargeItemCounts_.get(index);
    }

    public static final int DAILYDIAMONDITEMS_FIELD_NUMBER = 45;
    private java.util.List<app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto> dailyDiamondItems_;
    /**
     * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
     *
     * <pre>
     * 已充值的每日领取钻石
     * </pre>
     */
    public java.util.List<app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto> getDailyDiamondItemsList() {
      return dailyDiamondItems_;
    }
    /**
     * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
     *
     * <pre>
     * 已充值的每日领取钻石
     * </pre>
     */
    public java.util.List<? extends app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProtoOrBuilder> 
        getDailyDiamondItemsOrBuilderList() {
      return dailyDiamondItems_;
    }
    /**
     * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
     *
     * <pre>
     * 已充值的每日领取钻石
     * </pre>
     */
    public int getDailyDiamondItemsCount() {
      return dailyDiamondItems_.size();
    }
    /**
     * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
     *
     * <pre>
     * 已充值的每日领取钻石
     * </pre>
     */
    public app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto getDailyDiamondItems(int index) {
      return dailyDiamondItems_.get(index);
    }
    /**
     * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
     *
     * <pre>
     * 已充值的每日领取钻石
     * </pre>
     */
    public app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProtoOrBuilder getDailyDiamondItemsOrBuilder(
        int index) {
      return dailyDiamondItems_.get(index);
    }

    public static final int DAILYRECHARGEDIAMOND_FIELD_NUMBER = 46;
    private int dailyRechargeDiamond_;
    /**
     * <code>optional int32 dailyRechargeDiamond = 46;</code>
     *
     * <pre>
     * 每日参与运营活动的充值额
     * </pre>
     */
    public boolean hasDailyRechargeDiamond() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 dailyRechargeDiamond = 46;</code>
     *
     * <pre>
     * 每日参与运营活动的充值额
     * </pre>
     */
    public int getDailyRechargeDiamond() {
      return dailyRechargeDiamond_;
    }

    public static final int DAILYRECHARGECOLLETIONS_FIELD_NUMBER = 47;
    private java.util.List<app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto> dailyRechargeColletions_;
    /**
     * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
     *
     * <pre>
     * 每日累充的挡位信息，只记录可领取和已领取的挡位
     * </pre>
     */
    public java.util.List<app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto> getDailyRechargeColletionsList() {
      return dailyRechargeColletions_;
    }
    /**
     * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
     *
     * <pre>
     * 每日累充的挡位信息，只记录可领取和已领取的挡位
     * </pre>
     */
    public java.util.List<? extends app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProtoOrBuilder> 
        getDailyRechargeColletionsOrBuilderList() {
      return dailyRechargeColletions_;
    }
    /**
     * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
     *
     * <pre>
     * 每日累充的挡位信息，只记录可领取和已领取的挡位
     * </pre>
     */
    public int getDailyRechargeColletionsCount() {
      return dailyRechargeColletions_.size();
    }
    /**
     * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
     *
     * <pre>
     * 每日累充的挡位信息，只记录可领取和已领取的挡位
     * </pre>
     */
    public app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto getDailyRechargeColletions(int index) {
      return dailyRechargeColletions_.get(index);
    }
    /**
     * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
     *
     * <pre>
     * 每日累充的挡位信息，只记录可领取和已领取的挡位
     * </pre>
     */
    public app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProtoOrBuilder getDailyRechargeColletionsOrBuilder(
        int index) {
      return dailyRechargeColletions_.get(index);
    }

    public static final int RECHARGEDAYS_FIELD_NUMBER = 48;
    private int rechargeDays_;
    /**
     * <code>optional int32 rechargeDays = 48;</code>
     *
     * <pre>
     * 可以领取的满足充值额的累计充值天数
     * </pre>
     */
    public boolean hasRechargeDays() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 rechargeDays = 48;</code>
     *
     * <pre>
     * 可以领取的满足充值额的累计充值天数
     * </pre>
     */
    public int getRechargeDays() {
      return rechargeDays_;
    }

    public static final int RECHARGEDAYSCOLLECTION_FIELD_NUMBER = 49;
    private int rechargeDaysCollection_;
    /**
     * <code>optional int32 rechargeDaysCollection = 49;</code>
     *
     * <pre>
     * 已领取的累计充值额对应项
     * </pre>
     */
    public boolean hasRechargeDaysCollection() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 rechargeDaysCollection = 49;</code>
     *
     * <pre>
     * 已领取的累计充值额对应项
     * </pre>
     */
    public int getRechargeDaysCollection() {
      return rechargeDaysCollection_;
    }

    public static final int MAXFIGHTAMOUNT_FIELD_NUMBER = 50;
    private long maxFightAmount_;
    /**
     * <code>optional int64 maxFightAmount = 50;</code>
     *
     * <pre>
     * 角色达到的最高战力
     * </pre>
     */
    public boolean hasMaxFightAmount() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 maxFightAmount = 50;</code>
     *
     * <pre>
     * 角色达到的最高战力
     * </pre>
     */
    public long getMaxFightAmount() {
      return maxFightAmount_;
    }

    private void initFields() {
      diamond_ = 0L;
      systemDiamond_ = 0L;
      bindDiamond_ = 0L;
      money_ = 0L;
      runeExp_ = 0L;
      runeSlice_ = 0L;
      honor_ = 0L;
      guildContribution_ = 0L;
      guildStoragePoint_ = 0L;
      lastResetMonthlyTime_ = 0L;
      lastResetDailyTime_ = 0L;
      lastResetWeeklyTime_ = 0L;
      guildMoney_ = 0L;
      equipLotteryScore_ = 0L;
      luckShopScore_ = 0L;
      heraldryExp_ = 0L;
      heraldryStoneOne_ = 0L;
      heraldryStoneTwo_ = 0L;
      totalRechargeDiamond_ = 0L;
      totalGMRechargeDiamond_ = 0L;
      totalConsumeDiamond_ = 0L;
      totalRechargeRmb_ = 0;
      lastAuctionPwdErrTime_ = 0L;
      auctionPwdErrCount_ = 0;
      clientConfigs_ = app.protobuf.client.HeroMiscClientContent.ClientConfigsProto.getDefaultInstance();
      loginDay_ = 0;
      lastLoginTime_ = 0L;
      lastLogoutTime_ = 0L;
      totalOnlineTime_ = 0L;
      dailyOnlineAccTime_ = 0L;
      accumulatedOnlineTime_ = 0L;
      accumulatedOfflineTime_ = 0L;
      lastAddAccumulatedOfflineTime_ = 0L;
      glamour_ = 0;
      hasGottenFirstRechargePrize_ = false;
      rechargeItemCounts_ = java.util.Collections.emptyList();
      dailyDiamondItems_ = java.util.Collections.emptyList();
      dailyRechargeDiamond_ = 0;
      dailyRechargeColletions_ = java.util.Collections.emptyList();
      rechargeDays_ = 0;
      rechargeDaysCollection_ = 0;
      maxFightAmount_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, diamond_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, systemDiamond_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, bindDiamond_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, money_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, runeExp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, runeSlice_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, honor_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, guildContribution_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(9, guildStoragePoint_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(10, lastResetMonthlyTime_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(11, lastResetDailyTime_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(12, lastResetWeeklyTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, guildMoney_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, equipLotteryScore_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(15, luckShopScore_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(16, heraldryExp_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(17, heraldryStoneOne_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(18, heraldryStoneTwo_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(20, totalRechargeDiamond_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(21, totalConsumeDiamond_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(22, totalRechargeRmb_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt64(23, lastAuctionPwdErrTime_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(24, auctionPwdErrCount_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(25, totalGMRechargeDiamond_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeMessage(28, clientConfigs_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(30, loginDay_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt64(35, lastLoginTime_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt64(36, lastLogoutTime_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt64(37, totalOnlineTime_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt64(38, dailyOnlineAccTime_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt64(39, accumulatedOnlineTime_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeInt64(40, accumulatedOfflineTime_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(41, lastAddAccumulatedOfflineTime_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(42, glamour_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeBool(43, hasGottenFirstRechargePrize_);
      }
      for (int i = 0; i < rechargeItemCounts_.size(); i++) {
        output.writeMessage(44, rechargeItemCounts_.get(i));
      }
      for (int i = 0; i < dailyDiamondItems_.size(); i++) {
        output.writeMessage(45, dailyDiamondItems_.get(i));
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(46, dailyRechargeDiamond_);
      }
      for (int i = 0; i < dailyRechargeColletions_.size(); i++) {
        output.writeMessage(47, dailyRechargeColletions_.get(i));
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(48, rechargeDays_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(49, rechargeDaysCollection_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(50, maxFightAmount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, diamond_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, systemDiamond_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, bindDiamond_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, money_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, runeExp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, runeSlice_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, honor_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, guildContribution_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, guildStoragePoint_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, lastResetMonthlyTime_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, lastResetDailyTime_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, lastResetWeeklyTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, guildMoney_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, equipLotteryScore_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, luckShopScore_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, heraldryExp_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, heraldryStoneOne_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, heraldryStoneTwo_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, totalRechargeDiamond_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(21, totalConsumeDiamond_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, totalRechargeRmb_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(23, lastAuctionPwdErrTime_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, auctionPwdErrCount_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(25, totalGMRechargeDiamond_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, clientConfigs_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, loginDay_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(35, lastLoginTime_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(36, lastLogoutTime_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(37, totalOnlineTime_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(38, dailyOnlineAccTime_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(39, accumulatedOnlineTime_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(40, accumulatedOfflineTime_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(41, lastAddAccumulatedOfflineTime_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(42, glamour_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(43, hasGottenFirstRechargePrize_);
      }
      for (int i = 0; i < rechargeItemCounts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(44, rechargeItemCounts_.get(i));
      }
      for (int i = 0; i < dailyDiamondItems_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(45, dailyDiamondItems_.get(i));
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(46, dailyRechargeDiamond_);
      }
      for (int i = 0; i < dailyRechargeColletions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(47, dailyRechargeColletions_.get(i));
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(48, rechargeDays_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(49, rechargeDaysCollection_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(50, maxFightAmount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.HeroMiscModuleObjMinorProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.HeroMiscModuleObjMinorProto)
        app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return app.protobuf.server.HeroMiscServerContent.internal_static_proto_HeroMiscModuleObjMinorProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return app.protobuf.server.HeroMiscServerContent.internal_static_proto_HeroMiscModuleObjMinorProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto.class, app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto.Builder.class);
      }

      // Construct using app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getClientConfigsFieldBuilder();
          getRechargeItemCountsFieldBuilder();
          getDailyDiamondItemsFieldBuilder();
          getDailyRechargeColletionsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        diamond_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        systemDiamond_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        bindDiamond_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        money_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        runeExp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        runeSlice_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        honor_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        guildContribution_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        guildStoragePoint_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        lastResetMonthlyTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        lastResetDailyTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        lastResetWeeklyTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        guildMoney_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        equipLotteryScore_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        luckShopScore_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        heraldryExp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        heraldryStoneOne_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        heraldryStoneTwo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00020000);
        totalRechargeDiamond_ = 0L;
        bitField0_ = (bitField0_ & ~0x00040000);
        totalGMRechargeDiamond_ = 0L;
        bitField0_ = (bitField0_ & ~0x00080000);
        totalConsumeDiamond_ = 0L;
        bitField0_ = (bitField0_ & ~0x00100000);
        totalRechargeRmb_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        lastAuctionPwdErrTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00400000);
        auctionPwdErrCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        if (clientConfigsBuilder_ == null) {
          clientConfigs_ = app.protobuf.client.HeroMiscClientContent.ClientConfigsProto.getDefaultInstance();
        } else {
          clientConfigsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        loginDay_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        lastLoginTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x04000000);
        lastLogoutTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x08000000);
        totalOnlineTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x10000000);
        dailyOnlineAccTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x20000000);
        accumulatedOnlineTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x40000000);
        accumulatedOfflineTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x80000000);
        lastAddAccumulatedOfflineTime_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000001);
        glamour_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        hasGottenFirstRechargePrize_ = false;
        bitField1_ = (bitField1_ & ~0x00000004);
        if (rechargeItemCountsBuilder_ == null) {
          rechargeItemCounts_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000008);
        } else {
          rechargeItemCountsBuilder_.clear();
        }
        if (dailyDiamondItemsBuilder_ == null) {
          dailyDiamondItems_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000010);
        } else {
          dailyDiamondItemsBuilder_.clear();
        }
        dailyRechargeDiamond_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        if (dailyRechargeColletionsBuilder_ == null) {
          dailyRechargeColletions_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000040);
        } else {
          dailyRechargeColletionsBuilder_.clear();
        }
        rechargeDays_ = 0;
        bitField1_ = (bitField1_ & ~0x00000080);
        rechargeDaysCollection_ = 0;
        bitField1_ = (bitField1_ & ~0x00000100);
        maxFightAmount_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return app.protobuf.server.HeroMiscServerContent.internal_static_proto_HeroMiscModuleObjMinorProto_descriptor;
      }

      public app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto getDefaultInstanceForType() {
        return app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto.getDefaultInstance();
      }

      public app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto build() {
        app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto buildPartial() {
        app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto result = new app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.diamond_ = diamond_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.systemDiamond_ = systemDiamond_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bindDiamond_ = bindDiamond_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.money_ = money_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.runeExp_ = runeExp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.runeSlice_ = runeSlice_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.honor_ = honor_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.guildContribution_ = guildContribution_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.guildStoragePoint_ = guildStoragePoint_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.lastResetMonthlyTime_ = lastResetMonthlyTime_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.lastResetDailyTime_ = lastResetDailyTime_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.lastResetWeeklyTime_ = lastResetWeeklyTime_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.guildMoney_ = guildMoney_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.equipLotteryScore_ = equipLotteryScore_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.luckShopScore_ = luckShopScore_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.heraldryExp_ = heraldryExp_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.heraldryStoneOne_ = heraldryStoneOne_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.heraldryStoneTwo_ = heraldryStoneTwo_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.totalRechargeDiamond_ = totalRechargeDiamond_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.totalGMRechargeDiamond_ = totalGMRechargeDiamond_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.totalConsumeDiamond_ = totalConsumeDiamond_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.totalRechargeRmb_ = totalRechargeRmb_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.lastAuctionPwdErrTime_ = lastAuctionPwdErrTime_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.auctionPwdErrCount_ = auctionPwdErrCount_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        if (clientConfigsBuilder_ == null) {
          result.clientConfigs_ = clientConfigs_;
        } else {
          result.clientConfigs_ = clientConfigsBuilder_.build();
        }
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.loginDay_ = loginDay_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.lastLoginTime_ = lastLoginTime_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.lastLogoutTime_ = lastLogoutTime_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.totalOnlineTime_ = totalOnlineTime_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.dailyOnlineAccTime_ = dailyOnlineAccTime_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.accumulatedOnlineTime_ = accumulatedOnlineTime_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.accumulatedOfflineTime_ = accumulatedOfflineTime_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.lastAddAccumulatedOfflineTime_ = lastAddAccumulatedOfflineTime_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.glamour_ = glamour_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.hasGottenFirstRechargePrize_ = hasGottenFirstRechargePrize_;
        if (rechargeItemCountsBuilder_ == null) {
          if (((bitField1_ & 0x00000008) == 0x00000008)) {
            rechargeItemCounts_ = java.util.Collections.unmodifiableList(rechargeItemCounts_);
            bitField1_ = (bitField1_ & ~0x00000008);
          }
          result.rechargeItemCounts_ = rechargeItemCounts_;
        } else {
          result.rechargeItemCounts_ = rechargeItemCountsBuilder_.build();
        }
        if (dailyDiamondItemsBuilder_ == null) {
          if (((bitField1_ & 0x00000010) == 0x00000010)) {
            dailyDiamondItems_ = java.util.Collections.unmodifiableList(dailyDiamondItems_);
            bitField1_ = (bitField1_ & ~0x00000010);
          }
          result.dailyDiamondItems_ = dailyDiamondItems_;
        } else {
          result.dailyDiamondItems_ = dailyDiamondItemsBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000008;
        }
        result.dailyRechargeDiamond_ = dailyRechargeDiamond_;
        if (dailyRechargeColletionsBuilder_ == null) {
          if (((bitField1_ & 0x00000040) == 0x00000040)) {
            dailyRechargeColletions_ = java.util.Collections.unmodifiableList(dailyRechargeColletions_);
            bitField1_ = (bitField1_ & ~0x00000040);
          }
          result.dailyRechargeColletions_ = dailyRechargeColletions_;
        } else {
          result.dailyRechargeColletions_ = dailyRechargeColletionsBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000010;
        }
        result.rechargeDays_ = rechargeDays_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000020;
        }
        result.rechargeDaysCollection_ = rechargeDaysCollection_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000040;
        }
        result.maxFightAmount_ = maxFightAmount_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto) {
          return mergeFrom((app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto other) {
        if (other == app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto.getDefaultInstance()) return this;
        if (other.hasDiamond()) {
          setDiamond(other.getDiamond());
        }
        if (other.hasSystemDiamond()) {
          setSystemDiamond(other.getSystemDiamond());
        }
        if (other.hasBindDiamond()) {
          setBindDiamond(other.getBindDiamond());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        if (other.hasRuneExp()) {
          setRuneExp(other.getRuneExp());
        }
        if (other.hasRuneSlice()) {
          setRuneSlice(other.getRuneSlice());
        }
        if (other.hasHonor()) {
          setHonor(other.getHonor());
        }
        if (other.hasGuildContribution()) {
          setGuildContribution(other.getGuildContribution());
        }
        if (other.hasGuildStoragePoint()) {
          setGuildStoragePoint(other.getGuildStoragePoint());
        }
        if (other.hasLastResetMonthlyTime()) {
          setLastResetMonthlyTime(other.getLastResetMonthlyTime());
        }
        if (other.hasLastResetDailyTime()) {
          setLastResetDailyTime(other.getLastResetDailyTime());
        }
        if (other.hasLastResetWeeklyTime()) {
          setLastResetWeeklyTime(other.getLastResetWeeklyTime());
        }
        if (other.hasGuildMoney()) {
          setGuildMoney(other.getGuildMoney());
        }
        if (other.hasEquipLotteryScore()) {
          setEquipLotteryScore(other.getEquipLotteryScore());
        }
        if (other.hasLuckShopScore()) {
          setLuckShopScore(other.getLuckShopScore());
        }
        if (other.hasHeraldryExp()) {
          setHeraldryExp(other.getHeraldryExp());
        }
        if (other.hasHeraldryStoneOne()) {
          setHeraldryStoneOne(other.getHeraldryStoneOne());
        }
        if (other.hasHeraldryStoneTwo()) {
          setHeraldryStoneTwo(other.getHeraldryStoneTwo());
        }
        if (other.hasTotalRechargeDiamond()) {
          setTotalRechargeDiamond(other.getTotalRechargeDiamond());
        }
        if (other.hasTotalGMRechargeDiamond()) {
          setTotalGMRechargeDiamond(other.getTotalGMRechargeDiamond());
        }
        if (other.hasTotalConsumeDiamond()) {
          setTotalConsumeDiamond(other.getTotalConsumeDiamond());
        }
        if (other.hasTotalRechargeRmb()) {
          setTotalRechargeRmb(other.getTotalRechargeRmb());
        }
        if (other.hasLastAuctionPwdErrTime()) {
          setLastAuctionPwdErrTime(other.getLastAuctionPwdErrTime());
        }
        if (other.hasAuctionPwdErrCount()) {
          setAuctionPwdErrCount(other.getAuctionPwdErrCount());
        }
        if (other.hasClientConfigs()) {
          mergeClientConfigs(other.getClientConfigs());
        }
        if (other.hasLoginDay()) {
          setLoginDay(other.getLoginDay());
        }
        if (other.hasLastLoginTime()) {
          setLastLoginTime(other.getLastLoginTime());
        }
        if (other.hasLastLogoutTime()) {
          setLastLogoutTime(other.getLastLogoutTime());
        }
        if (other.hasTotalOnlineTime()) {
          setTotalOnlineTime(other.getTotalOnlineTime());
        }
        if (other.hasDailyOnlineAccTime()) {
          setDailyOnlineAccTime(other.getDailyOnlineAccTime());
        }
        if (other.hasAccumulatedOnlineTime()) {
          setAccumulatedOnlineTime(other.getAccumulatedOnlineTime());
        }
        if (other.hasAccumulatedOfflineTime()) {
          setAccumulatedOfflineTime(other.getAccumulatedOfflineTime());
        }
        if (other.hasLastAddAccumulatedOfflineTime()) {
          setLastAddAccumulatedOfflineTime(other.getLastAddAccumulatedOfflineTime());
        }
        if (other.hasGlamour()) {
          setGlamour(other.getGlamour());
        }
        if (other.hasHasGottenFirstRechargePrize()) {
          setHasGottenFirstRechargePrize(other.getHasGottenFirstRechargePrize());
        }
        if (rechargeItemCountsBuilder_ == null) {
          if (!other.rechargeItemCounts_.isEmpty()) {
            if (rechargeItemCounts_.isEmpty()) {
              rechargeItemCounts_ = other.rechargeItemCounts_;
              bitField1_ = (bitField1_ & ~0x00000008);
            } else {
              ensureRechargeItemCountsIsMutable();
              rechargeItemCounts_.addAll(other.rechargeItemCounts_);
            }
            onChanged();
          }
        } else {
          if (!other.rechargeItemCounts_.isEmpty()) {
            if (rechargeItemCountsBuilder_.isEmpty()) {
              rechargeItemCountsBuilder_.dispose();
              rechargeItemCountsBuilder_ = null;
              rechargeItemCounts_ = other.rechargeItemCounts_;
              bitField1_ = (bitField1_ & ~0x00000008);
              rechargeItemCountsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRechargeItemCountsFieldBuilder() : null;
            } else {
              rechargeItemCountsBuilder_.addAllMessages(other.rechargeItemCounts_);
            }
          }
        }
        if (dailyDiamondItemsBuilder_ == null) {
          if (!other.dailyDiamondItems_.isEmpty()) {
            if (dailyDiamondItems_.isEmpty()) {
              dailyDiamondItems_ = other.dailyDiamondItems_;
              bitField1_ = (bitField1_ & ~0x00000010);
            } else {
              ensureDailyDiamondItemsIsMutable();
              dailyDiamondItems_.addAll(other.dailyDiamondItems_);
            }
            onChanged();
          }
        } else {
          if (!other.dailyDiamondItems_.isEmpty()) {
            if (dailyDiamondItemsBuilder_.isEmpty()) {
              dailyDiamondItemsBuilder_.dispose();
              dailyDiamondItemsBuilder_ = null;
              dailyDiamondItems_ = other.dailyDiamondItems_;
              bitField1_ = (bitField1_ & ~0x00000010);
              dailyDiamondItemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDailyDiamondItemsFieldBuilder() : null;
            } else {
              dailyDiamondItemsBuilder_.addAllMessages(other.dailyDiamondItems_);
            }
          }
        }
        if (other.hasDailyRechargeDiamond()) {
          setDailyRechargeDiamond(other.getDailyRechargeDiamond());
        }
        if (dailyRechargeColletionsBuilder_ == null) {
          if (!other.dailyRechargeColletions_.isEmpty()) {
            if (dailyRechargeColletions_.isEmpty()) {
              dailyRechargeColletions_ = other.dailyRechargeColletions_;
              bitField1_ = (bitField1_ & ~0x00000040);
            } else {
              ensureDailyRechargeColletionsIsMutable();
              dailyRechargeColletions_.addAll(other.dailyRechargeColletions_);
            }
            onChanged();
          }
        } else {
          if (!other.dailyRechargeColletions_.isEmpty()) {
            if (dailyRechargeColletionsBuilder_.isEmpty()) {
              dailyRechargeColletionsBuilder_.dispose();
              dailyRechargeColletionsBuilder_ = null;
              dailyRechargeColletions_ = other.dailyRechargeColletions_;
              bitField1_ = (bitField1_ & ~0x00000040);
              dailyRechargeColletionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDailyRechargeColletionsFieldBuilder() : null;
            } else {
              dailyRechargeColletionsBuilder_.addAllMessages(other.dailyRechargeColletions_);
            }
          }
        }
        if (other.hasRechargeDays()) {
          setRechargeDays(other.getRechargeDays());
        }
        if (other.hasRechargeDaysCollection()) {
          setRechargeDaysCollection(other.getRechargeDaysCollection());
        }
        if (other.hasMaxFightAmount()) {
          setMaxFightAmount(other.getMaxFightAmount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (app.protobuf.server.HeroMiscServerContent.HeroMiscModuleObjMinorProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private long diamond_ ;
      /**
       * <code>optional int64 diamond = 1;</code>
       *
       * <pre>
       * 钻石
       * </pre>
       */
      public boolean hasDiamond() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 diamond = 1;</code>
       *
       * <pre>
       * 钻石
       * </pre>
       */
      public long getDiamond() {
        return diamond_;
      }
      /**
       * <code>optional int64 diamond = 1;</code>
       *
       * <pre>
       * 钻石
       * </pre>
       */
      public Builder setDiamond(long value) {
        bitField0_ |= 0x00000001;
        diamond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 diamond = 1;</code>
       *
       * <pre>
       * 钻石
       * </pre>
       */
      public Builder clearDiamond() {
        bitField0_ = (bitField0_ & ~0x00000001);
        diamond_ = 0L;
        onChanged();
        return this;
      }

      private long systemDiamond_ ;
      /**
       * <code>optional int64 systemDiamond = 2;</code>
       *
       * <pre>
       * 系统钻石
       * </pre>
       */
      public boolean hasSystemDiamond() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 systemDiamond = 2;</code>
       *
       * <pre>
       * 系统钻石
       * </pre>
       */
      public long getSystemDiamond() {
        return systemDiamond_;
      }
      /**
       * <code>optional int64 systemDiamond = 2;</code>
       *
       * <pre>
       * 系统钻石
       * </pre>
       */
      public Builder setSystemDiamond(long value) {
        bitField0_ |= 0x00000002;
        systemDiamond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 systemDiamond = 2;</code>
       *
       * <pre>
       * 系统钻石
       * </pre>
       */
      public Builder clearSystemDiamond() {
        bitField0_ = (bitField0_ & ~0x00000002);
        systemDiamond_ = 0L;
        onChanged();
        return this;
      }

      private long bindDiamond_ ;
      /**
       * <code>optional int64 bindDiamond = 3;</code>
       *
       * <pre>
       * 绑定钻石
       * </pre>
       */
      public boolean hasBindDiamond() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 bindDiamond = 3;</code>
       *
       * <pre>
       * 绑定钻石
       * </pre>
       */
      public long getBindDiamond() {
        return bindDiamond_;
      }
      /**
       * <code>optional int64 bindDiamond = 3;</code>
       *
       * <pre>
       * 绑定钻石
       * </pre>
       */
      public Builder setBindDiamond(long value) {
        bitField0_ |= 0x00000004;
        bindDiamond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 bindDiamond = 3;</code>
       *
       * <pre>
       * 绑定钻石
       * </pre>
       */
      public Builder clearBindDiamond() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bindDiamond_ = 0L;
        onChanged();
        return this;
      }

      private long money_ ;
      /**
       * <code>optional int64 money = 4;</code>
       *
       * <pre>
       * 金币
       * </pre>
       */
      public boolean hasMoney() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 money = 4;</code>
       *
       * <pre>
       * 金币
       * </pre>
       */
      public long getMoney() {
        return money_;
      }
      /**
       * <code>optional int64 money = 4;</code>
       *
       * <pre>
       * 金币
       * </pre>
       */
      public Builder setMoney(long value) {
        bitField0_ |= 0x00000008;
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 money = 4;</code>
       *
       * <pre>
       * 金币
       * </pre>
       */
      public Builder clearMoney() {
        bitField0_ = (bitField0_ & ~0x00000008);
        money_ = 0L;
        onChanged();
        return this;
      }

      private long runeExp_ ;
      /**
       * <code>optional int64 rune_exp = 5;</code>
       *
       * <pre>
       * 符文经验
       * </pre>
       */
      public boolean hasRuneExp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 rune_exp = 5;</code>
       *
       * <pre>
       * 符文经验
       * </pre>
       */
      public long getRuneExp() {
        return runeExp_;
      }
      /**
       * <code>optional int64 rune_exp = 5;</code>
       *
       * <pre>
       * 符文经验
       * </pre>
       */
      public Builder setRuneExp(long value) {
        bitField0_ |= 0x00000010;
        runeExp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 rune_exp = 5;</code>
       *
       * <pre>
       * 符文经验
       * </pre>
       */
      public Builder clearRuneExp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        runeExp_ = 0L;
        onChanged();
        return this;
      }

      private long runeSlice_ ;
      /**
       * <code>optional int64 rune_slice = 6;</code>
       *
       * <pre>
       * 符文碎片
       * </pre>
       */
      public boolean hasRuneSlice() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 rune_slice = 6;</code>
       *
       * <pre>
       * 符文碎片
       * </pre>
       */
      public long getRuneSlice() {
        return runeSlice_;
      }
      /**
       * <code>optional int64 rune_slice = 6;</code>
       *
       * <pre>
       * 符文碎片
       * </pre>
       */
      public Builder setRuneSlice(long value) {
        bitField0_ |= 0x00000020;
        runeSlice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 rune_slice = 6;</code>
       *
       * <pre>
       * 符文碎片
       * </pre>
       */
      public Builder clearRuneSlice() {
        bitField0_ = (bitField0_ & ~0x00000020);
        runeSlice_ = 0L;
        onChanged();
        return this;
      }

      private long honor_ ;
      /**
       * <code>optional int64 honor = 7;</code>
       *
       * <pre>
       * 荣誉值
       * </pre>
       */
      public boolean hasHonor() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 honor = 7;</code>
       *
       * <pre>
       * 荣誉值
       * </pre>
       */
      public long getHonor() {
        return honor_;
      }
      /**
       * <code>optional int64 honor = 7;</code>
       *
       * <pre>
       * 荣誉值
       * </pre>
       */
      public Builder setHonor(long value) {
        bitField0_ |= 0x00000040;
        honor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 honor = 7;</code>
       *
       * <pre>
       * 荣誉值
       * </pre>
       */
      public Builder clearHonor() {
        bitField0_ = (bitField0_ & ~0x00000040);
        honor_ = 0L;
        onChanged();
        return this;
      }

      private long guildContribution_ ;
      /**
       * <code>optional int64 guild_contribution = 8;</code>
       *
       * <pre>
       * 仙盟贡献
       * </pre>
       */
      public boolean hasGuildContribution() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 guild_contribution = 8;</code>
       *
       * <pre>
       * 仙盟贡献
       * </pre>
       */
      public long getGuildContribution() {
        return guildContribution_;
      }
      /**
       * <code>optional int64 guild_contribution = 8;</code>
       *
       * <pre>
       * 仙盟贡献
       * </pre>
       */
      public Builder setGuildContribution(long value) {
        bitField0_ |= 0x00000080;
        guildContribution_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 guild_contribution = 8;</code>
       *
       * <pre>
       * 仙盟贡献
       * </pre>
       */
      public Builder clearGuildContribution() {
        bitField0_ = (bitField0_ & ~0x00000080);
        guildContribution_ = 0L;
        onChanged();
        return this;
      }

      private long guildStoragePoint_ ;
      /**
       * <code>optional int64 guild_storage_point = 9;</code>
       *
       * <pre>
       * 仙盟仓库积分
       * </pre>
       */
      public boolean hasGuildStoragePoint() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 guild_storage_point = 9;</code>
       *
       * <pre>
       * 仙盟仓库积分
       * </pre>
       */
      public long getGuildStoragePoint() {
        return guildStoragePoint_;
      }
      /**
       * <code>optional int64 guild_storage_point = 9;</code>
       *
       * <pre>
       * 仙盟仓库积分
       * </pre>
       */
      public Builder setGuildStoragePoint(long value) {
        bitField0_ |= 0x00000100;
        guildStoragePoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 guild_storage_point = 9;</code>
       *
       * <pre>
       * 仙盟仓库积分
       * </pre>
       */
      public Builder clearGuildStoragePoint() {
        bitField0_ = (bitField0_ & ~0x00000100);
        guildStoragePoint_ = 0L;
        onChanged();
        return this;
      }

      private long lastResetMonthlyTime_ ;
      /**
       * <code>optional int64 last_reset_monthly_time = 10;</code>
       *
       * <pre>
       * 最后一次清理每月状态的时间
       * </pre>
       */
      public boolean hasLastResetMonthlyTime() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 last_reset_monthly_time = 10;</code>
       *
       * <pre>
       * 最后一次清理每月状态的时间
       * </pre>
       */
      public long getLastResetMonthlyTime() {
        return lastResetMonthlyTime_;
      }
      /**
       * <code>optional int64 last_reset_monthly_time = 10;</code>
       *
       * <pre>
       * 最后一次清理每月状态的时间
       * </pre>
       */
      public Builder setLastResetMonthlyTime(long value) {
        bitField0_ |= 0x00000200;
        lastResetMonthlyTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 last_reset_monthly_time = 10;</code>
       *
       * <pre>
       * 最后一次清理每月状态的时间
       * </pre>
       */
      public Builder clearLastResetMonthlyTime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        lastResetMonthlyTime_ = 0L;
        onChanged();
        return this;
      }

      private long lastResetDailyTime_ ;
      /**
       * <code>optional int64 last_reset_daily_time = 11;</code>
       *
       * <pre>
       * 最后一次清理每日状态的时间
       * </pre>
       */
      public boolean hasLastResetDailyTime() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 last_reset_daily_time = 11;</code>
       *
       * <pre>
       * 最后一次清理每日状态的时间
       * </pre>
       */
      public long getLastResetDailyTime() {
        return lastResetDailyTime_;
      }
      /**
       * <code>optional int64 last_reset_daily_time = 11;</code>
       *
       * <pre>
       * 最后一次清理每日状态的时间
       * </pre>
       */
      public Builder setLastResetDailyTime(long value) {
        bitField0_ |= 0x00000400;
        lastResetDailyTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 last_reset_daily_time = 11;</code>
       *
       * <pre>
       * 最后一次清理每日状态的时间
       * </pre>
       */
      public Builder clearLastResetDailyTime() {
        bitField0_ = (bitField0_ & ~0x00000400);
        lastResetDailyTime_ = 0L;
        onChanged();
        return this;
      }

      private long lastResetWeeklyTime_ ;
      /**
       * <code>optional int64 last_reset_weekly_time = 12;</code>
       *
       * <pre>
       * 最后一次清理每周状态的时间
       * </pre>
       */
      public boolean hasLastResetWeeklyTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 last_reset_weekly_time = 12;</code>
       *
       * <pre>
       * 最后一次清理每周状态的时间
       * </pre>
       */
      public long getLastResetWeeklyTime() {
        return lastResetWeeklyTime_;
      }
      /**
       * <code>optional int64 last_reset_weekly_time = 12;</code>
       *
       * <pre>
       * 最后一次清理每周状态的时间
       * </pre>
       */
      public Builder setLastResetWeeklyTime(long value) {
        bitField0_ |= 0x00000800;
        lastResetWeeklyTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 last_reset_weekly_time = 12;</code>
       *
       * <pre>
       * 最后一次清理每周状态的时间
       * </pre>
       */
      public Builder clearLastResetWeeklyTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        lastResetWeeklyTime_ = 0L;
        onChanged();
        return this;
      }

      private long guildMoney_ ;
      /**
       * <code>optional int64 guild_money = 13;</code>
       *
       * <pre>
       * 公会资金
       * </pre>
       */
      public boolean hasGuildMoney() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 guild_money = 13;</code>
       *
       * <pre>
       * 公会资金
       * </pre>
       */
      public long getGuildMoney() {
        return guildMoney_;
      }
      /**
       * <code>optional int64 guild_money = 13;</code>
       *
       * <pre>
       * 公会资金
       * </pre>
       */
      public Builder setGuildMoney(long value) {
        bitField0_ |= 0x00001000;
        guildMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 guild_money = 13;</code>
       *
       * <pre>
       * 公会资金
       * </pre>
       */
      public Builder clearGuildMoney() {
        bitField0_ = (bitField0_ & ~0x00001000);
        guildMoney_ = 0L;
        onChanged();
        return this;
      }

      private long equipLotteryScore_ ;
      /**
       * <code>optional int64 equip_lottery_score = 14;</code>
       *
       * <pre>
       * 装备寻宝积分
       * </pre>
       */
      public boolean hasEquipLotteryScore() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 equip_lottery_score = 14;</code>
       *
       * <pre>
       * 装备寻宝积分
       * </pre>
       */
      public long getEquipLotteryScore() {
        return equipLotteryScore_;
      }
      /**
       * <code>optional int64 equip_lottery_score = 14;</code>
       *
       * <pre>
       * 装备寻宝积分
       * </pre>
       */
      public Builder setEquipLotteryScore(long value) {
        bitField0_ |= 0x00002000;
        equipLotteryScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 equip_lottery_score = 14;</code>
       *
       * <pre>
       * 装备寻宝积分
       * </pre>
       */
      public Builder clearEquipLotteryScore() {
        bitField0_ = (bitField0_ & ~0x00002000);
        equipLotteryScore_ = 0L;
        onChanged();
        return this;
      }

      private long luckShopScore_ ;
      /**
       * <code>optional int64 luck_shop_score = 15;</code>
       *
       * <pre>
       * 幸运商店积分
       * </pre>
       */
      public boolean hasLuckShopScore() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 luck_shop_score = 15;</code>
       *
       * <pre>
       * 幸运商店积分
       * </pre>
       */
      public long getLuckShopScore() {
        return luckShopScore_;
      }
      /**
       * <code>optional int64 luck_shop_score = 15;</code>
       *
       * <pre>
       * 幸运商店积分
       * </pre>
       */
      public Builder setLuckShopScore(long value) {
        bitField0_ |= 0x00004000;
        luckShopScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 luck_shop_score = 15;</code>
       *
       * <pre>
       * 幸运商店积分
       * </pre>
       */
      public Builder clearLuckShopScore() {
        bitField0_ = (bitField0_ & ~0x00004000);
        luckShopScore_ = 0L;
        onChanged();
        return this;
      }

      private long heraldryExp_ ;
      /**
       * <code>optional int64 heraldry_exp = 16;</code>
       *
       * <pre>
       * 纹章经验(用来升级)
       * </pre>
       */
      public boolean hasHeraldryExp() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 heraldry_exp = 16;</code>
       *
       * <pre>
       * 纹章经验(用来升级)
       * </pre>
       */
      public long getHeraldryExp() {
        return heraldryExp_;
      }
      /**
       * <code>optional int64 heraldry_exp = 16;</code>
       *
       * <pre>
       * 纹章经验(用来升级)
       * </pre>
       */
      public Builder setHeraldryExp(long value) {
        bitField0_ |= 0x00008000;
        heraldryExp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 heraldry_exp = 16;</code>
       *
       * <pre>
       * 纹章经验(用来升级)
       * </pre>
       */
      public Builder clearHeraldryExp() {
        bitField0_ = (bitField0_ & ~0x00008000);
        heraldryExp_ = 0L;
        onChanged();
        return this;
      }

      private long heraldryStoneOne_ ;
      /**
       * <code>optional int64 heraldry_stone_one = 17;</code>
       *
       * <pre>
       * 纹章合成材料1(用来合成纹章，神魔石)
       * </pre>
       */
      public boolean hasHeraldryStoneOne() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 heraldry_stone_one = 17;</code>
       *
       * <pre>
       * 纹章合成材料1(用来合成纹章，神魔石)
       * </pre>
       */
      public long getHeraldryStoneOne() {
        return heraldryStoneOne_;
      }
      /**
       * <code>optional int64 heraldry_stone_one = 17;</code>
       *
       * <pre>
       * 纹章合成材料1(用来合成纹章，神魔石)
       * </pre>
       */
      public Builder setHeraldryStoneOne(long value) {
        bitField0_ |= 0x00010000;
        heraldryStoneOne_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 heraldry_stone_one = 17;</code>
       *
       * <pre>
       * 纹章合成材料1(用来合成纹章，神魔石)
       * </pre>
       */
      public Builder clearHeraldryStoneOne() {
        bitField0_ = (bitField0_ & ~0x00010000);
        heraldryStoneOne_ = 0L;
        onChanged();
        return this;
      }

      private long heraldryStoneTwo_ ;
      /**
       * <code>optional int64 heraldry_stone_two = 18;</code>
       *
       * <pre>
       * 纹章合成材料2(用来合成纹章，圣魔石)
       * </pre>
       */
      public boolean hasHeraldryStoneTwo() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 heraldry_stone_two = 18;</code>
       *
       * <pre>
       * 纹章合成材料2(用来合成纹章，圣魔石)
       * </pre>
       */
      public long getHeraldryStoneTwo() {
        return heraldryStoneTwo_;
      }
      /**
       * <code>optional int64 heraldry_stone_two = 18;</code>
       *
       * <pre>
       * 纹章合成材料2(用来合成纹章，圣魔石)
       * </pre>
       */
      public Builder setHeraldryStoneTwo(long value) {
        bitField0_ |= 0x00020000;
        heraldryStoneTwo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 heraldry_stone_two = 18;</code>
       *
       * <pre>
       * 纹章合成材料2(用来合成纹章，圣魔石)
       * </pre>
       */
      public Builder clearHeraldryStoneTwo() {
        bitField0_ = (bitField0_ & ~0x00020000);
        heraldryStoneTwo_ = 0L;
        onChanged();
        return this;
      }

      private long totalRechargeDiamond_ ;
      /**
       * <code>optional int64 totalRechargeDiamond = 20;</code>
       *
       * <pre>
       * 总累计充值钻石数，大于0表示充值过
       * </pre>
       */
      public boolean hasTotalRechargeDiamond() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 totalRechargeDiamond = 20;</code>
       *
       * <pre>
       * 总累计充值钻石数，大于0表示充值过
       * </pre>
       */
      public long getTotalRechargeDiamond() {
        return totalRechargeDiamond_;
      }
      /**
       * <code>optional int64 totalRechargeDiamond = 20;</code>
       *
       * <pre>
       * 总累计充值钻石数，大于0表示充值过
       * </pre>
       */
      public Builder setTotalRechargeDiamond(long value) {
        bitField0_ |= 0x00040000;
        totalRechargeDiamond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 totalRechargeDiamond = 20;</code>
       *
       * <pre>
       * 总累计充值钻石数，大于0表示充值过
       * </pre>
       */
      public Builder clearTotalRechargeDiamond() {
        bitField0_ = (bitField0_ & ~0x00040000);
        totalRechargeDiamond_ = 0L;
        onChanged();
        return this;
      }

      private long totalGMRechargeDiamond_ ;
      /**
       * <code>optional int64 totalGMRechargeDiamond = 25;</code>
       *
       * <pre>
       * 累计gm发的钻石，大于0表示gm发过
       * </pre>
       */
      public boolean hasTotalGMRechargeDiamond() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 totalGMRechargeDiamond = 25;</code>
       *
       * <pre>
       * 累计gm发的钻石，大于0表示gm发过
       * </pre>
       */
      public long getTotalGMRechargeDiamond() {
        return totalGMRechargeDiamond_;
      }
      /**
       * <code>optional int64 totalGMRechargeDiamond = 25;</code>
       *
       * <pre>
       * 累计gm发的钻石，大于0表示gm发过
       * </pre>
       */
      public Builder setTotalGMRechargeDiamond(long value) {
        bitField0_ |= 0x00080000;
        totalGMRechargeDiamond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 totalGMRechargeDiamond = 25;</code>
       *
       * <pre>
       * 累计gm发的钻石，大于0表示gm发过
       * </pre>
       */
      public Builder clearTotalGMRechargeDiamond() {
        bitField0_ = (bitField0_ & ~0x00080000);
        totalGMRechargeDiamond_ = 0L;
        onChanged();
        return this;
      }

      private long totalConsumeDiamond_ ;
      /**
       * <code>optional int64 totalConsumeDiamond = 21;</code>
       *
       * <pre>
       * 累积消费钻石
       * </pre>
       */
      public boolean hasTotalConsumeDiamond() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int64 totalConsumeDiamond = 21;</code>
       *
       * <pre>
       * 累积消费钻石
       * </pre>
       */
      public long getTotalConsumeDiamond() {
        return totalConsumeDiamond_;
      }
      /**
       * <code>optional int64 totalConsumeDiamond = 21;</code>
       *
       * <pre>
       * 累积消费钻石
       * </pre>
       */
      public Builder setTotalConsumeDiamond(long value) {
        bitField0_ |= 0x00100000;
        totalConsumeDiamond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 totalConsumeDiamond = 21;</code>
       *
       * <pre>
       * 累积消费钻石
       * </pre>
       */
      public Builder clearTotalConsumeDiamond() {
        bitField0_ = (bitField0_ & ~0x00100000);
        totalConsumeDiamond_ = 0L;
        onChanged();
        return this;
      }

      private int totalRechargeRmb_ ;
      /**
       * <code>optional int32 totalRechargeRmb = 22;</code>
       *
       * <pre>
       * 总充值rmb
       * </pre>
       */
      public boolean hasTotalRechargeRmb() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 totalRechargeRmb = 22;</code>
       *
       * <pre>
       * 总充值rmb
       * </pre>
       */
      public int getTotalRechargeRmb() {
        return totalRechargeRmb_;
      }
      /**
       * <code>optional int32 totalRechargeRmb = 22;</code>
       *
       * <pre>
       * 总充值rmb
       * </pre>
       */
      public Builder setTotalRechargeRmb(int value) {
        bitField0_ |= 0x00200000;
        totalRechargeRmb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalRechargeRmb = 22;</code>
       *
       * <pre>
       * 总充值rmb
       * </pre>
       */
      public Builder clearTotalRechargeRmb() {
        bitField0_ = (bitField0_ & ~0x00200000);
        totalRechargeRmb_ = 0;
        onChanged();
        return this;
      }

      private long lastAuctionPwdErrTime_ ;
      /**
       * <code>optional int64 lastAuctionPwdErrTime = 23;</code>
       *
       * <pre>
       * 上一次市场密码错误时间
       * </pre>
       */
      public boolean hasLastAuctionPwdErrTime() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int64 lastAuctionPwdErrTime = 23;</code>
       *
       * <pre>
       * 上一次市场密码错误时间
       * </pre>
       */
      public long getLastAuctionPwdErrTime() {
        return lastAuctionPwdErrTime_;
      }
      /**
       * <code>optional int64 lastAuctionPwdErrTime = 23;</code>
       *
       * <pre>
       * 上一次市场密码错误时间
       * </pre>
       */
      public Builder setLastAuctionPwdErrTime(long value) {
        bitField0_ |= 0x00400000;
        lastAuctionPwdErrTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 lastAuctionPwdErrTime = 23;</code>
       *
       * <pre>
       * 上一次市场密码错误时间
       * </pre>
       */
      public Builder clearLastAuctionPwdErrTime() {
        bitField0_ = (bitField0_ & ~0x00400000);
        lastAuctionPwdErrTime_ = 0L;
        onChanged();
        return this;
      }

      private int auctionPwdErrCount_ ;
      /**
       * <code>optional int32 auctionPwdErrCount = 24;</code>
       *
       * <pre>
       * 市场密码连续错误次数
       * </pre>
       */
      public boolean hasAuctionPwdErrCount() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 auctionPwdErrCount = 24;</code>
       *
       * <pre>
       * 市场密码连续错误次数
       * </pre>
       */
      public int getAuctionPwdErrCount() {
        return auctionPwdErrCount_;
      }
      /**
       * <code>optional int32 auctionPwdErrCount = 24;</code>
       *
       * <pre>
       * 市场密码连续错误次数
       * </pre>
       */
      public Builder setAuctionPwdErrCount(int value) {
        bitField0_ |= 0x00800000;
        auctionPwdErrCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 auctionPwdErrCount = 24;</code>
       *
       * <pre>
       * 市场密码连续错误次数
       * </pre>
       */
      public Builder clearAuctionPwdErrCount() {
        bitField0_ = (bitField0_ & ~0x00800000);
        auctionPwdErrCount_ = 0;
        onChanged();
        return this;
      }

      private app.protobuf.client.HeroMiscClientContent.ClientConfigsProto clientConfigs_ = app.protobuf.client.HeroMiscClientContent.ClientConfigsProto.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          app.protobuf.client.HeroMiscClientContent.ClientConfigsProto, app.protobuf.client.HeroMiscClientContent.ClientConfigsProto.Builder, app.protobuf.client.HeroMiscClientContent.ClientConfigsProtoOrBuilder> clientConfigsBuilder_;
      /**
       * <code>optional .proto.ClientConfigsProto client_configs = 28;</code>
       *
       * <pre>
       * 客户端配置
       * </pre>
       */
      public boolean hasClientConfigs() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .proto.ClientConfigsProto client_configs = 28;</code>
       *
       * <pre>
       * 客户端配置
       * </pre>
       */
      public app.protobuf.client.HeroMiscClientContent.ClientConfigsProto getClientConfigs() {
        if (clientConfigsBuilder_ == null) {
          return clientConfigs_;
        } else {
          return clientConfigsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .proto.ClientConfigsProto client_configs = 28;</code>
       *
       * <pre>
       * 客户端配置
       * </pre>
       */
      public Builder setClientConfigs(app.protobuf.client.HeroMiscClientContent.ClientConfigsProto value) {
        if (clientConfigsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientConfigs_ = value;
          onChanged();
        } else {
          clientConfigsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .proto.ClientConfigsProto client_configs = 28;</code>
       *
       * <pre>
       * 客户端配置
       * </pre>
       */
      public Builder setClientConfigs(
          app.protobuf.client.HeroMiscClientContent.ClientConfigsProto.Builder builderForValue) {
        if (clientConfigsBuilder_ == null) {
          clientConfigs_ = builderForValue.build();
          onChanged();
        } else {
          clientConfigsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .proto.ClientConfigsProto client_configs = 28;</code>
       *
       * <pre>
       * 客户端配置
       * </pre>
       */
      public Builder mergeClientConfigs(app.protobuf.client.HeroMiscClientContent.ClientConfigsProto value) {
        if (clientConfigsBuilder_ == null) {
          if (((bitField0_ & 0x01000000) == 0x01000000) &&
              clientConfigs_ != app.protobuf.client.HeroMiscClientContent.ClientConfigsProto.getDefaultInstance()) {
            clientConfigs_ =
              app.protobuf.client.HeroMiscClientContent.ClientConfigsProto.newBuilder(clientConfigs_).mergeFrom(value).buildPartial();
          } else {
            clientConfigs_ = value;
          }
          onChanged();
        } else {
          clientConfigsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .proto.ClientConfigsProto client_configs = 28;</code>
       *
       * <pre>
       * 客户端配置
       * </pre>
       */
      public Builder clearClientConfigs() {
        if (clientConfigsBuilder_ == null) {
          clientConfigs_ = app.protobuf.client.HeroMiscClientContent.ClientConfigsProto.getDefaultInstance();
          onChanged();
        } else {
          clientConfigsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }
      /**
       * <code>optional .proto.ClientConfigsProto client_configs = 28;</code>
       *
       * <pre>
       * 客户端配置
       * </pre>
       */
      public app.protobuf.client.HeroMiscClientContent.ClientConfigsProto.Builder getClientConfigsBuilder() {
        bitField0_ |= 0x01000000;
        onChanged();
        return getClientConfigsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .proto.ClientConfigsProto client_configs = 28;</code>
       *
       * <pre>
       * 客户端配置
       * </pre>
       */
      public app.protobuf.client.HeroMiscClientContent.ClientConfigsProtoOrBuilder getClientConfigsOrBuilder() {
        if (clientConfigsBuilder_ != null) {
          return clientConfigsBuilder_.getMessageOrBuilder();
        } else {
          return clientConfigs_;
        }
      }
      /**
       * <code>optional .proto.ClientConfigsProto client_configs = 28;</code>
       *
       * <pre>
       * 客户端配置
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          app.protobuf.client.HeroMiscClientContent.ClientConfigsProto, app.protobuf.client.HeroMiscClientContent.ClientConfigsProto.Builder, app.protobuf.client.HeroMiscClientContent.ClientConfigsProtoOrBuilder> 
          getClientConfigsFieldBuilder() {
        if (clientConfigsBuilder_ == null) {
          clientConfigsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              app.protobuf.client.HeroMiscClientContent.ClientConfigsProto, app.protobuf.client.HeroMiscClientContent.ClientConfigsProto.Builder, app.protobuf.client.HeroMiscClientContent.ClientConfigsProtoOrBuilder>(
                  getClientConfigs(),
                  getParentForChildren(),
                  isClean());
          clientConfigs_ = null;
        }
        return clientConfigsBuilder_;
      }

      private int loginDay_ ;
      /**
       * <code>optional int32 login_day = 30;</code>
       *
       * <pre>
       * 登陆天数
       * </pre>
       */
      public boolean hasLoginDay() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 login_day = 30;</code>
       *
       * <pre>
       * 登陆天数
       * </pre>
       */
      public int getLoginDay() {
        return loginDay_;
      }
      /**
       * <code>optional int32 login_day = 30;</code>
       *
       * <pre>
       * 登陆天数
       * </pre>
       */
      public Builder setLoginDay(int value) {
        bitField0_ |= 0x02000000;
        loginDay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 login_day = 30;</code>
       *
       * <pre>
       * 登陆天数
       * </pre>
       */
      public Builder clearLoginDay() {
        bitField0_ = (bitField0_ & ~0x02000000);
        loginDay_ = 0;
        onChanged();
        return this;
      }

      private long lastLoginTime_ ;
      /**
       * <code>optional int64 last_login_time = 35;</code>
       *
       * <pre>
       * 最后一次下线时间
       * </pre>
       */
      public boolean hasLastLoginTime() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int64 last_login_time = 35;</code>
       *
       * <pre>
       * 最后一次下线时间
       * </pre>
       */
      public long getLastLoginTime() {
        return lastLoginTime_;
      }
      /**
       * <code>optional int64 last_login_time = 35;</code>
       *
       * <pre>
       * 最后一次下线时间
       * </pre>
       */
      public Builder setLastLoginTime(long value) {
        bitField0_ |= 0x04000000;
        lastLoginTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 last_login_time = 35;</code>
       *
       * <pre>
       * 最后一次下线时间
       * </pre>
       */
      public Builder clearLastLoginTime() {
        bitField0_ = (bitField0_ & ~0x04000000);
        lastLoginTime_ = 0L;
        onChanged();
        return this;
      }

      private long lastLogoutTime_ ;
      /**
       * <code>optional int64 last_logout_time = 36;</code>
       *
       * <pre>
       * 最后一次下线时间
       * </pre>
       */
      public boolean hasLastLogoutTime() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int64 last_logout_time = 36;</code>
       *
       * <pre>
       * 最后一次下线时间
       * </pre>
       */
      public long getLastLogoutTime() {
        return lastLogoutTime_;
      }
      /**
       * <code>optional int64 last_logout_time = 36;</code>
       *
       * <pre>
       * 最后一次下线时间
       * </pre>
       */
      public Builder setLastLogoutTime(long value) {
        bitField0_ |= 0x08000000;
        lastLogoutTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 last_logout_time = 36;</code>
       *
       * <pre>
       * 最后一次下线时间
       * </pre>
       */
      public Builder clearLastLogoutTime() {
        bitField0_ = (bitField0_ & ~0x08000000);
        lastLogoutTime_ = 0L;
        onChanged();
        return this;
      }

      private long totalOnlineTime_ ;
      /**
       * <code>optional int64 total_online_time = 37;</code>
       *
       * <pre>
       * 累计在线时间
       * </pre>
       */
      public boolean hasTotalOnlineTime() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int64 total_online_time = 37;</code>
       *
       * <pre>
       * 累计在线时间
       * </pre>
       */
      public long getTotalOnlineTime() {
        return totalOnlineTime_;
      }
      /**
       * <code>optional int64 total_online_time = 37;</code>
       *
       * <pre>
       * 累计在线时间
       * </pre>
       */
      public Builder setTotalOnlineTime(long value) {
        bitField0_ |= 0x10000000;
        totalOnlineTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 total_online_time = 37;</code>
       *
       * <pre>
       * 累计在线时间
       * </pre>
       */
      public Builder clearTotalOnlineTime() {
        bitField0_ = (bitField0_ & ~0x10000000);
        totalOnlineTime_ = 0L;
        onChanged();
        return this;
      }

      private long dailyOnlineAccTime_ ;
      /**
       * <code>optional int64 daily_online_acc_time = 38;</code>
       *
       * <pre>
       * 今日在线累计时间
       * </pre>
       */
      public boolean hasDailyOnlineAccTime() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int64 daily_online_acc_time = 38;</code>
       *
       * <pre>
       * 今日在线累计时间
       * </pre>
       */
      public long getDailyOnlineAccTime() {
        return dailyOnlineAccTime_;
      }
      /**
       * <code>optional int64 daily_online_acc_time = 38;</code>
       *
       * <pre>
       * 今日在线累计时间
       * </pre>
       */
      public Builder setDailyOnlineAccTime(long value) {
        bitField0_ |= 0x20000000;
        dailyOnlineAccTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 daily_online_acc_time = 38;</code>
       *
       * <pre>
       * 今日在线累计时间
       * </pre>
       */
      public Builder clearDailyOnlineAccTime() {
        bitField0_ = (bitField0_ & ~0x20000000);
        dailyOnlineAccTime_ = 0L;
        onChanged();
        return this;
      }

      private long accumulatedOnlineTime_ ;
      /**
       * <code>optional int64 accumulated_online_time = 39;</code>
       *
       * <pre>
       * 防沉迷累积的在线时间
       * </pre>
       */
      public boolean hasAccumulatedOnlineTime() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int64 accumulated_online_time = 39;</code>
       *
       * <pre>
       * 防沉迷累积的在线时间
       * </pre>
       */
      public long getAccumulatedOnlineTime() {
        return accumulatedOnlineTime_;
      }
      /**
       * <code>optional int64 accumulated_online_time = 39;</code>
       *
       * <pre>
       * 防沉迷累积的在线时间
       * </pre>
       */
      public Builder setAccumulatedOnlineTime(long value) {
        bitField0_ |= 0x40000000;
        accumulatedOnlineTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 accumulated_online_time = 39;</code>
       *
       * <pre>
       * 防沉迷累积的在线时间
       * </pre>
       */
      public Builder clearAccumulatedOnlineTime() {
        bitField0_ = (bitField0_ & ~0x40000000);
        accumulatedOnlineTime_ = 0L;
        onChanged();
        return this;
      }

      private long accumulatedOfflineTime_ ;
      /**
       * <code>optional int64 accumulated_offline_time = 40;</code>
       *
       * <pre>
       * 累积离线经验时间
       * </pre>
       */
      public boolean hasAccumulatedOfflineTime() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int64 accumulated_offline_time = 40;</code>
       *
       * <pre>
       * 累积离线经验时间
       * </pre>
       */
      public long getAccumulatedOfflineTime() {
        return accumulatedOfflineTime_;
      }
      /**
       * <code>optional int64 accumulated_offline_time = 40;</code>
       *
       * <pre>
       * 累积离线经验时间
       * </pre>
       */
      public Builder setAccumulatedOfflineTime(long value) {
        bitField0_ |= 0x80000000;
        accumulatedOfflineTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 accumulated_offline_time = 40;</code>
       *
       * <pre>
       * 累积离线经验时间
       * </pre>
       */
      public Builder clearAccumulatedOfflineTime() {
        bitField0_ = (bitField0_ & ~0x80000000);
        accumulatedOfflineTime_ = 0L;
        onChanged();
        return this;
      }

      private long lastAddAccumulatedOfflineTime_ ;
      /**
       * <code>optional int64 last_add_accumulated_offline_time = 41;</code>
       *
       * <pre>
       * 上次增加离线经验的时间, 检测bug用. 一定 &lt;= lastLogoutTime
       * </pre>
       */
      public boolean hasLastAddAccumulatedOfflineTime() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 last_add_accumulated_offline_time = 41;</code>
       *
       * <pre>
       * 上次增加离线经验的时间, 检测bug用. 一定 &lt;= lastLogoutTime
       * </pre>
       */
      public long getLastAddAccumulatedOfflineTime() {
        return lastAddAccumulatedOfflineTime_;
      }
      /**
       * <code>optional int64 last_add_accumulated_offline_time = 41;</code>
       *
       * <pre>
       * 上次增加离线经验的时间, 检测bug用. 一定 &lt;= lastLogoutTime
       * </pre>
       */
      public Builder setLastAddAccumulatedOfflineTime(long value) {
        bitField1_ |= 0x00000001;
        lastAddAccumulatedOfflineTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 last_add_accumulated_offline_time = 41;</code>
       *
       * <pre>
       * 上次增加离线经验的时间, 检测bug用. 一定 &lt;= lastLogoutTime
       * </pre>
       */
      public Builder clearLastAddAccumulatedOfflineTime() {
        bitField1_ = (bitField1_ & ~0x00000001);
        lastAddAccumulatedOfflineTime_ = 0L;
        onChanged();
        return this;
      }

      private int glamour_ ;
      /**
       * <code>optional int32 glamour = 42;</code>
       *
       * <pre>
       * 魅力值
       * </pre>
       */
      public boolean hasGlamour() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 glamour = 42;</code>
       *
       * <pre>
       * 魅力值
       * </pre>
       */
      public int getGlamour() {
        return glamour_;
      }
      /**
       * <code>optional int32 glamour = 42;</code>
       *
       * <pre>
       * 魅力值
       * </pre>
       */
      public Builder setGlamour(int value) {
        bitField1_ |= 0x00000002;
        glamour_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 glamour = 42;</code>
       *
       * <pre>
       * 魅力值
       * </pre>
       */
      public Builder clearGlamour() {
        bitField1_ = (bitField1_ & ~0x00000002);
        glamour_ = 0;
        onChanged();
        return this;
      }

      private boolean hasGottenFirstRechargePrize_ ;
      /**
       * <code>optional bool hasGottenFirstRechargePrize = 43;</code>
       *
       * <pre>
       * 是否已领取首充奖励
       * </pre>
       */
      public boolean hasHasGottenFirstRechargePrize() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool hasGottenFirstRechargePrize = 43;</code>
       *
       * <pre>
       * 是否已领取首充奖励
       * </pre>
       */
      public boolean getHasGottenFirstRechargePrize() {
        return hasGottenFirstRechargePrize_;
      }
      /**
       * <code>optional bool hasGottenFirstRechargePrize = 43;</code>
       *
       * <pre>
       * 是否已领取首充奖励
       * </pre>
       */
      public Builder setHasGottenFirstRechargePrize(boolean value) {
        bitField1_ |= 0x00000004;
        hasGottenFirstRechargePrize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasGottenFirstRechargePrize = 43;</code>
       *
       * <pre>
       * 是否已领取首充奖励
       * </pre>
       */
      public Builder clearHasGottenFirstRechargePrize() {
        bitField1_ = (bitField1_ & ~0x00000004);
        hasGottenFirstRechargePrize_ = false;
        onChanged();
        return this;
      }

      private java.util.List<app.protobuf.client.UtilContent.Int32PairProto> rechargeItemCounts_ =
        java.util.Collections.emptyList();
      private void ensureRechargeItemCountsIsMutable() {
        if (!((bitField1_ & 0x00000008) == 0x00000008)) {
          rechargeItemCounts_ = new java.util.ArrayList<app.protobuf.client.UtilContent.Int32PairProto>(rechargeItemCounts_);
          bitField1_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          app.protobuf.client.UtilContent.Int32PairProto, app.protobuf.client.UtilContent.Int32PairProto.Builder, app.protobuf.client.UtilContent.Int32PairProtoOrBuilder> rechargeItemCountsBuilder_;

      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public java.util.List<app.protobuf.client.UtilContent.Int32PairProto> getRechargeItemCountsList() {
        if (rechargeItemCountsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rechargeItemCounts_);
        } else {
          return rechargeItemCountsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public int getRechargeItemCountsCount() {
        if (rechargeItemCountsBuilder_ == null) {
          return rechargeItemCounts_.size();
        } else {
          return rechargeItemCountsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public app.protobuf.client.UtilContent.Int32PairProto getRechargeItemCounts(int index) {
        if (rechargeItemCountsBuilder_ == null) {
          return rechargeItemCounts_.get(index);
        } else {
          return rechargeItemCountsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public Builder setRechargeItemCounts(
          int index, app.protobuf.client.UtilContent.Int32PairProto value) {
        if (rechargeItemCountsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRechargeItemCountsIsMutable();
          rechargeItemCounts_.set(index, value);
          onChanged();
        } else {
          rechargeItemCountsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public Builder setRechargeItemCounts(
          int index, app.protobuf.client.UtilContent.Int32PairProto.Builder builderForValue) {
        if (rechargeItemCountsBuilder_ == null) {
          ensureRechargeItemCountsIsMutable();
          rechargeItemCounts_.set(index, builderForValue.build());
          onChanged();
        } else {
          rechargeItemCountsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public Builder addRechargeItemCounts(app.protobuf.client.UtilContent.Int32PairProto value) {
        if (rechargeItemCountsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRechargeItemCountsIsMutable();
          rechargeItemCounts_.add(value);
          onChanged();
        } else {
          rechargeItemCountsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public Builder addRechargeItemCounts(
          int index, app.protobuf.client.UtilContent.Int32PairProto value) {
        if (rechargeItemCountsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRechargeItemCountsIsMutable();
          rechargeItemCounts_.add(index, value);
          onChanged();
        } else {
          rechargeItemCountsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public Builder addRechargeItemCounts(
          app.protobuf.client.UtilContent.Int32PairProto.Builder builderForValue) {
        if (rechargeItemCountsBuilder_ == null) {
          ensureRechargeItemCountsIsMutable();
          rechargeItemCounts_.add(builderForValue.build());
          onChanged();
        } else {
          rechargeItemCountsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public Builder addRechargeItemCounts(
          int index, app.protobuf.client.UtilContent.Int32PairProto.Builder builderForValue) {
        if (rechargeItemCountsBuilder_ == null) {
          ensureRechargeItemCountsIsMutable();
          rechargeItemCounts_.add(index, builderForValue.build());
          onChanged();
        } else {
          rechargeItemCountsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public Builder addAllRechargeItemCounts(
          java.lang.Iterable<? extends app.protobuf.client.UtilContent.Int32PairProto> values) {
        if (rechargeItemCountsBuilder_ == null) {
          ensureRechargeItemCountsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rechargeItemCounts_);
          onChanged();
        } else {
          rechargeItemCountsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public Builder clearRechargeItemCounts() {
        if (rechargeItemCountsBuilder_ == null) {
          rechargeItemCounts_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000008);
          onChanged();
        } else {
          rechargeItemCountsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public Builder removeRechargeItemCounts(int index) {
        if (rechargeItemCountsBuilder_ == null) {
          ensureRechargeItemCountsIsMutable();
          rechargeItemCounts_.remove(index);
          onChanged();
        } else {
          rechargeItemCountsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public app.protobuf.client.UtilContent.Int32PairProto.Builder getRechargeItemCountsBuilder(
          int index) {
        return getRechargeItemCountsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public app.protobuf.client.UtilContent.Int32PairProtoOrBuilder getRechargeItemCountsOrBuilder(
          int index) {
        if (rechargeItemCountsBuilder_ == null) {
          return rechargeItemCounts_.get(index);  } else {
          return rechargeItemCountsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public java.util.List<? extends app.protobuf.client.UtilContent.Int32PairProtoOrBuilder> 
           getRechargeItemCountsOrBuilderList() {
        if (rechargeItemCountsBuilder_ != null) {
          return rechargeItemCountsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rechargeItemCounts_);
        }
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public app.protobuf.client.UtilContent.Int32PairProto.Builder addRechargeItemCountsBuilder() {
        return getRechargeItemCountsFieldBuilder().addBuilder(
            app.protobuf.client.UtilContent.Int32PairProto.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public app.protobuf.client.UtilContent.Int32PairProto.Builder addRechargeItemCountsBuilder(
          int index) {
        return getRechargeItemCountsFieldBuilder().addBuilder(
            index, app.protobuf.client.UtilContent.Int32PairProto.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.Int32PairProto rechargeItemCounts = 44;</code>
       *
       * <pre>
       * 充值项对应的个数，只记录已充值项
       * </pre>
       */
      public java.util.List<app.protobuf.client.UtilContent.Int32PairProto.Builder> 
           getRechargeItemCountsBuilderList() {
        return getRechargeItemCountsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          app.protobuf.client.UtilContent.Int32PairProto, app.protobuf.client.UtilContent.Int32PairProto.Builder, app.protobuf.client.UtilContent.Int32PairProtoOrBuilder> 
          getRechargeItemCountsFieldBuilder() {
        if (rechargeItemCountsBuilder_ == null) {
          rechargeItemCountsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              app.protobuf.client.UtilContent.Int32PairProto, app.protobuf.client.UtilContent.Int32PairProto.Builder, app.protobuf.client.UtilContent.Int32PairProtoOrBuilder>(
                  rechargeItemCounts_,
                  ((bitField1_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          rechargeItemCounts_ = null;
        }
        return rechargeItemCountsBuilder_;
      }

      private java.util.List<app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto> dailyDiamondItems_ =
        java.util.Collections.emptyList();
      private void ensureDailyDiamondItemsIsMutable() {
        if (!((bitField1_ & 0x00000010) == 0x00000010)) {
          dailyDiamondItems_ = new java.util.ArrayList<app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto>(dailyDiamondItems_);
          bitField1_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto, app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.Builder, app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProtoOrBuilder> dailyDiamondItemsBuilder_;

      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public java.util.List<app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto> getDailyDiamondItemsList() {
        if (dailyDiamondItemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dailyDiamondItems_);
        } else {
          return dailyDiamondItemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public int getDailyDiamondItemsCount() {
        if (dailyDiamondItemsBuilder_ == null) {
          return dailyDiamondItems_.size();
        } else {
          return dailyDiamondItemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto getDailyDiamondItems(int index) {
        if (dailyDiamondItemsBuilder_ == null) {
          return dailyDiamondItems_.get(index);
        } else {
          return dailyDiamondItemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public Builder setDailyDiamondItems(
          int index, app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto value) {
        if (dailyDiamondItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDailyDiamondItemsIsMutable();
          dailyDiamondItems_.set(index, value);
          onChanged();
        } else {
          dailyDiamondItemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public Builder setDailyDiamondItems(
          int index, app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.Builder builderForValue) {
        if (dailyDiamondItemsBuilder_ == null) {
          ensureDailyDiamondItemsIsMutable();
          dailyDiamondItems_.set(index, builderForValue.build());
          onChanged();
        } else {
          dailyDiamondItemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public Builder addDailyDiamondItems(app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto value) {
        if (dailyDiamondItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDailyDiamondItemsIsMutable();
          dailyDiamondItems_.add(value);
          onChanged();
        } else {
          dailyDiamondItemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public Builder addDailyDiamondItems(
          int index, app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto value) {
        if (dailyDiamondItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDailyDiamondItemsIsMutable();
          dailyDiamondItems_.add(index, value);
          onChanged();
        } else {
          dailyDiamondItemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public Builder addDailyDiamondItems(
          app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.Builder builderForValue) {
        if (dailyDiamondItemsBuilder_ == null) {
          ensureDailyDiamondItemsIsMutable();
          dailyDiamondItems_.add(builderForValue.build());
          onChanged();
        } else {
          dailyDiamondItemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public Builder addDailyDiamondItems(
          int index, app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.Builder builderForValue) {
        if (dailyDiamondItemsBuilder_ == null) {
          ensureDailyDiamondItemsIsMutable();
          dailyDiamondItems_.add(index, builderForValue.build());
          onChanged();
        } else {
          dailyDiamondItemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public Builder addAllDailyDiamondItems(
          java.lang.Iterable<? extends app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto> values) {
        if (dailyDiamondItemsBuilder_ == null) {
          ensureDailyDiamondItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dailyDiamondItems_);
          onChanged();
        } else {
          dailyDiamondItemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public Builder clearDailyDiamondItems() {
        if (dailyDiamondItemsBuilder_ == null) {
          dailyDiamondItems_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000010);
          onChanged();
        } else {
          dailyDiamondItemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public Builder removeDailyDiamondItems(int index) {
        if (dailyDiamondItemsBuilder_ == null) {
          ensureDailyDiamondItemsIsMutable();
          dailyDiamondItems_.remove(index);
          onChanged();
        } else {
          dailyDiamondItemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.Builder getDailyDiamondItemsBuilder(
          int index) {
        return getDailyDiamondItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProtoOrBuilder getDailyDiamondItemsOrBuilder(
          int index) {
        if (dailyDiamondItemsBuilder_ == null) {
          return dailyDiamondItems_.get(index);  } else {
          return dailyDiamondItemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public java.util.List<? extends app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProtoOrBuilder> 
           getDailyDiamondItemsOrBuilderList() {
        if (dailyDiamondItemsBuilder_ != null) {
          return dailyDiamondItemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dailyDiamondItems_);
        }
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.Builder addDailyDiamondItemsBuilder() {
        return getDailyDiamondItemsFieldBuilder().addBuilder(
            app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.Builder addDailyDiamondItemsBuilder(
          int index) {
        return getDailyDiamondItemsFieldBuilder().addBuilder(
            index, app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.DailyDiamondItemInfoServerProto dailyDiamondItems = 45;</code>
       *
       * <pre>
       * 已充值的每日领取钻石
       * </pre>
       */
      public java.util.List<app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.Builder> 
           getDailyDiamondItemsBuilderList() {
        return getDailyDiamondItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto, app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.Builder, app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProtoOrBuilder> 
          getDailyDiamondItemsFieldBuilder() {
        if (dailyDiamondItemsBuilder_ == null) {
          dailyDiamondItemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto, app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.Builder, app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProtoOrBuilder>(
                  dailyDiamondItems_,
                  ((bitField1_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          dailyDiamondItems_ = null;
        }
        return dailyDiamondItemsBuilder_;
      }

      private int dailyRechargeDiamond_ ;
      /**
       * <code>optional int32 dailyRechargeDiamond = 46;</code>
       *
       * <pre>
       * 每日参与运营活动的充值额
       * </pre>
       */
      public boolean hasDailyRechargeDiamond() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 dailyRechargeDiamond = 46;</code>
       *
       * <pre>
       * 每日参与运营活动的充值额
       * </pre>
       */
      public int getDailyRechargeDiamond() {
        return dailyRechargeDiamond_;
      }
      /**
       * <code>optional int32 dailyRechargeDiamond = 46;</code>
       *
       * <pre>
       * 每日参与运营活动的充值额
       * </pre>
       */
      public Builder setDailyRechargeDiamond(int value) {
        bitField1_ |= 0x00000020;
        dailyRechargeDiamond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dailyRechargeDiamond = 46;</code>
       *
       * <pre>
       * 每日参与运营活动的充值额
       * </pre>
       */
      public Builder clearDailyRechargeDiamond() {
        bitField1_ = (bitField1_ & ~0x00000020);
        dailyRechargeDiamond_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto> dailyRechargeColletions_ =
        java.util.Collections.emptyList();
      private void ensureDailyRechargeColletionsIsMutable() {
        if (!((bitField1_ & 0x00000040) == 0x00000040)) {
          dailyRechargeColletions_ = new java.util.ArrayList<app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto>(dailyRechargeColletions_);
          bitField1_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto, app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto.Builder, app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProtoOrBuilder> dailyRechargeColletionsBuilder_;

      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public java.util.List<app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto> getDailyRechargeColletionsList() {
        if (dailyRechargeColletionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dailyRechargeColletions_);
        } else {
          return dailyRechargeColletionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public int getDailyRechargeColletionsCount() {
        if (dailyRechargeColletionsBuilder_ == null) {
          return dailyRechargeColletions_.size();
        } else {
          return dailyRechargeColletionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto getDailyRechargeColletions(int index) {
        if (dailyRechargeColletionsBuilder_ == null) {
          return dailyRechargeColletions_.get(index);
        } else {
          return dailyRechargeColletionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public Builder setDailyRechargeColletions(
          int index, app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto value) {
        if (dailyRechargeColletionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDailyRechargeColletionsIsMutable();
          dailyRechargeColletions_.set(index, value);
          onChanged();
        } else {
          dailyRechargeColletionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public Builder setDailyRechargeColletions(
          int index, app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto.Builder builderForValue) {
        if (dailyRechargeColletionsBuilder_ == null) {
          ensureDailyRechargeColletionsIsMutable();
          dailyRechargeColletions_.set(index, builderForValue.build());
          onChanged();
        } else {
          dailyRechargeColletionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public Builder addDailyRechargeColletions(app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto value) {
        if (dailyRechargeColletionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDailyRechargeColletionsIsMutable();
          dailyRechargeColletions_.add(value);
          onChanged();
        } else {
          dailyRechargeColletionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public Builder addDailyRechargeColletions(
          int index, app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto value) {
        if (dailyRechargeColletionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDailyRechargeColletionsIsMutable();
          dailyRechargeColletions_.add(index, value);
          onChanged();
        } else {
          dailyRechargeColletionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public Builder addDailyRechargeColletions(
          app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto.Builder builderForValue) {
        if (dailyRechargeColletionsBuilder_ == null) {
          ensureDailyRechargeColletionsIsMutable();
          dailyRechargeColletions_.add(builderForValue.build());
          onChanged();
        } else {
          dailyRechargeColletionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public Builder addDailyRechargeColletions(
          int index, app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto.Builder builderForValue) {
        if (dailyRechargeColletionsBuilder_ == null) {
          ensureDailyRechargeColletionsIsMutable();
          dailyRechargeColletions_.add(index, builderForValue.build());
          onChanged();
        } else {
          dailyRechargeColletionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public Builder addAllDailyRechargeColletions(
          java.lang.Iterable<? extends app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto> values) {
        if (dailyRechargeColletionsBuilder_ == null) {
          ensureDailyRechargeColletionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dailyRechargeColletions_);
          onChanged();
        } else {
          dailyRechargeColletionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public Builder clearDailyRechargeColletions() {
        if (dailyRechargeColletionsBuilder_ == null) {
          dailyRechargeColletions_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000040);
          onChanged();
        } else {
          dailyRechargeColletionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public Builder removeDailyRechargeColletions(int index) {
        if (dailyRechargeColletionsBuilder_ == null) {
          ensureDailyRechargeColletionsIsMutable();
          dailyRechargeColletions_.remove(index);
          onChanged();
        } else {
          dailyRechargeColletionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto.Builder getDailyRechargeColletionsBuilder(
          int index) {
        return getDailyRechargeColletionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProtoOrBuilder getDailyRechargeColletionsOrBuilder(
          int index) {
        if (dailyRechargeColletionsBuilder_ == null) {
          return dailyRechargeColletions_.get(index);  } else {
          return dailyRechargeColletionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public java.util.List<? extends app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProtoOrBuilder> 
           getDailyRechargeColletionsOrBuilderList() {
        if (dailyRechargeColletionsBuilder_ != null) {
          return dailyRechargeColletionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dailyRechargeColletions_);
        }
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto.Builder addDailyRechargeColletionsBuilder() {
        return getDailyRechargeColletionsFieldBuilder().addBuilder(
            app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto.Builder addDailyRechargeColletionsBuilder(
          int index) {
        return getDailyRechargeColletionsFieldBuilder().addBuilder(
            index, app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.DailyRechargeInfoProto dailyRechargeColletions = 47;</code>
       *
       * <pre>
       * 每日累充的挡位信息，只记录可领取和已领取的挡位
       * </pre>
       */
      public java.util.List<app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto.Builder> 
           getDailyRechargeColletionsBuilderList() {
        return getDailyRechargeColletionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto, app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto.Builder, app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProtoOrBuilder> 
          getDailyRechargeColletionsFieldBuilder() {
        if (dailyRechargeColletionsBuilder_ == null) {
          dailyRechargeColletionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto, app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProto.Builder, app.protobuf.client.HeroMiscClientContent.DailyRechargeInfoProtoOrBuilder>(
                  dailyRechargeColletions_,
                  ((bitField1_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          dailyRechargeColletions_ = null;
        }
        return dailyRechargeColletionsBuilder_;
      }

      private int rechargeDays_ ;
      /**
       * <code>optional int32 rechargeDays = 48;</code>
       *
       * <pre>
       * 可以领取的满足充值额的累计充值天数
       * </pre>
       */
      public boolean hasRechargeDays() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 rechargeDays = 48;</code>
       *
       * <pre>
       * 可以领取的满足充值额的累计充值天数
       * </pre>
       */
      public int getRechargeDays() {
        return rechargeDays_;
      }
      /**
       * <code>optional int32 rechargeDays = 48;</code>
       *
       * <pre>
       * 可以领取的满足充值额的累计充值天数
       * </pre>
       */
      public Builder setRechargeDays(int value) {
        bitField1_ |= 0x00000080;
        rechargeDays_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rechargeDays = 48;</code>
       *
       * <pre>
       * 可以领取的满足充值额的累计充值天数
       * </pre>
       */
      public Builder clearRechargeDays() {
        bitField1_ = (bitField1_ & ~0x00000080);
        rechargeDays_ = 0;
        onChanged();
        return this;
      }

      private int rechargeDaysCollection_ ;
      /**
       * <code>optional int32 rechargeDaysCollection = 49;</code>
       *
       * <pre>
       * 已领取的累计充值额对应项
       * </pre>
       */
      public boolean hasRechargeDaysCollection() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 rechargeDaysCollection = 49;</code>
       *
       * <pre>
       * 已领取的累计充值额对应项
       * </pre>
       */
      public int getRechargeDaysCollection() {
        return rechargeDaysCollection_;
      }
      /**
       * <code>optional int32 rechargeDaysCollection = 49;</code>
       *
       * <pre>
       * 已领取的累计充值额对应项
       * </pre>
       */
      public Builder setRechargeDaysCollection(int value) {
        bitField1_ |= 0x00000100;
        rechargeDaysCollection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rechargeDaysCollection = 49;</code>
       *
       * <pre>
       * 已领取的累计充值额对应项
       * </pre>
       */
      public Builder clearRechargeDaysCollection() {
        bitField1_ = (bitField1_ & ~0x00000100);
        rechargeDaysCollection_ = 0;
        onChanged();
        return this;
      }

      private long maxFightAmount_ ;
      /**
       * <code>optional int64 maxFightAmount = 50;</code>
       *
       * <pre>
       * 角色达到的最高战力
       * </pre>
       */
      public boolean hasMaxFightAmount() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 maxFightAmount = 50;</code>
       *
       * <pre>
       * 角色达到的最高战力
       * </pre>
       */
      public long getMaxFightAmount() {
        return maxFightAmount_;
      }
      /**
       * <code>optional int64 maxFightAmount = 50;</code>
       *
       * <pre>
       * 角色达到的最高战力
       * </pre>
       */
      public Builder setMaxFightAmount(long value) {
        bitField1_ |= 0x00000200;
        maxFightAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 maxFightAmount = 50;</code>
       *
       * <pre>
       * 角色达到的最高战力
       * </pre>
       */
      public Builder clearMaxFightAmount() {
        bitField1_ = (bitField1_ & ~0x00000200);
        maxFightAmount_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.HeroMiscModuleObjMinorProto)
    }

    static {
      defaultInstance = new HeroMiscModuleObjMinorProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.HeroMiscModuleObjMinorProto)
  }

  public interface DailyDiamondItemInfoServerProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.DailyDiamondItemInfoServerProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 对应充值项的id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 对应充值项的id
     * </pre>
     */
    int getId();

    /**
     * <code>optional int64 endTime = 2;</code>
     *
     * <pre>
     * 结束的时间，最后一天的24点
     * </pre>
     */
    boolean hasEndTime();
    /**
     * <code>optional int64 endTime = 2;</code>
     *
     * <pre>
     * 结束的时间，最后一天的24点
     * </pre>
     */
    long getEndTime();

    /**
     * <code>optional int64 lastGetPrizeTime = 3;</code>
     *
     * <pre>
     * 上次领取的时间，当日0点
     * </pre>
     */
    boolean hasLastGetPrizeTime();
    /**
     * <code>optional int64 lastGetPrizeTime = 3;</code>
     *
     * <pre>
     * 上次领取的时间，当日0点
     * </pre>
     */
    long getLastGetPrizeTime();
  }
  /**
   * Protobuf type {@code proto.DailyDiamondItemInfoServerProto}
   */
  public static final class DailyDiamondItemInfoServerProto extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.DailyDiamondItemInfoServerProto)
      DailyDiamondItemInfoServerProtoOrBuilder {
    // Use DailyDiamondItemInfoServerProto.newBuilder() to construct.
    private DailyDiamondItemInfoServerProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DailyDiamondItemInfoServerProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DailyDiamondItemInfoServerProto defaultInstance;
    public static DailyDiamondItemInfoServerProto getDefaultInstance() {
      return defaultInstance;
    }

    public DailyDiamondItemInfoServerProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DailyDiamondItemInfoServerProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              endTime_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lastGetPrizeTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return app.protobuf.server.HeroMiscServerContent.internal_static_proto_DailyDiamondItemInfoServerProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return app.protobuf.server.HeroMiscServerContent.internal_static_proto_DailyDiamondItemInfoServerProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.class, app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.Builder.class);
    }

    public static com.google.protobuf.Parser<DailyDiamondItemInfoServerProto> PARSER =
        new com.google.protobuf.AbstractParser<DailyDiamondItemInfoServerProto>() {
      public DailyDiamondItemInfoServerProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DailyDiamondItemInfoServerProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DailyDiamondItemInfoServerProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 对应充值项的id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 对应充值项的id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    public static final int ENDTIME_FIELD_NUMBER = 2;
    private long endTime_;
    /**
     * <code>optional int64 endTime = 2;</code>
     *
     * <pre>
     * 结束的时间，最后一天的24点
     * </pre>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 endTime = 2;</code>
     *
     * <pre>
     * 结束的时间，最后一天的24点
     * </pre>
     */
    public long getEndTime() {
      return endTime_;
    }

    public static final int LASTGETPRIZETIME_FIELD_NUMBER = 3;
    private long lastGetPrizeTime_;
    /**
     * <code>optional int64 lastGetPrizeTime = 3;</code>
     *
     * <pre>
     * 上次领取的时间，当日0点
     * </pre>
     */
    public boolean hasLastGetPrizeTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 lastGetPrizeTime = 3;</code>
     *
     * <pre>
     * 上次领取的时间，当日0点
     * </pre>
     */
    public long getLastGetPrizeTime() {
      return lastGetPrizeTime_;
    }

    private void initFields() {
      id_ = 0;
      endTime_ = 0L;
      lastGetPrizeTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, endTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, lastGetPrizeTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, endTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, lastGetPrizeTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.DailyDiamondItemInfoServerProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.DailyDiamondItemInfoServerProto)
        app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return app.protobuf.server.HeroMiscServerContent.internal_static_proto_DailyDiamondItemInfoServerProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return app.protobuf.server.HeroMiscServerContent.internal_static_proto_DailyDiamondItemInfoServerProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.class, app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.Builder.class);
      }

      // Construct using app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        endTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        lastGetPrizeTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return app.protobuf.server.HeroMiscServerContent.internal_static_proto_DailyDiamondItemInfoServerProto_descriptor;
      }

      public app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto getDefaultInstanceForType() {
        return app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.getDefaultInstance();
      }

      public app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto build() {
        app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto buildPartial() {
        app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto result = new app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lastGetPrizeTime_ = lastGetPrizeTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto) {
          return mergeFrom((app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto other) {
        if (other == app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasLastGetPrizeTime()) {
          setLastGetPrizeTime(other.getLastGetPrizeTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (app.protobuf.server.HeroMiscServerContent.DailyDiamondItemInfoServerProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 对应充值项的id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 对应充值项的id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 对应充值项的id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 对应充值项的id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private long endTime_ ;
      /**
       * <code>optional int64 endTime = 2;</code>
       *
       * <pre>
       * 结束的时间，最后一天的24点
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 endTime = 2;</code>
       *
       * <pre>
       * 结束的时间，最后一天的24点
       * </pre>
       */
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>optional int64 endTime = 2;</code>
       *
       * <pre>
       * 结束的时间，最后一天的24点
       * </pre>
       */
      public Builder setEndTime(long value) {
        bitField0_ |= 0x00000002;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endTime = 2;</code>
       *
       * <pre>
       * 结束的时间，最后一天的24点
       * </pre>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endTime_ = 0L;
        onChanged();
        return this;
      }

      private long lastGetPrizeTime_ ;
      /**
       * <code>optional int64 lastGetPrizeTime = 3;</code>
       *
       * <pre>
       * 上次领取的时间，当日0点
       * </pre>
       */
      public boolean hasLastGetPrizeTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 lastGetPrizeTime = 3;</code>
       *
       * <pre>
       * 上次领取的时间，当日0点
       * </pre>
       */
      public long getLastGetPrizeTime() {
        return lastGetPrizeTime_;
      }
      /**
       * <code>optional int64 lastGetPrizeTime = 3;</code>
       *
       * <pre>
       * 上次领取的时间，当日0点
       * </pre>
       */
      public Builder setLastGetPrizeTime(long value) {
        bitField0_ |= 0x00000004;
        lastGetPrizeTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 lastGetPrizeTime = 3;</code>
       *
       * <pre>
       * 上次领取的时间，当日0点
       * </pre>
       */
      public Builder clearLastGetPrizeTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lastGetPrizeTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.DailyDiamondItemInfoServerProto)
    }

    static {
      defaultInstance = new DailyDiamondItemInfoServerProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.DailyDiamondItemInfoServerProto)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_HeroMiscModuleObjServerProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_HeroMiscModuleObjServerProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_HeroMiscModuleObjMinorProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_HeroMiscModuleObjMinorProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_DailyDiamondItemInfoServerProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_DailyDiamondItemInfoServerProto_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035server/hero_misc_server.proto\022\005proto\032\035" +
      "client/hero_misc_client.proto\032\021client/ut" +
      "il.proto\"=\n\034HeroMiscModuleObjServerProto" +
      "\022\035\n\025has_recharged_diamond\030\001 \001(\010\"\371\t\n\033Hero" +
      "MiscModuleObjMinorProto\022\017\n\007diamond\030\001 \001(\003" +
      "\022\025\n\rsystemDiamond\030\002 \001(\003\022\023\n\013bindDiamond\030\003" +
      " \001(\003\022\r\n\005money\030\004 \001(\003\022\020\n\010rune_exp\030\005 \001(\003\022\022\n" +
      "\nrune_slice\030\006 \001(\003\022\r\n\005honor\030\007 \001(\003\022\032\n\022guil" +
      "d_contribution\030\010 \001(\003\022\033\n\023guild_storage_po" +
      "int\030\t \001(\003\022\037\n\027last_reset_monthly_time\030\n \001",
      "(\003\022\035\n\025last_reset_daily_time\030\013 \001(\003\022\036\n\026las" +
      "t_reset_weekly_time\030\014 \001(\003\022\023\n\013guild_money" +
      "\030\r \001(\003\022\033\n\023equip_lottery_score\030\016 \001(\003\022\027\n\017l" +
      "uck_shop_score\030\017 \001(\003\022\024\n\014heraldry_exp\030\020 \001" +
      "(\003\022\032\n\022heraldry_stone_one\030\021 \001(\003\022\032\n\022herald" +
      "ry_stone_two\030\022 \001(\003\022\034\n\024totalRechargeDiamo" +
      "nd\030\024 \001(\003\022\036\n\026totalGMRechargeDiamond\030\031 \001(\003" +
      "\022\033\n\023totalConsumeDiamond\030\025 \001(\003\022\030\n\020totalRe" +
      "chargeRmb\030\026 \001(\005\022\035\n\025lastAuctionPwdErrTime" +
      "\030\027 \001(\003\022\032\n\022auctionPwdErrCount\030\030 \001(\005\0221\n\016cl",
      "ient_configs\030\034 \001(\0132\031.proto.ClientConfigs" +
      "Proto\022\021\n\tlogin_day\030\036 \001(\005\022\027\n\017last_login_t" +
      "ime\030# \001(\003\022\030\n\020last_logout_time\030$ \001(\003\022\031\n\021t" +
      "otal_online_time\030% \001(\003\022\035\n\025daily_online_a" +
      "cc_time\030& \001(\003\022\037\n\027accumulated_online_time" +
      "\030\' \001(\003\022 \n\030accumulated_offline_time\030( \001(\003" +
      "\022)\n!last_add_accumulated_offline_time\030) " +
      "\001(\003\022\017\n\007glamour\030* \001(\005\022#\n\033hasGottenFirstRe" +
      "chargePrize\030+ \001(\010\0221\n\022rechargeItemCounts\030" +
      ", \003(\0132\025.proto.Int32PairProto\022A\n\021dailyDia",
      "mondItems\030- \003(\0132&.proto.DailyDiamondItem" +
      "InfoServerProto\022\034\n\024dailyRechargeDiamond\030" +
      ". \001(\005\022>\n\027dailyRechargeColletions\030/ \003(\0132\035" +
      ".proto.DailyRechargeInfoProto\022\024\n\014recharg" +
      "eDays\0300 \001(\005\022\036\n\026rechargeDaysCollection\0301 " +
      "\001(\005\022\026\n\016maxFightAmount\0302 \001(\003\"X\n\037DailyDiam" +
      "ondItemInfoServerProto\022\n\n\002id\030\001 \001(\005\022\017\n\007en" +
      "dTime\030\002 \001(\003\022\030\n\020lastGetPrizeTime\030\003 \001(\003B.\n" +
      "\023app.protobuf.serverB\025HeroMiscServerCont" +
      "entH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          app.protobuf.client.HeroMiscClientContent.getDescriptor(),
          app.protobuf.client.UtilContent.getDescriptor(),
        }, assigner);
    internal_static_proto_HeroMiscModuleObjServerProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_proto_HeroMiscModuleObjServerProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_HeroMiscModuleObjServerProto_descriptor,
        new java.lang.String[] { "HasRechargedDiamond", });
    internal_static_proto_HeroMiscModuleObjMinorProto_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_proto_HeroMiscModuleObjMinorProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_HeroMiscModuleObjMinorProto_descriptor,
        new java.lang.String[] { "Diamond", "SystemDiamond", "BindDiamond", "Money", "RuneExp", "RuneSlice", "Honor", "GuildContribution", "GuildStoragePoint", "LastResetMonthlyTime", "LastResetDailyTime", "LastResetWeeklyTime", "GuildMoney", "EquipLotteryScore", "LuckShopScore", "HeraldryExp", "HeraldryStoneOne", "HeraldryStoneTwo", "TotalRechargeDiamond", "TotalGMRechargeDiamond", "TotalConsumeDiamond", "TotalRechargeRmb", "LastAuctionPwdErrTime", "AuctionPwdErrCount", "ClientConfigs", "LoginDay", "LastLoginTime", "LastLogoutTime", "TotalOnlineTime", "DailyOnlineAccTime", "AccumulatedOnlineTime", "AccumulatedOfflineTime", "LastAddAccumulatedOfflineTime", "Glamour", "HasGottenFirstRechargePrize", "RechargeItemCounts", "DailyDiamondItems", "DailyRechargeDiamond", "DailyRechargeColletions", "RechargeDays", "RechargeDaysCollection", "MaxFightAmount", });
    internal_static_proto_DailyDiamondItemInfoServerProto_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_proto_DailyDiamondItemInfoServerProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_DailyDiamondItemInfoServerProto_descriptor,
        new java.lang.String[] { "Id", "EndTime", "LastGetPrizeTime", });
    app.protobuf.client.HeroMiscClientContent.getDescriptor();
    app.protobuf.client.UtilContent.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
